'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars, max-len */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _new = require('../../../../src/actions/menu/driver/order/new');

var _new2 = _interopRequireDefault(_new);

var _specSupport = require('../../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var user = { userKey: 'cli_1', state: { phone: '(555) 123-11-22', identity: 31337 } };

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _new2.default({ i18n: _specSupport.i18n, user: user });
  t.pass();
});

(0, _ava2.default)('should return composite response on call', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder(),
      _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder(),
      _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder(),
      _rec19 = new _powerAssertRecorder(),
      _rec20 = new _powerAssertRecorder(),
      _rec21 = new _powerAssertRecorder(),
      _rec22 = new _powerAssertRecorder(),
      _rec23 = new _powerAssertRecorder(),
      _rec24 = new _powerAssertRecorder(),
      _rec25 = new _powerAssertRecorder(),
      _rec26 = new _powerAssertRecorder(),
      _rec27 = new _powerAssertRecorder(),
      _rec28 = new _powerAssertRecorder(),
      _rec29 = new _powerAssertRecorder(),
      _rec30 = new _powerAssertRecorder(),
      _rec31 = new _powerAssertRecorder(),
      _rec32 = new _powerAssertRecorder(),
      _rec33 = new _powerAssertRecorder(),
      _rec34 = new _powerAssertRecorder(),
      _rec35 = new _powerAssertRecorder(),
      _rec36 = new _powerAssertRecorder(),
      _rec37 = new _powerAssertRecorder(),
      _rec38 = new _powerAssertRecorder(),
      _rec39 = new _powerAssertRecorder(),
      _rec40 = new _powerAssertRecorder(),
      _rec41 = new _powerAssertRecorder(),
      _rec42 = new _powerAssertRecorder(),
      _rec43 = new _powerAssertRecorder(),
      _rec44 = new _powerAssertRecorder(),
      _rec45 = new _powerAssertRecorder(),
      _rec46 = new _powerAssertRecorder(),
      _rec47 = new _powerAssertRecorder(),
      _rec48 = new _powerAssertRecorder(),
      _rec49 = new _powerAssertRecorder(),
      _rec50 = new _powerAssertRecorder();

  var args = { distance: 10, from: [37.421955, -122.084058], to: 'foo', price: '50',
    passengerKey: 'cli_2', orderKey: 'd3adb33f' };
  var action = new _new2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.call(args);
  t.is(_rec._expr(_rec._capt(_rec._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 37
  }), 'composite');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'interrupt-prompt\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 38
  }), 'interrupt-prompt');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'user-state\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 39
  }), 'user-state');
  t.is(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[2].type, \'text\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 40
  }), 'text');
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_rec5._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[2].message, i18n.__(\'driver-order-new.new_order\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 41
  }), _rec6._expr(_rec6._capt(_rec6._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.new_order'), 'arguments/1'), {
    content: 't.is(response.responses[2].message, i18n.__(\'driver-order-new.new_order\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 41
  }));
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[3], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[3].type, \'text\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 42
  }), 'text');
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[3], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[3].message, i18n.__(\'driver-order-new.distance\', \'10.0 km\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 43
  }), _rec9._expr(_rec9._capt(_rec9._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.distance', '10.0 km'), 'arguments/1'), {
    content: 't.is(response.responses[3].message, i18n.__(\'driver-order-new.distance\', \'10.0 km\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 43
  }));
  t.is(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(_rec10._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[4], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[4].type, \'map\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 44
  }), 'map');
  t.deepEqual(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(_rec11._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[4], 'arguments/0/object').location, 'arguments/0'), {
    content: 't.deepEqual(response.responses[4].location, [37.421955, -122.084058])',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 45
  }), _rec12._expr(_rec12._capt([37.421955, _rec12._capt(-122.084058, 'arguments/1/elements/1')], 'arguments/1'), {
    content: 't.deepEqual(response.responses[4].location, [37.421955, -122.084058])',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 45
  }));
  t.is(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[5], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[5].type, \'text\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 46
  }), 'text');
  t.is(_rec14._expr(_rec14._capt(_rec14._capt(_rec14._capt(_rec14._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[5], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[5].message, i18n.__(\'driver-order-new.to\', \'foo\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 47
  }), _rec15._expr(_rec15._capt(_rec15._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.to', 'foo'), 'arguments/1'), {
    content: 't.is(response.responses[5].message, i18n.__(\'driver-order-new.to\', \'foo\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 47
  }));
  t.is(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(_rec16._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[6], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[6].type, \'if\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 48
  }), 'if');
  t.is(_rec17._expr(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[6], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[6].condition.type, \'zero-price\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 49
  }), 'zero-price');
  t.is(_rec18._expr(_rec18._capt(_rec18._capt(_rec18._capt(_rec18._capt(_rec18._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[6], 'arguments/0/object/object').condition, 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[6].condition.value, \'50\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 50
  }), '50');
  t.is(_rec19._expr(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[6], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[6].ok.type, \'text\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 51
  }), 'text');
  t.is(_rec20._expr(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[6], 'arguments/0/object/object').ok, 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[6].ok.message, i18n.__(\'driver-order-new.price_not_set\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 52
  }), _rec21._expr(_rec21._capt(_rec21._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.price_not_set'), 'arguments/1'), {
    content: 't.is(response.responses[6].ok.message, i18n.__(\'driver-order-new.price_not_set\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 52
  }));
  t.is(_rec22._expr(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[6], 'arguments/0/object/object').err, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[6].err.type, \'text\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 53
  }), 'text');
  t.is(_rec23._expr(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[6], 'arguments/0/object/object').err, 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[6].err.message, i18n.__(\'driver-order-new.price\', \'50\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 54
  }), _rec24._expr(_rec24._capt(_rec24._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.price', '50'), 'arguments/1'), {
    content: 't.is(response.responses[6].err.message, i18n.__(\'driver-order-new.price\', \'50\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 54
  }));
  t.is(_rec25._expr(_rec25._capt(_rec25._capt(_rec25._capt(_rec25._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[7], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[7].type, \'text\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 55
  }), 'text');
  t.is(_rec26._expr(_rec26._capt(_rec26._capt(_rec26._capt(_rec26._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[7], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[7].message, i18n.__(\'driver-order-new.call_to_action\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 56
  }), _rec27._expr(_rec27._capt(_rec27._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.call_to_action'), 'arguments/1'), {
    content: 't.is(response.responses[7].message, i18n.__(\'driver-order-new.call_to_action\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 56
  }));
  t.is(_rec28._expr(_rec28._capt(_rec28._capt(_rec28._capt(_rec28._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[8], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[8].type, \'if\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 57
  }), 'if');
  t.is(_rec29._expr(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[8], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[8].condition.type, \'zero-price\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 58
  }), 'zero-price');
  t.is(_rec30._expr(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[8], 'arguments/0/object/object').condition, 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[8].condition.value, \'50\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 59
  }), '50');
  t.is(_rec31._expr(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[8], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[8].ok.type, \'inline-options\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 60
  }), 'inline-options');
  t.is(_rec32._expr(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(response, 'arguments/0/object/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object/object')[8], 'arguments/0/object/object/object/object/object').ok, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(response.responses[8].ok.rows[0][0].label, i18n.__(\'driver-order-new.set_my_price\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 61
  }), _rec33._expr(_rec33._capt(_rec33._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.set_my_price'), 'arguments/1'), {
    content: 't.is(response.responses[8].ok.rows[0][0].label, i18n.__(\'driver-order-new.set_my_price\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 61
  }));
  var button2 = response.responses[8].ok.rows[0][0].value;
  t.regex(_rec34._expr(_rec34._capt(button2, 'arguments/0'), {
    content: 't.regex(button2, ss.guidRegex)',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 63
  }), _rec35._expr(_rec35._capt(_rec35._capt(_specSupport.ss, 'arguments/1/object').guidRegex, 'arguments/1'), {
    content: 't.regex(button2, ss.guidRegex)',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 63
  }));
  t.is(_rec36._expr(_rec36._capt(_rec36._capt(_rec36._capt(_rec36._capt(_rec36._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[8], 'arguments/0/object/object').err, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[8].err.type, \'inline-options\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 64
  }), 'inline-options');
  t.is(_rec37._expr(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(response, 'arguments/0/object/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object/object')[8], 'arguments/0/object/object/object/object/object').err, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(response.responses[8].err.rows[0][0].label, i18n.__(\'driver-order-new.send_my_number\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 65
  }), _rec38._expr(_rec38._capt(_rec38._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.send_my_number'), 'arguments/1'), {
    content: 't.is(response.responses[8].err.rows[0][0].label, i18n.__(\'driver-order-new.send_my_number\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 65
  }));
  var button1 = response.responses[8].err.rows[0][0].value;
  t.regex(_rec39._expr(_rec39._capt(button1, 'arguments/0'), {
    content: 't.regex(button1, ss.guidRegex)',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 67
  }), _rec40._expr(_rec40._capt(_rec40._capt(_specSupport.ss, 'arguments/1/object').guidRegex, 'arguments/1'), {
    content: 't.regex(button1, ss.guidRegex)',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 67
  }));
  t.is(_rec41._expr(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(response, 'arguments/0/object/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object/object')[8], 'arguments/0/object/object/object/object/object').err, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(response.responses[8].err.rows[0][1].label, i18n.__(\'driver-order-new.set_my_price\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 68
  }), _rec42._expr(_rec42._capt(_rec42._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-order-new.set_my_price'), 'arguments/1'), {
    content: 't.is(response.responses[8].err.rows[0][1].label, i18n.__(\'driver-order-new.set_my_price\'))',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 68
  }));
  t.is(_rec43._expr(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(response, 'arguments/0/object/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object/object')[8], 'arguments/0/object/object/object/object/object').err, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[8].err.rows[0][1].value, button2)',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 69
  }), _rec44._expr(_rec44._capt(button2, 'arguments/1'), {
    content: 't.is(response.responses[8].err.rows[0][1].value, button2)',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 69
  }));
  t.is(_rec45._expr(_rec45._capt(_rec45._capt(_rec45._capt(_rec45._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[9], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[9].type, \'redirect\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 70
  }), 'redirect');
  t.is(_rec46._expr(_rec46._capt(_rec46._capt(_rec46._capt(_rec46._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[9], 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[9].path, \'driver-index\')',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 71
  }), 'driver-index');

  t.deepEqual(_rec47._expr(_rec47._capt(_rec47._capt(_rec47._capt(_rec47._capt(_rec47._capt(_rec47._capt(_rec47._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').state, 'arguments/0/object/object/object').inlineValues, 'arguments/0/object/object').hash, 'arguments/0/object')[_rec47._capt(button1, 'arguments/0/property')], 'arguments/0'), {
    content: 't.deepEqual(response.responses[1].state.inlineValues.hash[button1], { type: \'call-action\', route: \'passenger-contact-new-number\', kicker: { menuLocation: \'order-submitted\', currentOrderKey: \'d3adb33f\' }, userKey: \'cli_2\', orderKey: \'d3adb33f\', arg: { driverPhone: \'(555) 123-11-22\', distance: 10, driverIdentity: 31337 } })',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 73
  }), _rec48._expr(_rec48._capt({
    type: 'call-action',
    route: 'passenger-contact-new-number',
    kicker: _rec48._capt({ menuLocation: 'order-submitted', currentOrderKey: 'd3adb33f' }, 'arguments/1/properties/2/value'),
    userKey: 'cli_2',
    orderKey: 'd3adb33f',
    arg: _rec48._capt({
      driverPhone: '(555) 123-11-22',
      distance: 10,
      driverIdentity: 31337
    }, 'arguments/1/properties/5/value')
  }, 'arguments/1'), {
    content: 't.deepEqual(response.responses[1].state.inlineValues.hash[button1], { type: \'call-action\', route: \'passenger-contact-new-number\', kicker: { menuLocation: \'order-submitted\', currentOrderKey: \'d3adb33f\' }, userKey: \'cli_2\', orderKey: \'d3adb33f\', arg: { driverPhone: \'(555) 123-11-22\', distance: 10, driverIdentity: 31337 } })',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 73
  }));

  t.deepEqual(_rec49._expr(_rec49._capt(_rec49._capt(_rec49._capt(_rec49._capt(_rec49._capt(_rec49._capt(_rec49._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').state, 'arguments/0/object/object/object').inlineValues, 'arguments/0/object/object').hash, 'arguments/0/object')[_rec49._capt(button2, 'arguments/0/property')], 'arguments/0'), {
    content: 't.deepEqual(response.responses[1].state.inlineValues.hash[button2], { type: \'call-action\', route: \'save-and-redirect\', kicker: { menuLocation: \'driver-index\' }, userKey: \'cli_1\', arg: { passengerKey: \'cli_2\', distance: 10, path: \'driver-order-set-price\', orderKey: \'d3adb33f\' } })',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 86
  }), _rec50._expr(_rec50._capt({
    type: 'call-action',
    route: 'save-and-redirect',
    kicker: _rec50._capt({ menuLocation: 'driver-index' }, 'arguments/1/properties/2/value'),
    userKey: 'cli_1',
    arg: _rec50._capt({
      passengerKey: 'cli_2',
      distance: 10,
      path: 'driver-order-set-price',
      orderKey: 'd3adb33f'
    }, 'arguments/1/properties/4/value')
  }, 'arguments/1'), {
    content: 't.deepEqual(response.responses[1].state.inlineValues.hash[button2], { type: \'call-action\', route: \'save-and-redirect\', kicker: { menuLocation: \'driver-index\' }, userKey: \'cli_1\', arg: { passengerKey: \'cli_2\', distance: 10, path: \'driver-order-set-price\', orderKey: \'d3adb33f\' } })',
    filepath: 'test/menu/driver/order/new-test.js',
    line: 86
  }));
});
//# sourceMappingURL=../../../../node_modules/.cache/ava/9a005d483398e6fbd2a5aab40942a3cc.js.map