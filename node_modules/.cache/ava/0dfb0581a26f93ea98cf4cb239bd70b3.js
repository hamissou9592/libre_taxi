'use strict';

var _getIterator2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/get-iterator.js');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _parsedLocation = require('../../../src/actions/decorators/parsed-location');

var _parsedLocation2 = _interopRequireDefault(_parsedLocation);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultParams = { type: 'foo', i18n: {}, user: {} };

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var origin = {};
  var action = new _parsedLocation2.default(defaultParams, origin);
  t.pass();
});

(0, _ava2.default)('should just call origin on get', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder();

  var origin = {
    get: _specSupport.ss.sinon.spy(),
    post: _specSupport.ss.sinon.spy()
  };
  var action = new _parsedLocation2.default(defaultParams, origin);
  action.get();
  t.truthy(_rec._expr(_rec._capt(_rec._capt(_rec._capt(origin, 'arguments/0/callee/object/object').get, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.truthy(origin.get.calledWith())',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 40
  }));
  t.falsy(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(origin, 'arguments/0/callee/object/object').post, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.falsy(origin.post.calledWith())',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 41
  }));
});

(0, _ava2.default)('should just call origin on t, gt with parameters', function (t) {
  var _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder();

  var origin = {
    t: _specSupport.ss.sinon.spy(),
    gt: _specSupport.ss.sinon.spy()
  };
  var action = new _parsedLocation2.default(defaultParams, origin);
  action.t(1, 2, 3);
  action.gt(11, 22, 33);
  t.truthy(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(origin, 'arguments/0/callee/object/object').t, 'arguments/0/callee/object').calledWith(1, 2, 3), 'arguments/0'), {
    content: 't.truthy(origin.t.calledWith(1, 2, 3))',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 52
  }));
  t.truthy(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(origin, 'arguments/0/callee/object/object').gt, 'arguments/0/callee/object').calledWith(11, 22, 33), 'arguments/0'), {
    content: 't.truthy(origin.gt.calledWith(11, 22, 33))',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 53
  }));
});

(0, _ava2.default)('should call "get" on "call" when no argument provided', function (t) {
  var _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder();

  var origin = {
    get: _specSupport.ss.sinon.spy(),
    post: _specSupport.ss.sinon.spy()
  };
  var action = new _parsedLocation2.default(defaultParams, origin);
  action.call();
  t.truthy(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(origin, 'arguments/0/callee/object/object').get, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.truthy(origin.get.calledWith())',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 63
  }));
  t.falsy(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(origin, 'arguments/0/callee/object/object').post, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.falsy(origin.post.calledWith())',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 64
  }));
});

(0, _ava2.default)('should call own "post" on "call" when argument provided', function (t) {
  var _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder();

  var origin = {
    get: _specSupport.ss.sinon.spy(),
    post: _specSupport.ss.sinon.spy()
  };
  var action = new _parsedLocation2.default(defaultParams, origin);
  action.post = _specSupport.ss.sinon.spy();
  action.call(31337);
  t.falsy(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(origin, 'arguments/0/callee/object/object').get, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.falsy(origin.get.calledWith())',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 75
  }));
  t.falsy(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(origin, 'arguments/0/callee/object/object').post, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
    content: 't.falsy(origin.post.calledWith())',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 76
  }));
  t.truthy(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(action, 'arguments/0/callee/object/object').post, 'arguments/0/callee/object').calledWith(31337), 'arguments/0'), {
    content: 't.truthy(action.post.calledWith(31337))',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 77
  }));
});

(0, _ava2.default)('should call origin on post for unprocessable data', function (t) {
  var data = [123, 'asd', 0, -123, [1, 2], { foo: 31337 }, '1234.0123, 1234.0123', '123.abc, 123.abc', undefined, ''];
  t.plan(data.length * 2);

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3.default)(data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _rec10 = new _powerAssertRecorder(),
          _rec11 = new _powerAssertRecorder();

      var p = _step.value;

      var origin = {
        get: _specSupport.ss.sinon.spy(),
        post: _specSupport.ss.sinon.spy()
      };
      var action = new _parsedLocation2.default(defaultParams, origin);
      action.post(p);
      t.falsy(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(origin, 'arguments/0/callee/object/object').get, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
        content: 't.falsy(origin.get.calledWith())',
        filepath: 'test/menu/decorators/parsed-location-test.js',
        line: 102
      }));
      t.truthy(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(origin, 'arguments/0/callee/object/object').post, 'arguments/0/callee/object').calledWith(_rec11._capt(p, 'arguments/0/arguments/0')), 'arguments/0'), {
        content: 't.truthy(origin.post.calledWith(p))',
        filepath: 'test/menu/decorators/parsed-location-test.js',
        line: 103
      }));
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
});

(0, _ava2.default)('should call origin with parsed coordinates when data is processable', function (t) {
  // array of items where:
  // item[0] - actual data
  // item[1] - expected data

  var data = [['37.012345678901234,-122.012345678901234', [37.012345678901234, -122.012345678901234]], ['123.123,123.123', [123.123, 123.123]], ['123.123, 123.123', [123.123, 123.123]], [' 123.123, 123.123 ', [123.123, 123.123]], [' 123.123 , 123.123 ', [123.123, 123.123]], ['37.421955, -122.084058', [37.421955, -122.084058]], ['1, 2', [1, 2]], ['1.123, 2', [1.123, 2]], ['1, 2.123', [1, 2.123]], ['1, -2', [1, -2]], ['-1, 2', [-1, 2]], [[37.421955, -122.084058], [37.421955, -122.084058]]];

  t.plan(data.length * 2);

  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = (0, _getIterator3.default)(data), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var _rec12 = new _powerAssertRecorder(),
          _rec13 = new _powerAssertRecorder();

      var item = _step2.value;

      var origin = {
        get: _specSupport.ss.sinon.spy(),
        post: _specSupport.ss.sinon.spy()
      };
      var action = new _parsedLocation2.default(defaultParams, origin);
      action.post(item[0]);
      t.falsy(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(origin, 'arguments/0/callee/object/object').get, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
        content: 't.falsy(origin.get.calledWith())',
        filepath: 'test/menu/decorators/parsed-location-test.js',
        line: 136
      }));
      t.truthy(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(origin, 'arguments/0/callee/object/object').post, 'arguments/0/callee/object').calledWith(_rec13._capt(_rec13._capt(item, 'arguments/0/arguments/0/object')[1], 'arguments/0/arguments/0')), 'arguments/0'), {
        content: 't.truthy(origin.post.calledWith(item[1]))',
        filepath: 'test/menu/decorators/parsed-location-test.js',
        line: 137
      }));
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
});

(0, _ava2.default)('should return composite object with map', function (t) {
  var _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder(),
      _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder();

  var origin = {
    get: _specSupport.ss.sinon.spy(),
    post: _specSupport.ss.sinon.spy()
  };
  var action = new _parsedLocation2.default(defaultParams, origin);
  var r = action.post('37.421955, -122.084058');
  t.is(_rec14._expr(_rec14._capt(_rec14._capt(r, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(r.type, \'composite\')',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 148
  }), 'composite');
  t.is(_rec15._expr(_rec15._capt(_rec15._capt(_rec15._capt(r, 'arguments/0/object/object').responses, 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(r.responses.length, 2)',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 149
  }), 2);
  t.is(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(_rec16._capt(r, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(r.responses[0].type, \'map\')',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 150
  }), 'map');
  t.deepEqual(_rec17._expr(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(r, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').location, 'arguments/0'), {
    content: 't.deepEqual(r.responses[0].location, [37.421955, -122.084058])',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 151
  }), _rec18._expr(_rec18._capt([37.421955, _rec18._capt(-122.084058, 'arguments/1/elements/1')], 'arguments/1'), {
    content: 't.deepEqual(r.responses[0].location, [37.421955, -122.084058])',
    filepath: 'test/menu/decorators/parsed-location-test.js',
    line: 151
  }));
});
//# sourceMappingURL=../../../node_modules/.cache/ava/0dfb0581a26f93ea98cf4cb239bd70b3.js.map