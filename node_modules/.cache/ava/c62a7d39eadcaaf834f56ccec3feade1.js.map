{"version":3,"sources":["stateful-key-test.js"],"names":["args","platformType","platformId","guid","t","pass","k","is","toString"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,4BAAiB,CAAC,cAAD,EAAiB,YAAjB,CAAjB,EAAiD,UAACA,IAAD,EAAU;AAAE,4BAAgBA,IAAhB;AAAwB,CAArF;AACA,iCAAsB,YAAM;AAC1B,4BAAgB,EAAEC,cAAc,KAAhB,EAAuBC,YAAY,CAAnC,EAAhB;AACD,CAFD;;AAIA,mBAAK,4CAAL,EAAmD,aAAK;AACtD,4BAAgB,EAAED,cAAc,KAAhB,EAAuBC,YAAY,CAAnC,EAAsCC,MAAM,KAA5C,EAAhB;AACAC,IAAEC,IAAF;AACD,CAHD;;AAKA,mBAAK,8CAAL,EAAqD,aAAK;AAAA;;AACxD,MAAMC,IAAI,0BAAgB,EAAEL,cAAc,KAAhB,EAAuBC,YAAY,CAAnC,EAAsCC,MAAM,KAA5C,EAAhB,CAAV;AACAC,IAAEG,EAAF,uBAAK,2CAAEC,QAAF,EAAL;AAAA;AAAA;AAAA;AAAA,MAAmB,WAAnB;AACD,CAHD;;AAKA,mBAAK,yCAAL,EAAgD,aAAK;AAAA;;AACnD,MAAMF,IAAI,0BAAgB,EAAEL,cAAc,KAAhB,EAAuBC,YAAY,CAAnC,EAAsCC,MAAM,KAA5C,EAAhB,CAAV;AACAC,IAAEG,EAAF,yBAAK,4CAAEC,QAAF,EAAL;AAAA;AAAA;AAAA;AAAA,MAAmB,WAAnB;AACD,CAHD;;AAKA,mBAAK,kCAAL,EAAyC,aAAK;AAAA;;AAC5C,MAAMF,IAAI,0BAAgB,EAAEL,cAAc,KAAhB,EAAuBC,YAAY,CAAnC,EAAhB,CAAV;AACAE,IAAEG,EAAF,yBAAK,4CAAEC,QAAF,EAAL;AAAA;AAAA;AAAA;AAAA,MAAmB,OAAnB;AACD,CAHD","file":"stateful-key-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport StatefulKey from '../src/stateful-key';\nimport checkNotNullTest from './helpers/check-not-null';\nimport checkPlatformTypeTest from './helpers/check-platform-type';\n\ncheckNotNullTest(['platformType', 'platformId'], (args) => { new StatefulKey(args); });\ncheckPlatformTypeTest(() => {\n  new StatefulKey({ platformType: 'foo', platformId: 1 });\n});\n\ntest('can be constructed with default parameters', t => {\n  new StatefulKey({ platformType: 'cli', platformId: 1, guid: 'foo' });\n  t.pass();\n});\n\ntest('should have string representation of the key', t => {\n  const k = new StatefulKey({ platformType: 'cli', platformId: 1, guid: 'foo' });\n  t.is(k.toString(), 'cli_1_foo');\n});\n\ntest('should lower case string representation', t => {\n  const k = new StatefulKey({ platformType: 'cli', platformId: 1, guid: 'FOO' });\n  t.is(k.toString(), 'cli_1_foo');\n});\n\ntest('should generate key without guid', t => {\n  const k = new StatefulKey({ platformType: 'cli', platformId: 1 });\n  t.is(k.toString(), 'cli_1');\n});\n"]}