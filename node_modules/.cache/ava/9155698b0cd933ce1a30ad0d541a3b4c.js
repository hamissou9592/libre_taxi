'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, max-len */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _sendMyNumber = require('../../../../../src/actions/menu/driver/order/buttons/send-my-number.js');

var _sendMyNumber2 = _interopRequireDefault(_sendMyNumber);

var _checkNotNull = require('../../../../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)(['userKey', 'arg'], function (args) {
  new _sendMyNumber.SendMyNumber(args);
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder();

  var r = new _sendMyNumber.SendMyNumber({ userKey: 'cli_1', orderKey: 'd3adb33f', arg: { foo: 'bar' } });
  t.is(_rec._expr(_rec._capt(_rec._capt(r, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(r.type, \'call-action\')',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 28
  }), 'call-action');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(r, 'arguments/0/object').route, 'arguments/0'), {
    content: 't.is(r.route, \'passenger-contact-new-number\')',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 29
  }), 'passenger-contact-new-number');
  t.deepEqual(_rec3._expr(_rec3._capt(_rec3._capt(r, 'arguments/0/object').kicker, 'arguments/0'), {
    content: 't.deepEqual(r.kicker, { menuLocation: \'order-submitted\', currentOrderKey: \'d3adb33f\' })',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 30
  }), _rec4._expr(_rec4._capt({ menuLocation: 'order-submitted', currentOrderKey: 'd3adb33f' }, 'arguments/1'), {
    content: 't.deepEqual(r.kicker, { menuLocation: \'order-submitted\', currentOrderKey: \'d3adb33f\' })',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 30
  }));
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(r, 'arguments/0/object/object').arg, 'arguments/0/object').foo, 'arguments/0'), {
    content: 't.is(r.arg.foo, \'bar\')',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 31
  }), 'bar');
});

(0, _ava2.default)('factory method should return stringified json response', function (t) {
  var _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder();

  var response = (0, _sendMyNumber2.default)({ passengerKey: 'cli_1', distance: 5, orderKey: 'd3adb33f' }, { state: { phone: '12345', identity: 31337 } });
  // json example:
  // {"type":"call-action","route":"passenger-contact-new-number","kicker":"order-submitted","userKey":"cli_1","arg":{"driverPhone":"12345","distance":5}}
  t.deepEqual(_rec6._expr(_rec6._capt(response, 'arguments/0'), {
    content: 't.deepEqual(response, { type: \'call-action\', route: \'passenger-contact-new-number\', kicker: { menuLocation: \'order-submitted\', currentOrderKey: \'d3adb33f\' }, userKey: \'cli_1\', orderKey: \'d3adb33f\', arg: { driverPhone: \'12345\', distance: 5, driverIdentity: 31337 } })',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 38
  }), _rec7._expr(_rec7._capt({
    type: 'call-action',
    route: 'passenger-contact-new-number',
    kicker: _rec7._capt({ menuLocation: 'order-submitted', currentOrderKey: 'd3adb33f' }, 'arguments/1/properties/2/value'),
    userKey: 'cli_1',
    orderKey: 'd3adb33f',
    arg: _rec7._capt({
      driverPhone: '12345',
      distance: 5,
      driverIdentity: 31337
    }, 'arguments/1/properties/5/value')
  }, 'arguments/1'), {
    content: 't.deepEqual(response, { type: \'call-action\', route: \'passenger-contact-new-number\', kicker: { menuLocation: \'order-submitted\', currentOrderKey: \'d3adb33f\' }, userKey: \'cli_1\', orderKey: \'d3adb33f\', arg: { driverPhone: \'12345\', distance: 5, driverIdentity: 31337 } })',
    filepath: 'test/menu/driver/order/buttons/send-my-number-test.js',
    line: 38
  }));
});
//# sourceMappingURL=../../../../../node_modules/.cache/ava/9155698b0cd933ce1a30ad0d541a3b4c.js.map