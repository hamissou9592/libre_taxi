{"version":3,"sources":["select-vehicle-type-test.js"],"names":["user","action","i18n","t","is","type","pass","response","get","responses","message","__","rows","value","label","reactions","reaction","post","state","vehicleType","path"],"mappings":"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","file":"select-vehicle-type-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-unused-vars */\nimport test from 'ava';\nimport routes from '../../../src/routes'; // to aviod circular dependencies\nimport SelectVehicleType from '../../../src/actions/menu/driver/select-vehicle-type';\nimport { i18n } from '../../spec-support';\n\nconst user = {};\n\ntest('can be constructed with default parameters', t => {\n  const action = new SelectVehicleType({ i18n, user });\n  t.is(action.type, 'driver-select-vehicle-type');\n  t.pass();\n});\n\ntest('should return composite response on get', t => {\n  const action = new SelectVehicleType({ i18n, user });\n  const response = action.get();\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'text');\n  t.is(response.responses[0].message, i18n.__('driver-select-vehicle-type.select'));\n  t.is(response.responses[1].type, 'options');\n  t.is(response.responses[1].rows[0][0].value, 'car');\n  t.is(response.responses[1].rows[1][0].value, 'motorbike');\n  t.is(response.responses[1].rows[0][0].label, i18n.__('driver-select-vehicle-type.car'));\n  t.is(response.responses[1].rows[1][0].label, i18n.__('driver-select-vehicle-type.motorbike'));\n});\n\ntest('should return composite response on post for motorbike and car', t => {\n  const reactions = ['motorbike', 'car'];\n  const action = new SelectVehicleType({ i18n, user });\n\n  for (const reaction of reactions) {\n    const response = action.post(reaction);\n    t.is(response.type, 'composite');\n    t.is(response.responses[0].type, 'text');\n    t.is(response.responses[0].message, 'ðŸ‘Œ OK!');\n    t.is(response.responses[1].type, 'user-state');\n    t.is(response.responses[1].state.vehicleType, reaction);\n    t.is(response.responses[2].type, 'redirect');\n    t.is(response.responses[2].path, 'driver-explain-checkins');\n  }\n});\n\ntest('should return error on post with unknown reaction', t => {\n  const action = new SelectVehicleType({ i18n, user });\n  const response = action.post('whatever');\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'error');\n  t.is(response.responses[0].message, i18n.__('driver-select-vehicle-type.error_only_known_type'));\n});\n"]}