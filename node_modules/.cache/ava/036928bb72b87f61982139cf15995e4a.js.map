{"version":3,"sources":["response-handler-factory-test.js"],"names":["textResponse","message","optionsResponse","rows","userStateResponse","foo","selectLocaleResponse","locale","compositeResponse","redirectResponse","path","requestPhoneResponse","requestLocationResponse","updateLocationResponse","location","requestUserInputResponse","emptyResponse","cancelCurrentOrderResponse","errorResponse","ifResponse","condition","ok","saveOrderResponse","orderKey","passengerKey","passengerLocation","passengerDestination","price","createdAt","Date","getTime","requestedVehicleType","informPassenerResponse","interruptPromptResponse","notifyDriversResponse","inlineOptionsResponse","callActionResponse","userKey","route","mapResponse","checkinResponse","driverKey","user","platformType","h1","getHandler","response","h2","h3","h4","h5","h6","h7","h8","h9","h10","h11","h12","h13","h14","h15","h16","h17","h18","h19","h20","h21","h22","t","is","type","truthy","origin","api","h","deepEqual"],"mappings":"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","file":"response-handler-factory-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-unused-vars, max-len */\nimport test from 'ava';\nimport HandlerFactory from '../../src/factories/response-handler-factory';\nimport TextResponse from '../../src/responses/text-response';\nimport OptionsResponse from '../../src/responses/options-response';\nimport UserStateResponse from '../../src/responses/user-state-response';\nimport SelectLocaleResponse from '../../src/responses/select-locale-response';\nimport CompositeResponse from '../../src/responses/composite-response';\nimport RedirectResponse from '../../src/responses/redirect-response';\nimport RequestPhoneResponse from '../../src/responses/request-phone-response';\nimport RequestLocationResponse from '../../src/responses/request-location-response';\nimport UpdateLocationResponse from '../../src/responses/update-location-response';\nimport RequestUserInputResponse from '../../src/responses/request-user-input-response';\nimport EmptyResponse from '../../src/responses/empty-response';\nimport CancelCurrentOrderResponse from '../../src/responses/cancel-current-order-response';\nimport ErrorResponse from '../../src/responses/error-response';\nimport IfResponse from '../../src/responses/if-response';\nimport SaveOrderResponse from '../../src/responses/submit-order/save-order-response';\nimport InformPassengerResponse from '../../src/responses/submit-order/inform-passenger-response';\nimport InterruptPromptResponse from '../../src/responses/interrupt-prompt-response';\nimport NotifyDriversResponse from '../../src/responses/submit-order/notify-drivers-response';\nimport InlineOptionsResponse from '../../src/responses/inline-options-response';\nimport CallActionResponse from '../../src/responses/call-action-response';\nimport MapResponse from '../../src/responses/map-response';\nimport CheckinResponse from '../../src/responses/checkin-response';\n\ntest('should return correct types for responses for cli platform', t => {\n  const textResponse = new TextResponse({ message: 'foo' });\n  const optionsResponse = new OptionsResponse({ rows: [] });\n  const userStateResponse = new UserStateResponse({ foo: 1 });\n  const selectLocaleResponse = new SelectLocaleResponse({ locale: 'en' });\n  const compositeResponse = new CompositeResponse();\n  const redirectResponse = new RedirectResponse({ path: 'default' });\n  const requestPhoneResponse = new RequestPhoneResponse();\n  const requestLocationResponse = new RequestLocationResponse();\n  const updateLocationResponse = new UpdateLocationResponse({ location: [37.421955, -122.084058] });\n  const requestUserInputResponse = new RequestUserInputResponse();\n  const emptyResponse = new EmptyResponse();\n  const cancelCurrentOrderResponse = new CancelCurrentOrderResponse();\n  const errorResponse = new ErrorResponse({ message: 'foo' });\n  const ifResponse = new IfResponse({ condition: {}, ok: {} });\n  const saveOrderResponse = new SaveOrderResponse({\n    orderKey: 'uuid',\n    passengerKey: 'cli_1',\n    passengerLocation: [37.421955, -122.084058],\n    passengerDestination: 'South San Francisco BART station, CA, 94080',\n    price: 50,\n    createdAt: (new Date).getTime(), // use Firebase Timestamp in your code!\n    requestedVehicleType: 'car',\n  });\n  const informPassenerResponse = new InformPassengerResponse({ passengerKey: 'cli_1' });\n  const interruptPromptResponse = new InterruptPromptResponse();\n  const notifyDriversResponse = new NotifyDriversResponse({ passengerKey: 'cli_1' });\n  const inlineOptionsResponse = new InlineOptionsResponse({ rows: [] });\n  const callActionResponse = new CallActionResponse({ userKey: 'cli_1', route: 'default' });\n  const mapResponse = new MapResponse({ location: [37.421955, -122.084058] });\n  const checkinResponse = new CheckinResponse({ driverKey: 'cli_1' });\n\n  const user = { platformType: 'cli' };\n\n  const h1 = HandlerFactory.getHandler({ response: textResponse, user });\n  const h2 = HandlerFactory.getHandler({ response: optionsResponse, user });\n  const h3 = HandlerFactory.getHandler({ response: userStateResponse, user });\n  const h4 = HandlerFactory.getHandler({ response: selectLocaleResponse, user });\n  const h5 = HandlerFactory.getHandler({ response: compositeResponse, user });\n  const h6 = HandlerFactory.getHandler({ response: redirectResponse, user });\n  const h7 = HandlerFactory.getHandler({ response: requestPhoneResponse, user });\n  const h8 = HandlerFactory.getHandler({ response: requestLocationResponse, user });\n  const h9 = HandlerFactory.getHandler({ response: updateLocationResponse, user });\n  const h10 = HandlerFactory.getHandler({ response: requestUserInputResponse, user });\n  const h11 = HandlerFactory.getHandler({ response: emptyResponse, user });\n  const h12 = HandlerFactory.getHandler({ response: cancelCurrentOrderResponse, user });\n  const h13 = HandlerFactory.getHandler({ response: errorResponse, user });\n  const h14 = HandlerFactory.getHandler({ response: ifResponse, user });\n  const h15 = HandlerFactory.getHandler({ response: saveOrderResponse, user });\n  const h16 = HandlerFactory.getHandler({ response: informPassenerResponse, user });\n  const h17 = HandlerFactory.getHandler({ response: interruptPromptResponse, user });\n  const h18 = HandlerFactory.getHandler({ response: notifyDriversResponse, user });\n  const h19 = HandlerFactory.getHandler({ response: inlineOptionsResponse, user });\n  const h20 = HandlerFactory.getHandler({ response: callActionResponse, user });\n  const h21 = HandlerFactory.getHandler({ response: mapResponse, user });\n  const h22 = HandlerFactory.getHandler({ response: checkinResponse, user });\n\n  t.is(h1.type, 'cli-text-response-handler');\n  t.is(h2.type, 'cli-options-response-handler');\n  t.is(h3.type, 'user-state-response-handler');\n  t.is(h4.type, 'user-state-response-handler');\n  t.is(h5.type, 'composite-response-handler');\n  t.is(h6.type, 'redirect-response-handler');\n  t.is(h7.type, 'cli-request-phone-response-handler');\n  t.is(h8.type, 'cli-request-location-response-handler');\n  t.is(h9.type, 'update-location-response-handler');\n  t.is(h10.type, 'cli-request-user-input-response-handler');\n  t.is(h11.type, 'empty-response-handler');\n  t.is(h12.type, 'cancel-current-order-response-handler');\n  t.is(h13.type, 'cli-error-response-handler');\n  t.is(h14.type, 'if-response-handler');\n  t.is(h15.type, 'save-order-response-handler');\n  t.is(h16.type, 'inform-passenger-response-handler');\n  t.is(h17.type, 'cli-interrupt-prompt-response-handler');\n  t.is(h18.type, 'notify-drivers-response-handler');\n  t.is(h19.type, 'cli-inline-options-response-handler');\n  t.is(h20.type, 'call-action-response-handler');\n  t.is(h21.type, 'cli-map-response-handler');\n  t.is(h22.type, 'checkin-response-handler');\n\n  t.truthy(h1.user);\n  t.truthy(h2.user);\n  t.truthy(h3.user);\n  t.truthy(h4.user);\n  t.truthy(h5.user);\n  t.truthy(h6.user);\n  t.truthy(h7.user);\n  t.truthy(h8.user);\n  t.truthy(h9.user);\n  t.truthy(h10.user);\n  t.truthy(h11.user);\n  t.truthy(h12.user);\n  t.truthy(h13.user);\n  t.truthy(h14.user);\n  t.truthy(h15.user);\n  t.truthy(h16.user);\n  t.truthy(h17.user);\n  t.truthy(h18.user);\n  t.truthy(h19.user);\n  t.truthy(h20.user);\n  t.truthy(h21.user);\n  t.truthy(h22.user);\n});\n\ntest('should return correct types for responses for telegram platform', t => {\n  const textResponse = new TextResponse({ message: 'foo' });\n  const optionsResponse = new OptionsResponse({ rows: [] });\n  const userStateResponse = new UserStateResponse({ foo: 1 });\n  const selectLocaleResponse = new SelectLocaleResponse({ locale: 'en' });\n  const compositeResponse = new CompositeResponse();\n  const redirectResponse = new RedirectResponse({ path: 'default' });\n  const requestPhoneResponse = new RequestPhoneResponse();\n  const requestLocationResponse = new RequestLocationResponse();\n  const updateLocationResponse = new UpdateLocationResponse({ location: [37.421955, -122.084058] });\n  const requestUserInputResponse = new RequestUserInputResponse();\n  const emptyResponse = new EmptyResponse();\n  const cancelCurrentOrderResponse = new CancelCurrentOrderResponse();\n  const errorResponse = new ErrorResponse({ message: 'foo' });\n  const ifResponse = new IfResponse({ condition: {}, ok: {} });\n  const saveOrderResponse = new SaveOrderResponse({\n    orderKey: 'uuid',\n    passengerKey: 'telegram_31337',\n    passengerLocation: [37.421955, -122.084058],\n    passengerDestination: 'South San Francisco BART station, CA, 94080',\n    price: 50,\n    createdAt: (new Date).getTime(), // use Firebase Timestamp in your code!\n    requestedVehicleType: 'car',\n  });\n  const informPassenerResponse = new InformPassengerResponse({ passengerKey: 'telegram_31337' });\n  const interruptPromptResponse = new InterruptPromptResponse();\n  const notifyDriversResponse = new NotifyDriversResponse({ passengerKey: 'cli_1' });\n  const inlineOptionsResponse = new InlineOptionsResponse({ rows: [] });\n  const callActionResponse = new CallActionResponse({ userKey: 'cli_1', route: 'default' });\n  const mapResponse = new MapResponse({ location: [37.421955, -122.084058] });\n  const checkinResponse = new CheckinResponse({ driverKey: 'cli_1' });\n\n  const user = { platformType: 'telegram' };\n\n  const h1 = HandlerFactory.getHandler({ response: textResponse, user });\n  const h2 = HandlerFactory.getHandler({ response: optionsResponse, user });\n  const h3 = HandlerFactory.getHandler({ response: userStateResponse, user });\n  const h4 = HandlerFactory.getHandler({ response: selectLocaleResponse, user });\n  const h5 = HandlerFactory.getHandler({ response: compositeResponse, user });\n  const h6 = HandlerFactory.getHandler({ response: redirectResponse, user });\n  const h7 = HandlerFactory.getHandler({ response: requestPhoneResponse, user });\n  const h8 = HandlerFactory.getHandler({ response: requestLocationResponse, user });\n  const h9 = HandlerFactory.getHandler({ response: updateLocationResponse, user });\n  const h10 = HandlerFactory.getHandler({ response: requestUserInputResponse, user });\n  const h11 = HandlerFactory.getHandler({ response: emptyResponse, user });\n  const h12 = HandlerFactory.getHandler({ response: cancelCurrentOrderResponse, user });\n  const h13 = HandlerFactory.getHandler({ response: errorResponse, user });\n  const h14 = HandlerFactory.getHandler({ response: ifResponse, user });\n  const h15 = HandlerFactory.getHandler({ response: saveOrderResponse, user });\n  const h16 = HandlerFactory.getHandler({ response: informPassenerResponse, user });\n  const h17 = HandlerFactory.getHandler({ response: interruptPromptResponse, user });\n  const h18 = HandlerFactory.getHandler({ response: notifyDriversResponse, user });\n  const h19 = HandlerFactory.getHandler({ response: inlineOptionsResponse, user });\n  const h20 = HandlerFactory.getHandler({ response: callActionResponse, user });\n  const h21 = HandlerFactory.getHandler({ response: mapResponse, user });\n  const h22 = HandlerFactory.getHandler({ response: checkinResponse, user });\n\n  t.is(h1.type, 'telegram-text-response-handler');\n  t.is(h2.type, 'telegram-options-response-handler');\n  t.is(h3.type, 'user-state-response-handler');\n  t.is(h4.type, 'user-state-response-handler');\n  t.is(h5.type, 'composite-response-handler');\n  t.is(h5.response.type, 'composite');\n  t.is(h5.response.origin.type, 'composite'); // should be decorated with ConcatText\n  t.is(h5.response.origin.origin.type, 'composite'); // should be decorated with OptimizedRequestLocation\n  t.is(h5.response.origin.origin.origin.type, 'composite'); // should be decorated OptimizedRequestPhone\n  t.is(h5.response.origin.origin.origin.origin.type, 'composite'); // should be decorated OptimizedOptions\n  t.is(h6.type, 'redirect-response-handler');\n  t.is(h7.type, 'telegram-request-phone-response-handler');\n  t.is(h8.type, 'telegram-request-location-response-handler');\n  t.is(h9.type, 'update-location-response-handler');\n  t.is(h10.type, 'empty-response-handler');\n  t.is(h11.type, 'empty-response-handler');\n  t.is(h12.type, 'cancel-current-order-response-handler');\n  t.is(h13.type, 'telegram-error-response-handler');\n  t.is(h14.type, 'if-response-handler');\n  t.is(h15.type, 'save-order-response-handler');\n  t.is(h16.type, 'inform-passenger-response-handler');\n  t.is(h17.type, 'telegram-interrupt-prompt-response-handler');\n  t.is(h18.type, 'notify-drivers-response-handler');\n  t.is(h19.type, 'telegram-inline-options-response-handler');\n  t.is(h20.type, 'call-action-response-handler');\n  t.is(h21.type, 'telegram-map-response-handler');\n  t.is(h22.type, 'checkin-response-handler');\n\n  t.truthy(h1.user);\n  t.truthy(h2.user);\n  t.truthy(h3.user);\n  t.truthy(h4.user);\n  t.truthy(h5.user);\n  t.truthy(h6.user);\n  t.truthy(h7.user);\n  t.truthy(h8.user);\n  t.truthy(h9.user);\n  t.truthy(h10.user);\n  t.truthy(h11.user);\n  t.truthy(h12.user);\n  t.truthy(h13.user);\n  t.truthy(h14.user);\n  t.truthy(h15.user);\n  t.truthy(h16.user);\n  t.truthy(h17.user);\n  t.truthy(h18.user);\n  t.truthy(h19.user);\n  t.truthy(h20.user);\n  t.truthy(h21.user);\n  t.truthy(h22.user);\n});\n\ntest('should set optional api property platform', t => {\n  const user = { platformType: 'telegram' };\n  const api = { foo: 'bar' };\n  const emptyResponse = new EmptyResponse();\n  const h = HandlerFactory.getHandler({ response: emptyResponse, user, api });\n  t.is(h.type, 'empty-response-handler');\n  t.truthy(h.user);\n  t.deepEqual(h.api, { foo: 'bar' });\n});\n"]}