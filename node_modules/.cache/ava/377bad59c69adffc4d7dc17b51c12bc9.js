'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars, max-len, no-use-before-define */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _checkinResponseHandler = require('../../src/response-handlers/checkin-response-handler');

var _checkinResponseHandler2 = _interopRequireDefault(_checkinResponseHandler);

var _checkinResponse = require('../../src/responses/checkin-response');

var _checkinResponse2 = _interopRequireDefault(_checkinResponse);

var _checkNotNull = require('../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _firebaseServer = require('firebase-server');

var _firebaseServer2 = _interopRequireDefault(_firebaseServer);

var _firebaseDb = require('../../src/firebase-db');

var _firebaseDb2 = _interopRequireDefault(_firebaseDb);

var _specSupport = require('../spec-support');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _userFactory = require('../../src/factories/user-factory');

var _orderFactory = require('../../src/factories/order-factory');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _firebaseDb.overrideSettings)({
  STATEFUL_CONNSTR: 'ws://localhost.firebaseio.test:5506',
  STATEFUL_CREDENTIALS_FILE: undefined
});

var server = null;
var response = new _checkinResponse2.default({ driverKey: 'cli_1' });

_ava2.default.before(function () {
  server = new _firebaseServer2.default(5506, 'localhost.firebaseio.test', {
    users: {
      cli_1: {
        userType: 'driver'
      }
    },
    orders: {
      '53845282-693f-4e7a-8479-87d421db6b94': {
        foo: 'bar'
      }
    }
  });
});

_ava2.default.after.always('guaranteed cleanup', function () {
  server.close();
});

(0, _checkNotNull2.default)('response', function (args) {
  new _checkinResponseHandler2.default(args);
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _checkinResponseHandler2.default({ response: {} });
  t.pass();
});

_ava2.default.cb('should load driver and query orders when called', function (t) {
  t.plan(2);

  var assert = function assert() {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    t.is(_rec._expr(_rec._capt(_rec._capt(_rec._capt(handler, 'arguments/0/object/object').driver, 'arguments/0/object').userKey, 'arguments/0'), {
      content: 't.is(handler.driver.userKey, \'cli_1\')',
      filepath: 'test/response-handlers/checkin-response-handler-test.js',
      line: 69
    }), 'cli_1');
    t.truthy(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(handler, 'arguments/0/callee/object/object').queryOrders, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
      content: 't.truthy(handler.queryOrders.calledWith())',
      filepath: 'test/response-handlers/checkin-response-handler-test.js',
      line: 70
    }));
    t.end();
  };

  var handler = new _checkinResponseHandler2.default({ response: response });
  handler.queryOrders = _specSupport.ss.sinon.spy();
  handler.call(assert);
});

(0, _ava2.default)('should query orders with geofire and setup key_entered callback', function (t) {
  var _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder();

  var handler = new _checkinResponseHandler2.default({ response: response });
  var geoFireQuery = {
    on: _specSupport.ss.sinon.spy()
  };
  handler.geoFire = {
    query: _specSupport.ss.sinon.stub().returns(geoFireQuery)
  };
  handler.driver = { state: { location: 'foo', radius: '5' } };
  handler.queryOrders();
  t.truthy(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(handler, 'arguments/0/callee/object/object/object').geoFire, 'arguments/0/callee/object/object').query, 'arguments/0/callee/object').calledWith(_rec3._capt({ center: 'foo', radius: 5 }, 'arguments/0/arguments/0')), 'arguments/0'), {
    content: 't.truthy(handler.geoFire.query.calledWith({ center: \'foo\', radius: 5 }))',
    filepath: 'test/response-handlers/checkin-response-handler-test.js',
    line: 89
  }));
  t.truthy(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(geoFireQuery, 'arguments/0/callee/object/object').on, 'arguments/0/callee/object').calledWith('key_entered', _rec4._capt(_rec4._capt(handler, 'arguments/0/arguments/1/object').keyEntered, 'arguments/0/arguments/1')), 'arguments/0'), {
    content: 't.truthy(geoFireQuery.on.calledWith(\'key_entered\', handler.keyEntered))',
    filepath: 'test/response-handlers/checkin-response-handler-test.js',
    line: 90
  }));
});

_ava2.default.cb('should call notify driver method on key_entered callback', function (t) {
  t.plan(1);
  var spy = _specSupport.ss.sinon.spy();
  var handler = new _checkinResponseHandler2.default({ response: response, notifyDriver: { call: spy } });
  handler.driver = { userKey: 'cli_1' };
  handler.keyEntered('53845282-693f-4e7a-8479-87d421db6b94', 'location', 'distance');
  (0, _orderFactory.loadOrder)('53845282-693f-4e7a-8479-87d421db6b94').then(function (order) {
    var _rec5 = new _powerAssertRecorder();

    t.truthy(_rec5._expr(_rec5._capt(_rec5._capt(spy, 'arguments/0/callee/object').calledWith('cli_1', 'distance', _rec5._capt(order, 'arguments/0/arguments/2')), 'arguments/0'), {
      content: 't.truthy(spy.calledWith(\'cli_1\', \'distance\', order))',
      filepath: 'test/response-handlers/checkin-response-handler-test.js',
      line: 100
    }));
    t.end();
  });
});
//# sourceMappingURL=../../node_modules/.cache/ava/377bad59c69adffc4d7dc17b51c12bc9.js.map