{"version":3,"sources":["optimized-options-test.js"],"names":["r","t","is","type","origin","origin1","origin2","add","message","origin3","rows","label","value","rr1","responses","rr2","rr3","length","optimized","condition","ok","err"],"mappings":"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","file":"optimized-options-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, max-len */\nimport test from 'ava';\nimport CompositeResponse from '../../../src/responses/composite-response';\nimport OptimizedOptions from '../../../src/responses/decorators/optimized-options';\nimport TextResponse from '../../../src/responses/text-response';\nimport OptionsResponse from '../../../src/responses/options-response';\nimport IfResponse from '../../../src/responses/if-response';\n\ntest('can be constructed with default parameters', t => {\n  const r = new OptimizedOptions(new CompositeResponse());\n  t.is(r.type, 'composite');\n  t.is(r.origin.type, 'composite');\n});\n\ntest('should not fail on non-optimizable responses', t => {\n  const origin1 = new CompositeResponse();\n  const origin2 = new CompositeResponse().add(new TextResponse({ message: 'foo' }));\n  const origin3 = new CompositeResponse().add(\n    new OptionsResponse({ rows: [[{ label: 'Ok', value: 'ok' }]] }));\n  const rr1 = new OptimizedOptions(origin1).responses;\n  const rr2 = new OptimizedOptions(origin2).responses;\n  const rr3 = new OptimizedOptions(origin3).responses;\n  t.is(rr1.length, 0);\n  t.is(rr2.length, 1);\n  t.is(rr3.length, 1);\n});\n\ntest('should optimize basic response', t => {\n  const origin = new CompositeResponse()\n    .add(new TextResponse({ message: 'foo' }))\n    .add(new OptionsResponse({ rows: [[{ label: 'Ok', value: 'ok' }]] }));\n  const optimized = new OptimizedOptions(origin);\n  t.is(optimized.responses.length, 1);\n  t.is(optimized.responses[0].type, 'options');\n  t.is(optimized.responses[0].message, 'foo');\n});\n\ntest('should optimize nested response', t => {\n  const origin = new CompositeResponse()\n    .add(new CompositeResponse()\n      .add(new TextResponse({ message: 'foo' }))\n      .add(new OptionsResponse({ rows: [[{ label: 'Ok', value: 'ok' }]] }))\n    );\n  const optimized = new OptimizedOptions(origin);\n  t.is(optimized.responses.length, 1);\n  t.is(optimized.responses[0].type, 'composite');\n  t.is(optimized.responses[0].responses.length, 1);\n  t.is(optimized.responses[0].responses[0].type, 'options');\n  t.is(optimized.responses[0].responses[0].message, 'foo');\n});\n\ntest('should optimize nested response with if', t => {\n  const origin = new CompositeResponse()\n    .add(new CompositeResponse()\n      .add(new IfResponse({\n        condition: {},\n        ok: new CompositeResponse()\n          .add(new TextResponse({ message: 'foo' }))\n          .add(new OptionsResponse({ rows: [[{ label: 'Ok', value: 'ok' }]] })),\n        err: new CompositeResponse()\n          .add(new TextResponse({ message: 'bar' }))\n          .add(new OptionsResponse({ rows: [[{ label: 'Ok', value: 'ok' }]] })),\n      }))\n    );\n  const optimized = new OptimizedOptions(origin);\n  t.is(optimized.responses.length, 1);\n  t.is(optimized.responses[0].type, 'composite');\n  t.is(optimized.responses[0].responses.length, 1);\n  t.is(optimized.responses[0].responses[0].type, 'if');\n  t.is(optimized.responses[0].responses[0].ok.type, 'composite');\n  t.is(optimized.responses[0].responses[0].ok.responses.length, 1);\n  t.is(optimized.responses[0].responses[0].ok.responses[0].type, 'options');\n  t.is(optimized.responses[0].responses[0].ok.responses[0].message, 'foo');\n  t.is(optimized.responses[0].responses[0].err.type, 'composite');\n  t.is(optimized.responses[0].responses[0].err.responses.length, 1);\n  t.is(optimized.responses[0].responses[0].err.responses[0].type, 'options');\n  t.is(optimized.responses[0].responses[0].err.responses[0].message, 'bar');\n});\n"]}