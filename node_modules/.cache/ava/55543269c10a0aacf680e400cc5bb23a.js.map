{"version":3,"sources":["text-response-handler-test.js"],"names":["args","r","response","t","is","type","cb","message","h","user","platformId","api","sendMessage","sinon","stub","returns","catch","call","truthy","calledWith","disable_notification","reply_markup","stringify","hide_keyboard","end"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,4BAAiB,UAAjB,EAA6B,UAACA,IAAD,EAAU;AAAE,oCAAwBA,IAAxB;AAAgC,CAAzE;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AAAA;;AACtD,MAAMC,IAAI,kCAAwB,EAAEC,UAAU,EAAZ,EAAxB,CAAV;AACAC,IAAEC,EAAF,uBAAK,oCAAEC,IAAP;AAAA;AAAA;AAAA;AAAA,MAAa,gCAAb;AACD,CAHD;;AAKA,cAAKC,EAAL,CAAQ,gDAAR,EAA0D,aAAK;AAC7D;AACA,MAAML,IAAI,EAAEM,SAAS,KAAX,EAAV;AACA,MAAMC,IAAI,kCAAwB,EAAEN,UAAUD,CAAZ,EAAxB,CAAV;AACAO,IAAEC,IAAF,GAAS,EAAEC,YAAY,KAAd,EAAT;AACAF,IAAEG,GAAF,GAAQ,EAAEC,aAAa,gBAAGC,KAAH,CAASC,IAAT,GAAgBC,OAAhB,CAAwB,EAAEC,OAAO,kBAAM,CAAE,CAAjB,EAAxB,CAAf,EAAR;;AAEA;AACAR,IAAES,IAAF,CAAO,YAAM;AAAA;;AACX;AACAd,MAAEe,MAAF,yBAAS,kFAAEP,GAAF,sCAAMC,WAAN,+BAAkBO,UAAlB,CAA6B,KAA7B,EAAoC,KAApC,cACP;AACEC,4BAAsB,IADxB;AAEEC,gCAAc,8EAAKC,SAAL,aAAe,EAAEC,eAAe,IAAjB,EAAf,4DAAd;AAFF,KADO,6BAAT;AAAA;AAAA;AAAA;AAAA;AAKApB,MAAEqB,GAAF;AACD,GARD;AASD,CAjBD;;AAmBA,cAAKlB,EAAL,CAAQ,yDAAR,EAAmE,aAAK;AACtE;AACA,MAAML,IAAI,EAAEM,SAAS,QAAX,EAAV;AACA,MAAMC,IAAI,kCAAwB,EAAEN,UAAUD,CAAZ,EAAxB,CAAV;AACAO,IAAEC,IAAF,GAAS,EAAEC,YAAY,KAAd,EAAT;AACAF,IAAEG,GAAF,GAAQ,EAAEC,aAAa,gBAAGC,KAAH,CAASC,IAAT,GAAgBC,OAAhB,CAAwB,EAAEC,OAAO,kBAAM,CAAE,CAAjB,EAAxB,CAAf,EAAR;;AAEA;AACAR,IAAES,IAAF,CAAO,YAAM;AAAA;;AACX;AACAd,MAAEe,MAAF,yBAAS,kFAAEP,GAAF,sCAAMC,WAAN,+BAAkBO,UAAlB,CAA6B,KAA7B,EAAoC,QAApC,cACP;AACEC,4BAAsB,KADxB;AAEEC,gCAAc,8EAAKC,SAAL,aAAe,EAAEC,eAAe,IAAjB,EAAf,4DAAd;AAFF,KADO,6BAAT;AAAA;AAAA;AAAA;AAAA;AAKApB,MAAEqB,GAAF;AACD,GARD;AASD,CAjBD","file":"text-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-console */\nimport test from 'ava';\nimport TextResponseHandler from '../../../src/response-handlers/telegram/text-response-handler';\nimport checkNotNullTest from '../../helpers/check-not-null.js';\nimport { ss } from '../../spec-support';\n\ncheckNotNullTest('response', (args) => { new TextResponseHandler(args); });\n\ntest('can be constructed with default parameters', t => {\n  const r = new TextResponseHandler({ response: {} });\n  t.is(r.type, 'telegram-text-response-handler');\n});\n\ntest.cb('should send message with notification disabled', t => {\n  // arrange\n  const r = { message: 'foo' };\n  const h = new TextResponseHandler({ response: r });\n  h.user = { platformId: 31337 };\n  h.api = { sendMessage: ss.sinon.stub().returns({ catch: () => {} }) };\n\n  // act\n  h.call(() => {\n    // assert\n    t.truthy(h.api.sendMessage.calledWith(31337, 'foo',\n      {\n        disable_notification: true,\n        reply_markup: JSON.stringify({ hide_keyboard: true }),\n      }));\n    t.end();\n  });\n});\n\ntest.cb('should send message with bell with notification enabled', t => {\n  // arrange\n  const r = { message: 'ðŸ”” foo' };\n  const h = new TextResponseHandler({ response: r });\n  h.user = { platformId: 31337 };\n  h.api = { sendMessage: ss.sinon.stub().returns({ catch: () => {} }) };\n\n  // act\n  h.call(() => {\n    // assert\n    t.truthy(h.api.sendMessage.calledWith(31337, 'ðŸ”” foo',\n      {\n        disable_notification: false,\n        reply_markup: JSON.stringify({ hide_keyboard: true }),\n      }));\n    t.end();\n  });\n});\n"]}