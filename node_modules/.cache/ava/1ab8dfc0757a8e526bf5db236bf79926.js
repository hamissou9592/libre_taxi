'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */
// eslint-disable-line max-len


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _optionsResponseHandler = require('../../../src/response-handlers/telegram/options-response-handler');

var _optionsResponseHandler2 = _interopRequireDefault(_optionsResponseHandler);

var _optionsResponse = require('../../../src/responses/options-response');

var _optionsResponse2 = _interopRequireDefault(_optionsResponse);

var _checkNotNull = require('../../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)('response', function (args) {
  new _optionsResponseHandler2.default(args);
});

var responseObject = new _optionsResponse2.default({
  rows: [[{ label: 'One', value: '1' }, { label: 'Two', value: '2' }, { label: 'Three', value: '3' }], [{ label: 'OK', value: 'ok' }, { label: 'Cancel', value: 'cancel' }]]
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _optionsResponseHandler2.default({ response: {} });
  t.pass();
});

(0, _ava2.default)('should call sendMessage', function (t) {
  var _rec = new _powerAssertRecorder();

  var user = { platformId: 31337 };
  var h = new _optionsResponseHandler2.default({ response: responseObject, user: user });
  h.api = { sendMessage: _specSupport.ss.sinon.stub().returns({ catch: function _catch() {} }) };
  h.call(function () {
    return t.fail();
  }); // and should not call onResult
  t.truthy(_rec._expr(_rec._capt(_rec._capt(_rec._capt(_rec._capt(h, 'arguments/0/callee/object/object/object').api, 'arguments/0/callee/object/object').sendMessage, 'arguments/0/callee/object').calledWith(31337, 'Your choice?', _rec._capt({
    disable_notification: true,
    reply_markup: _rec._capt(_rec._capt(JSON, 'arguments/0/arguments/2/properties/1/value/callee/object').stringify(_rec._capt({
      keyboard: _rec._capt([_rec._capt(['One', 'Two', 'Three'], 'arguments/0/arguments/2/properties/1/value/arguments/0/properties/0/value/elements/0'), _rec._capt(['OK', 'Cancel'], 'arguments/0/arguments/2/properties/1/value/arguments/0/properties/0/value/elements/1')], 'arguments/0/arguments/2/properties/1/value/arguments/0/properties/0/value'),
      one_time_keyboard: true
    }, 'arguments/0/arguments/2/properties/1/value/arguments/0')), 'arguments/0/arguments/2/properties/1/value')
  }, 'arguments/0/arguments/2')), 'arguments/0'), {
    content: 't.truthy(h.api.sendMessage.calledWith(31337, \'Your choice?\', { disable_notification: true, reply_markup: JSON.stringify({ keyboard: [[\'One\', \'Two\', \'Three\'], [\'OK\', \'Cancel\']], one_time_keyboard: true }) }))',
    filepath: 'test/response-handlers/telegram/options-response-handler-test.js',
    line: 45
  }));
});

(0, _ava2.default)('should call sendMessage with default text message', function (t) {
  var _rec2 = new _powerAssertRecorder();

  var user = { platformId: 31337 };
  var h = new _optionsResponseHandler2.default({
    response: new _optionsResponse2.default({ rows: responseObject.rows, defaultMessage: 'default message' }),
    user: user
  });
  h.api = { sendMessage: _specSupport.ss.sinon.stub().returns({ catch: function _catch() {} }) };
  h.call(function () {
    return t.fail();
  }); // and should not call onResult
  t.truthy(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(h, 'arguments/0/callee/object/object/object').api, 'arguments/0/callee/object/object').sendMessage, 'arguments/0/callee/object').calledWith(31337, 'default message', _rec2._capt({
    disable_notification: true,
    reply_markup: _rec2._capt(_rec2._capt(JSON, 'arguments/0/arguments/2/properties/1/value/callee/object').stringify(_rec2._capt({
      keyboard: _rec2._capt([_rec2._capt(['One', 'Two', 'Three'], 'arguments/0/arguments/2/properties/1/value/arguments/0/properties/0/value/elements/0'), _rec2._capt(['OK', 'Cancel'], 'arguments/0/arguments/2/properties/1/value/arguments/0/properties/0/value/elements/1')], 'arguments/0/arguments/2/properties/1/value/arguments/0/properties/0/value'),
      one_time_keyboard: true
    }, 'arguments/0/arguments/2/properties/1/value/arguments/0')), 'arguments/0/arguments/2/properties/1/value')
  }, 'arguments/0/arguments/2')), 'arguments/0'), {
    content: 't.truthy(h.api.sendMessage.calledWith(31337, \'default message\', { disable_notification: true, reply_markup: JSON.stringify({ keyboard: [[\'One\', \'Two\', \'Three\'], [\'OK\', \'Cancel\']], one_time_keyboard: true }) }))',
    filepath: 'test/response-handlers/telegram/options-response-handler-test.js',
    line: 66
  }));
});
//# sourceMappingURL=../../../node_modules/.cache/ava/1ab8dfc0757a8e526bf5db236bf79926.js.map