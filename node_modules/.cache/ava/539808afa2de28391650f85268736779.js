'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars, max-len */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _verifyLocation = require('../../../src/actions/menu/passenger/verify-location');

var _verifyLocation2 = _interopRequireDefault(_verifyLocation);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var user = {};

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _verifyLocation2.default({ i18n: _specSupport.i18n, user: user });
  t.pass();
});

(0, _ava2.default)('should return composite response on get', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder();

  var action = new _verifyLocation2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.get();
  t.is(_rec._expr(_rec._capt(_rec._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 35
  }), 'composite');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'text\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 36
  }), 'text');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[0].message, i18n.__(\'passenger-verify-location.verify_location\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 37
  }), _rec4._expr(_rec4._capt(_rec4._capt(_specSupport.i18n, 'arguments/1/callee/object').__('passenger-verify-location.verify_location'), 'arguments/1'), {
    content: 't.is(response.responses[0].message, i18n.__(\'passenger-verify-location.verify_location\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 37
  }));
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_rec5._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'options\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 38
  }), 'options');
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[0][0].value, \'yes\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 39
  }), 'yes');
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[1][0].value, \'no\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 40
  }), 'no');
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[0][0].label, i18n.__(\'global.yes\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 41
  }), _rec9._expr(_rec9._capt(_rec9._capt(_specSupport.i18n, 'arguments/1/callee/object').__('global.yes'), 'arguments/1'), {
    content: 't.is(response.responses[1].rows[0][0].label, i18n.__(\'global.yes\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 41
  }));
  t.is(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(_rec10._capt(_rec10._capt(_rec10._capt(_rec10._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[1][0].label, i18n.__(\'global.no\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 42
  }), _rec11._expr(_rec11._capt(_rec11._capt(_specSupport.i18n, 'arguments/1/callee/object').__('global.no'), 'arguments/1'), {
    content: 't.is(response.responses[1].rows[1][0].label, i18n.__(\'global.no\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 42
  }));
  t.is(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(_rec12._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').defaultMessage, 'arguments/0'), {
    content: 't.is(response.responses[1].defaultMessage, i18n.__(\'global.default_options_message\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 43
  }), _rec13._expr(_rec13._capt(_rec13._capt(_specSupport.i18n, 'arguments/1/callee/object').__('global.default_options_message'), 'arguments/1'), {
    content: 't.is(response.responses[1].defaultMessage, i18n.__(\'global.default_options_message\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 43
  }));
});

(0, _ava2.default)('should return composite response on post', function (t) {
  var _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder(),
      _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder(),
      _rec19 = new _powerAssertRecorder(),
      _rec20 = new _powerAssertRecorder(),
      _rec21 = new _powerAssertRecorder(),
      _rec22 = new _powerAssertRecorder(),
      _rec23 = new _powerAssertRecorder(),
      _rec24 = new _powerAssertRecorder(),
      _rec25 = new _powerAssertRecorder(),
      _rec26 = new _powerAssertRecorder(),
      _rec27 = new _powerAssertRecorder(),
      _rec28 = new _powerAssertRecorder(),
      _rec29 = new _powerAssertRecorder(),
      _rec30 = new _powerAssertRecorder(),
      _rec31 = new _powerAssertRecorder(),
      _rec32 = new _powerAssertRecorder(),
      _rec33 = new _powerAssertRecorder(),
      _rec34 = new _powerAssertRecorder(),
      _rec35 = new _powerAssertRecorder(),
      _rec36 = new _powerAssertRecorder(),
      _rec37 = new _powerAssertRecorder(),
      _rec38 = new _powerAssertRecorder(),
      _rec39 = new _powerAssertRecorder(),
      _rec40 = new _powerAssertRecorder(),
      _rec41 = new _powerAssertRecorder(),
      _rec42 = new _powerAssertRecorder();

  var action = new _verifyLocation2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.post(31337);
  t.is(_rec14._expr(_rec14._capt(_rec14._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 49
  }), 'composite');
  t.is(_rec15._expr(_rec15._capt(_rec15._capt(_rec15._capt(_rec15._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'if\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 50
  }), 'if');
  t.is(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(_rec16._capt(_rec16._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[0], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].condition.type, \'equals\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 51
  }), 'equals');
  t.is(_rec17._expr(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[0], 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.responses[0].condition.actual, 31337)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 52
  }), 31337);
  t.is(_rec18._expr(_rec18._capt(_rec18._capt(_rec18._capt(_rec18._capt(_rec18._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[0], 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.responses[0].condition.expected, \'yes\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 53
  }), 'yes');
  t.is(_rec19._expr(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[0], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].ok.type, \'composite\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 54
  }), 'composite');
  t.is(_rec20._expr(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[0], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].ok.responses[0].type, \'text\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 55
  }), 'text');
  t.is(_rec21._expr(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[0], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[0].ok.responses[0].message, \'\uD83D\uDC4C OK!\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 56
  }), '👌 OK!');
  t.is(_rec22._expr(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[0], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].ok.responses[1].type, \'redirect\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 57
  }), 'redirect');
  t.is(_rec23._expr(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[0], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[0].ok.responses[1].path, \'passenger-request-destination\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 58
  }), 'passenger-request-destination');
  t.falsy(_rec24._expr(_rec24._capt(_rec24._capt(_rec24._capt(_rec24._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[0].err)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 59
  }));

  t.is(_rec25._expr(_rec25._capt(_rec25._capt(_rec25._capt(_rec25._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'if\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 61
  }), 'if');
  t.is(_rec26._expr(_rec26._capt(_rec26._capt(_rec26._capt(_rec26._capt(_rec26._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].condition.type, \'equals\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 62
  }), 'equals');
  t.is(_rec27._expr(_rec27._capt(_rec27._capt(_rec27._capt(_rec27._capt(_rec27._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.responses[1].condition.actual, 31337)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 63
  }), 31337);
  t.is(_rec28._expr(_rec28._capt(_rec28._capt(_rec28._capt(_rec28._capt(_rec28._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.responses[1].condition.expected, \'no\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 64
  }), 'no');
  t.is(_rec29._expr(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.type, \'composite\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 65
  }), 'composite');
  t.is(_rec30._expr(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.responses[0].type, \'text\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 66
  }), 'text');
  t.is(_rec31._expr(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.responses[0].message, i18n.__(\'passenger-verify-location.try_with_paperclip\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 67
  }), _rec32._expr(_rec32._capt(_rec32._capt(_specSupport.i18n, 'arguments/1/callee/object').__('passenger-verify-location.try_with_paperclip'), 'arguments/1'), {
    content: 't.is(response.responses[1].ok.responses[0].message, i18n.__(\'passenger-verify-location.try_with_paperclip\'))',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 67
  }));
  t.is(_rec33._expr(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.responses[1].type, \'redirect\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 68
  }), 'redirect');
  t.is(_rec34._expr(_rec34._capt(_rec34._capt(_rec34._capt(_rec34._capt(_rec34._capt(_rec34._capt(_rec34._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').ok, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.responses[1].path, \'passenger-request-location\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 69
  }), 'passenger-request-location');
  t.falsy(_rec35._expr(_rec35._capt(_rec35._capt(_rec35._capt(_rec35._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[1].err)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 70
  }));

  t.is(_rec36._expr(_rec36._capt(_rec36._capt(_rec36._capt(_rec36._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[2].type, \'if\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 72
  }), 'if');
  t.is(_rec37._expr(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[2].condition.type, \'not-in\')',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 73
  }), 'not-in');
  t.is(_rec38._expr(_rec38._capt(_rec38._capt(_rec38._capt(_rec38._capt(_rec38._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').condition, 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[2].condition.value, 31337)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 74
  }), 31337);
  t.deepEqual(_rec39._expr(_rec39._capt(_rec39._capt(_rec39._capt(_rec39._capt(_rec39._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').condition, 'arguments/0/object').arr, 'arguments/0'), {
    content: 't.deepEqual(response.responses[2].condition.arr, [\'yes\', \'no\'])',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 75
  }), _rec40._expr(_rec40._capt(['yes', 'no'], 'arguments/1'), {
    content: 't.deepEqual(response.responses[2].condition.arr, [\'yes\', \'no\'])',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 75
  }));
  t.truthy(_rec41._expr(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').ok, 'arguments/0'), {
    content: 't.truthy(response.responses[2].ok)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 76
  }));
  t.falsy(_rec42._expr(_rec42._capt(_rec42._capt(_rec42._capt(_rec42._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[2].err)',
    filepath: 'test/menu/passenger/verify-location-test.js',
    line: 77
  }));
});
//# sourceMappingURL=../../../node_modules/.cache/ava/539808afa2de28391650f85268736779.js.map