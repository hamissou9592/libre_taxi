{"version":3,"sources":["request-price-test.js"],"names":["user","userKey","state","location","requestedVehicleType","destination","i18n","t","pass","action","response","get","is","type","responses","message","__","post","condition","value","okResponse","ok","errResponse","err","price","order","passengerKey","deepEqual","passengerLocation","passengerDestination","truthy","createdAt","regex","orderKey","guidRegex","route","arg","expectedState","currentOrderKey","menuLocation","path","delay"],"mappings":"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","file":"request-price-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-unused-vars */\nimport test from 'ava';\nimport routes from '../../../src/routes'; // to aviod circular dependencies\nimport PassengerRequestPrice from '../../../src/actions/menu/passenger/request-price';\nimport { i18n, ss } from '../../spec-support';\n\nconst user = {\n  userKey: 'cli_1',\n  state: {\n    location: [37.421955, -122.084058],\n    requestedVehicleType: 'motorbike',\n    destination: '702 marshal street, redwood city',\n  },\n};\n\ntest('can be constructed with default parameters', t => {\n  new PassengerRequestPrice({ i18n, user });\n  t.pass();\n});\n\ntest('should return composite response on get', t => {\n  const action = new PassengerRequestPrice({ i18n, user });\n  const response = action.get();\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'text');\n  t.is(response.responses[0].message,\n    i18n.__('passenger-request-price.set_price'));\n  t.is(response.responses[1].type, 'request-user-input');\n});\n\ntest('should return conditional response on post', t => {\n  const action = new PassengerRequestPrice({ i18n, user });\n  const response = action.post('50');\n  t.is(response.type, 'if');\n  t.is(response.condition.type, 'numeric');\n  t.is(response.condition.value, '50');\n\n  const okResponse = response.ok;\n  const errResponse = response.err;\n\n  t.is(okResponse.type, 'composite');\n  t.is(okResponse.responses[0].type, 'user-state');\n  t.is(okResponse.responses[0].state.price, '50');\n  // composite\n  t.is(okResponse.responses[1].type, 'composite');\n  // that contains: 1. save order\n  t.is(okResponse.responses[1].responses[0].type, 'save-order');\n  t.is(okResponse.responses[1].responses[0].order.passengerKey, 'cli_1');\n  t.deepEqual(okResponse.responses[1].responses[0].order.passengerLocation, [37.421955, -122.084058]); // eslint-disable-line max-len\n  t.is(okResponse.responses[1].responses[0].order.passengerDestination, '702 marshal street, redwood city'); // eslint-disable-line max-len\n  t.truthy(okResponse.responses[1].responses[0].order.createdAt);\n  t.is(okResponse.responses[1].responses[0].order.price, '50');\n  t.is(okResponse.responses[1].responses[0].order.requestedVehicleType, 'motorbike');\n  t.regex(okResponse.responses[1].responses[0].order.orderKey, ss.guidRegex);\n  // 2. inform passenger\n  t.is(okResponse.responses[1].responses[1].type, 'inform-passenger');\n  t.is(okResponse.responses[1].responses[1].passengerKey, 'cli_1');\n  // 3. notify drivers\n  t.is(okResponse.responses[1].responses[2].type, 'notify-drivers');\n  t.is(okResponse.responses[1].responses[2].passengerKey, 'cli_1');\n  // call action to show message in 20 mins\n  t.is(okResponse.responses[2].type, 'call-action');\n  t.is(okResponse.responses[2].userKey, 'cli_1');\n  t.is(okResponse.responses[2].route, 'show-message');\n  t.regex(okResponse.responses[2].arg.expectedState.currentOrderKey, ss.guidRegex);\n  t.is(okResponse.responses[2].arg.expectedState.menuLocation, 'order-submitted');\n  t.is(okResponse.responses[2].arg.message, i18n.__('passenger-request-price.on_timeout'));\n  t.is(okResponse.responses[2].arg.path, 'passenger-index');\n  t.is(okResponse.responses[2].delay, 20 * 60 * 1000);\n  // text and redirect\n  t.is(okResponse.responses[3].type, 'text');\n  t.is(okResponse.responses[3].message, '👌 OK!');\n  t.is(okResponse.responses[4].type, 'redirect');\n  t.is(okResponse.responses[4].path, 'blank-screen');\n\n  t.is(errResponse.type, 'composite');\n  t.is(errResponse.responses[0].type, 'error');\n  t.is(errResponse.responses[0].message, i18n.__('passenger-request-price.should_be_numeric'));\n  t.is(errResponse.responses[1].type, 'redirect');\n  t.is(errResponse.responses[1].path, 'passenger-request-price');\n});\n"]}