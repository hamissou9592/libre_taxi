'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console, arrow-body-style */
// eslint-disable-line max-len


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _inlineButtonCallback = require('../../../src/response-handlers/common/inline-button-callback');

var _inlineButtonCallback2 = _interopRequireDefault(_inlineButtonCallback);

var _checkNotNull = require('../../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _responseHandlerFactory = require('../../../src/factories/response-handler-factory');

var _responseHandlerFactory2 = _interopRequireDefault(_responseHandlerFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)(['value', 'user'], function (args) {
  new _inlineButtonCallback2.default(args);
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder();

  var cb = new _inlineButtonCallback2.default({ value: { foo: 'bar' }, user: {} });
  t.is(_rec._expr(_rec._capt(_rec._capt(cb, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(cb.type, \'inline-button-callback\')',
    filepath: 'test/response-handlers/common/inline-button-callback-test.js',
    line: 29
  }), 'inline-button-callback');
  t.deepEqual(_rec2._expr(_rec2._capt(_rec2._capt(cb, 'arguments/0/object').value, 'arguments/0'), {
    content: 't.deepEqual(cb.value, { foo: \'bar\' })',
    filepath: 'test/response-handlers/common/inline-button-callback-test.js',
    line: 30
  }), _rec3._expr(_rec3._capt({ foo: 'bar' }, 'arguments/1'), {
    content: 't.deepEqual(cb.value, { foo: \'bar\' })',
    filepath: 'test/response-handlers/common/inline-button-callback-test.js',
    line: 30
  }));
  t.truthy(_rec4._expr(_rec4._capt(_rec4._capt(cb, 'arguments/0/object').user, 'arguments/0'), {
    content: 't.truthy(cb.user)',
    filepath: 'test/response-handlers/common/inline-button-callback-test.js',
    line: 31
  }));
});

_ava2.default.cb('should execute handler on call', function (t) {
  _responseHandlerFactory2.default.getHandler = function () {
    return { call: function call() {
        return t.end();
      } };
  };
  var response = { type: 'empty', userKey: 'cli_1' };
  var user = { state: {} };
  var cb = new _inlineButtonCallback2.default({ value: response, user: user });
  cb.call();
});
//# sourceMappingURL=../../../node_modules/.cache/ava/7458fcbd699bd2fac8de2276f66291f1.js.map