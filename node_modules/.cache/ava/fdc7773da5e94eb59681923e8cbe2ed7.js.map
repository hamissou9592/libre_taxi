{"version":3,"sources":["inline-options-response-handler-test.js"],"names":["args","response","rows","label","value","t","pass","cb","h","user","tmp","console","log","sinon","spy","call","truthy","calledWith","end","clearAll","set","assert","callOrder","hh","k","v","Q","type","W","E","is"],"mappings":"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","file":"inline-options-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-console */\nimport test from 'ava';\nimport InlineOptionsResponseHandler from '../../../src/response-handlers/cli/inline-options-response-handler'; // eslint-disable-line max-len\nimport InlineOptionsResponse from '../../../src/responses/inline-options-response';\nimport checkNotNullTest from '../../helpers/check-not-null.js';\nimport hotkeys from '../../../src/cli-hotkeys';\nimport { ss } from '../../spec-support';\nimport sinon from 'sinon';\n\ncheckNotNullTest('response', (args) => { new InlineOptionsResponseHandler(args); });\n\nconst response = new InlineOptionsResponse({\n  rows: [\n    [\n      { label: 'One', value: '1' },\n      { label: 'Two', value: '2' },\n      { label: 'Three', value: '3' },\n    ],\n  ],\n});\n\ntest('can be constructed with default parameters', t => {\n  new InlineOptionsResponseHandler({ response: {} });\n  t.pass();\n});\n\ntest.cb('should print the message to console', t => {\n  const h = new InlineOptionsResponseHandler({ response, user: {} });\n  const tmp = console.log;\n  console.log = ss.sinon.spy();\n\n  h.call(() => {\n    t.truthy(console.log.calledWith('[One] (^Q), [Two] (^W), [Three] (^E)'));\n    console.log = tmp;\n    t.end();\n  });\n});\n\ntest.cb('should clear all hotkeys and set hotkeys', t => {\n  const h = new InlineOptionsResponseHandler({ response, user: {} });\n  const tmp = console.log;\n  console.log = ss.sinon.spy();\n  hotkeys.clearAll = ss.sinon.spy();\n  hotkeys.set = ss.sinon.spy();\n\n  h.call(() => {\n    t.truthy(hotkeys.clearAll.calledWith());\n    t.truthy(hotkeys.set.calledWith('Q'));\n    t.truthy(hotkeys.set.calledWith('W'));\n    t.truthy(hotkeys.set.calledWith('E'));\n    sinon.assert.callOrder(hotkeys.clearAll, hotkeys.set);\n    console.log = tmp;\n    t.end();\n  });\n});\n\ntest.cb('should set correct callbacks for hotkeys', t => {\n  const h = new InlineOptionsResponseHandler({ response, user: {} });\n  const tmp = console.log;\n  const hh = {};\n  console.log = ss.sinon.spy();\n  hotkeys.clearAll = ss.sinon.spy();\n  hotkeys.set = (k, v) => { hh[k] = v; };\n\n  h.call(() => {\n    t.truthy(hh.Q.type, 'inline-button-callback');\n    t.truthy(hh.W.type, 'inline-button-callback');\n    t.truthy(hh.E.type, 'inline-button-callback');\n    t.is(hh.Q.value, '1');\n    t.is(hh.W.value, '2');\n    t.is(hh.E.value, '3');\n    console.log = tmp;\n    t.end();\n  });\n});\n"]}