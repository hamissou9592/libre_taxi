{"version":3,"sources":["new-test.js"],"names":["user","userKey","state","phone","identity","i18n","t","pass","args","distance","from","to","price","passengerKey","orderKey","action","response","call","is","type","responses","message","__","deepEqual","location","condition","value","ok","err","rows","label","button2","regex","guidRegex","button1","path","inlineValues","hash","route","kicker","menuLocation","currentOrderKey","arg","driverPhone","driverIdentity"],"mappings":"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","file":"new-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-unused-vars, max-len */\nimport test from 'ava';\nimport routes from '../../../../src/routes'; // to aviod circular dependencies\nimport DriverOrderNew from '../../../../src/actions/menu/driver/order/new';\nimport { i18n, ss } from '../../../spec-support';\n\nconst user = { userKey: 'cli_1', state: { phone: '(555) 123-11-22', identity: 31337 } };\n\ntest('can be constructed with default parameters', t => {\n  new DriverOrderNew({ i18n, user });\n  t.pass();\n});\n\ntest('should return composite response on call', t => {\n  const args = { distance: 10, from: [37.421955, -122.084058], to: 'foo', price: '50',\n    passengerKey: 'cli_2', orderKey: 'd3adb33f' };\n  const action = new DriverOrderNew({ i18n, user });\n  const response = action.call(args);\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'interrupt-prompt');\n  t.is(response.responses[1].type, 'user-state');\n  t.is(response.responses[2].type, 'text');\n  t.is(response.responses[2].message, i18n.__('driver-order-new.new_order'));\n  t.is(response.responses[3].type, 'text');\n  t.is(response.responses[3].message, i18n.__('driver-order-new.distance', '10.0 km'));\n  t.is(response.responses[4].type, 'map');\n  t.deepEqual(response.responses[4].location, [37.421955, -122.084058]);\n  t.is(response.responses[5].type, 'text');\n  t.is(response.responses[5].message, i18n.__('driver-order-new.to', 'foo'));\n  t.is(response.responses[6].type, 'if');\n  t.is(response.responses[6].condition.type, 'zero-price');\n  t.is(response.responses[6].condition.value, '50');\n  t.is(response.responses[6].ok.type, 'text');\n  t.is(response.responses[6].ok.message, i18n.__('driver-order-new.price_not_set'));\n  t.is(response.responses[6].err.type, 'text');\n  t.is(response.responses[6].err.message, i18n.__('driver-order-new.price', '50'));\n  t.is(response.responses[7].type, 'text');\n  t.is(response.responses[7].message, i18n.__('driver-order-new.call_to_action'));\n  t.is(response.responses[8].type, 'if');\n  t.is(response.responses[8].condition.type, 'zero-price');\n  t.is(response.responses[8].condition.value, '50');\n  t.is(response.responses[8].ok.type, 'inline-options');\n  t.is(response.responses[8].ok.rows[0][0].label, i18n.__('driver-order-new.set_my_price'));\n  const button2 = response.responses[8].ok.rows[0][0].value;\n  t.regex(button2, ss.guidRegex);\n  t.is(response.responses[8].err.type, 'inline-options');\n  t.is(response.responses[8].err.rows[0][0].label, i18n.__('driver-order-new.send_my_number'));\n  const button1 = response.responses[8].err.rows[0][0].value;\n  t.regex(button1, ss.guidRegex);\n  t.is(response.responses[8].err.rows[0][1].label, i18n.__('driver-order-new.set_my_price'));\n  t.is(response.responses[8].err.rows[0][1].value, button2);\n  t.is(response.responses[9].type, 'redirect');\n  t.is(response.responses[9].path, 'driver-index');\n\n  t.deepEqual(response.responses[1].state.inlineValues.hash[button1], {\n    type: 'call-action',\n    route: 'passenger-contact-new-number',\n    kicker: { menuLocation: 'order-submitted', currentOrderKey: 'd3adb33f' },\n    userKey: 'cli_2',\n    orderKey: 'd3adb33f',\n    arg: {\n      driverPhone: '(555) 123-11-22',\n      distance: 10,\n      driverIdentity: 31337,\n    },\n  });\n\n  t.deepEqual(response.responses[1].state.inlineValues.hash[button2], {\n    type: 'call-action',\n    route: 'save-and-redirect',\n    kicker: { menuLocation: 'driver-index' },\n    userKey: 'cli_1',\n    arg: {\n      passengerKey: 'cli_2',\n      distance: 10,\n      path: 'driver-order-set-price',\n      orderKey: 'd3adb33f',\n    },\n  });\n});\n"]}