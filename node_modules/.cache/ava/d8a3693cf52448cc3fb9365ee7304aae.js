'use strict';

var _assign = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/object/assign.js');

var _assign2 = _interopRequireDefault(_assign);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _cliCaQueue = require('../../src/queue/cli-ca-queue');

var _cliCaQueue2 = _interopRequireDefault(_cliCaQueue);

var _checkNotNull = require('../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _specSupport = require('../spec-support');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)('userKey', function (args) {
  new _cliCaQueue2.default(args);
});

(0, _ava2.default)('should have ca type', function (t) {
  var _rec = new _powerAssertRecorder();

  var queue = new _cliCaQueue2.default({ userKey: 'cli_1' });
  t.is(_rec._expr(_rec._capt(_rec._capt(queue, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(queue.type, \'call-action\')',
    filepath: 'test/queue/cli-ca-queue-test.js',
    line: 30
  }), 'call-action');
  queue.process();
});

(0, _ava2.default)('should have instance type', function (t) {
  var _rec2 = new _powerAssertRecorder();

  var queue = new _cliCaQueue2.default({ userKey: 'cli_1' });
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(queue, 'arguments/0/object').instanceType, 'arguments/0'), {
    content: 't.is(queue.instanceType, \'call-action-cli_1\')',
    filepath: 'test/queue/cli-ca-queue-test.js',
    line: 36
  }), 'call-action-cli_1');
});

_ava2.default.cb('should call super.process(recreate) on process', function (t) {
  t.plan(3);
  var cb = { cb: true };
  var recreate = { recreate: true };
  var queue = new _cliCaQueue2.default({
    userKey: 'cli_1',
    queue: { // inject dependency
      process: function process(type, num, callback) {
        var _rec3 = new _powerAssertRecorder(),
            _rec4 = new _powerAssertRecorder(),
            _rec5 = new _powerAssertRecorder(),
            _rec6 = new _powerAssertRecorder();

        t.is(_rec3._expr(_rec3._capt(type, 'arguments/0'), {
          content: 't.is(type, \'call-action\')',
          filepath: 'test/queue/cli-ca-queue-test.js',
          line: 47
        }), 'call-action');
        t.is(_rec4._expr(_rec4._capt(num, 'arguments/0'), {
          content: 't.is(num, 20)',
          filepath: 'test/queue/cli-ca-queue-test.js',
          line: 48
        }), 20);
        t.is(_rec5._expr(_rec5._capt(callback, 'arguments/0'), {
          content: 't.is(callback, recreate)',
          filepath: 'test/queue/cli-ca-queue-test.js',
          line: 49
        }), _rec6._expr(_rec6._capt(recreate, 'arguments/1'), {
          content: 't.is(callback, recreate)',
          filepath: 'test/queue/cli-ca-queue-test.js',
          line: 49
        }));
        t.end();
      }
    },
    instanceQueue: {
      process: function process() {}
    }
  });
  queue.recreate = recreate;
  queue.process(cb);
});

_ava2.default.cb('should subscribe to instance queue messages on process', function (t) {
  t.plan(1);
  var cb = { cb: true };
  var queue = new _cliCaQueue2.default({
    userKey: 'cli_1',
    queue: {
      process: function process() {}
    },
    instanceQueue: {
      process: function process(callback) {
        var _rec7 = new _powerAssertRecorder(),
            _rec8 = new _powerAssertRecorder();

        // we call "process" - this is how we're subscribed
        t.is(_rec7._expr(_rec7._capt(callback, 'arguments/0'), {
          content: 't.is(callback, cb)',
          filepath: 'test/queue/cli-ca-queue-test.js',
          line: 71
        }), _rec8._expr(_rec8._capt(cb, 'arguments/1'), {
          content: 't.is(callback, cb)',
          filepath: 'test/queue/cli-ca-queue-test.js',
          line: 71
        }));
        t.end();
      }
    }
  });
  queue.recreate = function () {};
  queue.process(cb);
});

_ava2.default.cb('should recreate message on recreate callback', function (t) {
  t.plan(3);

  var instanceKue = {};
  var create = _specSupport.ss.sinon.stub().returns(instanceKue);
  var removeOnComplete = _specSupport.ss.sinon.stub().returns(instanceKue);
  var save = _specSupport.ss.sinon.stub().returns(instanceKue);
  (0, _assign2.default)(instanceKue, { create: create, removeOnComplete: removeOnComplete, save: save });

  var data = { foo: 'bar', userKey: 'cli_2' };
  var job = { data: data };
  var queue = new _cliCaQueue2.default({
    userKey: 'cli_1',
    instanceKue: instanceKue
  });
  var done = function done() {
    var _rec9 = new _powerAssertRecorder(),
        _rec10 = new _powerAssertRecorder(),
        _rec11 = new _powerAssertRecorder();

    t.truthy(_rec9._expr(_rec9._capt(_rec9._capt(create, 'arguments/0/callee/object').calledWith('call-action-cli_2', _rec9._capt({ foo: 'bar', userKey: 'cli_2' }, 'arguments/0/arguments/1')), 'arguments/0'), {
      content: 't.truthy(create.calledWith(\'call-action-cli_2\', { foo: \'bar\', userKey: \'cli_2\' }))',
      filepath: 'test/queue/cli-ca-queue-test.js',
      line: 96
    }));
    t.truthy(_rec10._expr(_rec10._capt(_rec10._capt(removeOnComplete, 'arguments/0/callee/object').calledWith(true), 'arguments/0'), {
      content: 't.truthy(removeOnComplete.calledWith(true))',
      filepath: 'test/queue/cli-ca-queue-test.js',
      line: 97
    }));
    t.truthy(_rec11._expr(_rec11._capt(_rec11._capt(save, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
      content: 't.truthy(save.calledWith())',
      filepath: 'test/queue/cli-ca-queue-test.js',
      line: 98
    }));
    _sinon2.default.assert.callOrder(create, removeOnComplete, save);
    t.end();
  };
  queue.recreate(job, done);
});
//# sourceMappingURL=../../node_modules/.cache/ava/d8a3693cf52448cc3fb9365ee7304aae.js.map