'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _explainCheckins = require('../../../src/actions/menu/driver/explain-checkins');

var _explainCheckins2 = _interopRequireDefault(_explainCheckins);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var user = {};

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var _rec = new _powerAssertRecorder();

  var action = new _explainCheckins2.default({ i18n: _specSupport.i18n, user: user });
  t.is(_rec._expr(_rec._capt(_rec._capt(action, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(action.type, \'driver-explain-checkins\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 29
  }), 'driver-explain-checkins');
  t.pass();
});

(0, _ava2.default)('should return composite response on get', function (t) {
  var _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder();

  var action = new _explainCheckins2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.get();
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 36
  }), 'composite');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'text\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 37
  }), 'text');
  t.is(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[0].message, i18n.__(\'driver-explain-checkins.text\'))',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 38
  }), _rec5._expr(_rec5._capt(_rec5._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-explain-checkins.text'), 'arguments/1'), {
    content: 't.is(response.responses[0].message, i18n.__(\'driver-explain-checkins.text\'))',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 38
  }));
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'options\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 39
  }), 'options');
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[0][0].value, \'next\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 40
  }), 'next');
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[0][0].label, i18n.__(\'driver-explain-checkins.next\'))',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 41
  }), _rec9._expr(_rec9._capt(_rec9._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-explain-checkins.next'), 'arguments/1'), {
    content: 't.is(response.responses[1].rows[0][0].label, i18n.__(\'driver-explain-checkins.next\'))',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 41
  }));
});

(0, _ava2.default)('should return composite response on post', function (t) {
  var _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder(),
      _rec14 = new _powerAssertRecorder();

  var action = new _explainCheckins2.default({ i18n: _specSupport.i18n, user: user });

  var response = action.post();
  t.is(_rec10._expr(_rec10._capt(_rec10._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 48
  }), 'composite');
  t.is(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(_rec11._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'text\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 49
  }), 'text');
  t.is(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(_rec12._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[0].message, \'\uD83D\uDC4C OK!\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 50
  }), '👌 OK!');
  t.is(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'redirect\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 51
  }), 'redirect');
  t.is(_rec14._expr(_rec14._capt(_rec14._capt(_rec14._capt(_rec14._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[1].path, \'driver-request-location\')',
    filepath: 'test/menu/driver/explain-checkins-test.js',
    line: 52
  }), 'driver-request-location');
});
//# sourceMappingURL=../../../node_modules/.cache/ava/a398e20ae31767b0b6c44f07dc86f366.js.map