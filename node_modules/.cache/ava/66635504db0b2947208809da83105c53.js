'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _callActionResponse = require('../../src/responses/call-action-response');

var _callActionResponse2 = _interopRequireDefault(_callActionResponse);

var _checkNotNull = require('../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)(['userKey', 'route'], function (args) {
  new _callActionResponse2.default(args);
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _callActionResponse2.default({ userKey: 'cli_1', route: 'default' });
  t.pass();
});

(0, _ava2.default)('can be constructed with optional parameters', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder();

  var r = new _callActionResponse2.default({ userKey: 'cli_1', route: 'default', arg: { foo: 'bar' },
    kicker: {}, delay: 3000 });
  t.is(_rec._expr(_rec._capt(_rec._capt(r, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(r.type, \'call-action\')',
    filepath: 'test/responses/call-action-response-test.js',
    line: 34
  }), 'call-action');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(r, 'arguments/0/object').userKey, 'arguments/0'), {
    content: 't.is(r.userKey, \'cli_1\')',
    filepath: 'test/responses/call-action-response-test.js',
    line: 35
  }), 'cli_1');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(r, 'arguments/0/object').route, 'arguments/0'), {
    content: 't.is(r.route, \'default\')',
    filepath: 'test/responses/call-action-response-test.js',
    line: 36
  }), 'default');
  t.deepEqual(_rec4._expr(_rec4._capt(_rec4._capt(r, 'arguments/0/object').arg, 'arguments/0'), {
    content: 't.deepEqual(r.arg, { foo: \'bar\' })',
    filepath: 'test/responses/call-action-response-test.js',
    line: 37
  }), _rec5._expr(_rec5._capt({ foo: 'bar' }, 'arguments/1'), {
    content: 't.deepEqual(r.arg, { foo: \'bar\' })',
    filepath: 'test/responses/call-action-response-test.js',
    line: 37
  }));
  t.truthy(_rec6._expr(_rec6._capt(_rec6._capt(r, 'arguments/0/object').kicker, 'arguments/0'), {
    content: 't.truthy(r.kicker)',
    filepath: 'test/responses/call-action-response-test.js',
    line: 38
  }));
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(r, 'arguments/0/object').delay, 'arguments/0'), {
    content: 't.is(r.delay, 3000)',
    filepath: 'test/responses/call-action-response-test.js',
    line: 39
  }), 3000);
});
//# sourceMappingURL=../../node_modules/.cache/ava/66635504db0b2947208809da83105c53.js.map