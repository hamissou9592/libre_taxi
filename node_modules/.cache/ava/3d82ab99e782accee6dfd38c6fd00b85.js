'use strict';

var _typeof2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/typeof.js');

var _typeof3 = _interopRequireDefault(_typeof2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _action = require('../src/action');

var _action2 = _interopRequireDefault(_action);

var _checkNotNull = require('./helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _specSupport = require('./spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _avaThrowsHelper(fn, data) {
  try {
    return fn();
  } catch (e) {
    var type = typeof e === 'undefined' ? 'undefined' : (0, _typeof3.default)(e);

    if (e !== null && (type === "object" || type === "function")) {
      try {
        Object.defineProperty(e, "_avaThrowsHelperData", {
          value: data
        });
      } catch (e) {}
    }

    throw e;
  }
}

(0, _checkNotNull2.default)(['i18n', 'type', 'user'], function (args) {
  new _action2.default(args);
});
var user = {};

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _action2.default({ i18n: _specSupport.i18n, type: 'foo', user: user });
  t.pass();
});

_ava2.default.cb('should throw error when for missing methods', function (t) {
  var err = 'not implemented';
  var action = new _action2.default({ i18n: _specSupport.i18n, type: 'foo', user: user });

  t.throws(_avaThrowsHelper(function () {
    return function () {
      action.post();
    };
  }, {
    line: 37,
    column: 11,
    source: '() => { action.post(); }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/action-test.js'
  }), err);
  t.throws(_avaThrowsHelper(function () {
    return function () {
      action.get();
    };
  }, {
    line: 38,
    column: 11,
    source: '() => { action.get(); }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/action-test.js'
  }), err);

  t.end();
});

(0, _ava2.default)('should set state if not specified', function (t) {
  var _rec = new _powerAssertRecorder();

  var action = new _action2.default({ i18n: _specSupport.i18n, type: 'foo', user: user });
  t.truthy(_rec._expr(_rec._capt(_rec._capt(action, 'arguments/0/object').state, 'arguments/0'), {
    content: 't.truthy(action.state)',
    filepath: 'test/action-test.js',
    line: 45
  }));
  t.pass();
});

(0, _ava2.default)('should set state if specified', function (t) {
  var _rec2 = new _powerAssertRecorder();

  var action = new _action2.default({ i18n: _specSupport.i18n, state: { a: 1 }, type: 'foo', user: user });
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(action, 'arguments/0/object/object').state, 'arguments/0/object').a, 'arguments/0'), {
    content: 't.is(action.state.a, 1)',
    filepath: 'test/action-test.js',
    line: 51
  }), 1);
  t.pass();
});

_ava2.default.cb('should call get on `call` when arg is not provided', function (t) {
  var action = new _action2.default({ i18n: _specSupport.i18n, type: 'foo', user: user });
  action.get = function () {
    t.pass();
    t.end();
  };
  action.call();
});

_ava2.default.cb('should call post on `call` when arg is provided', function (t) {
  var action = new _action2.default({ i18n: _specSupport.i18n, type: 'foo', user: user });
  action.post = function (arg) {
    var _rec3 = new _powerAssertRecorder();

    t.is(_rec3._expr(_rec3._capt(arg, 'arguments/0'), {
      content: 't.is(arg, 123)',
      filepath: 'test/action-test.js',
      line: 67
    }), 123);
    t.end();
  };
  action.call(123);
});

(0, _ava2.default)('translation helper method should work', function (t) {
  var _rec4 = new _powerAssertRecorder();

  var action = new _action2.default({ i18n: _specSupport.i18n, type: 'select-user-type', user: user });
  t.is(_rec4._expr(_rec4._capt(_rec4._capt(action, 'arguments/0/callee/object').t('who_you_are'), 'arguments/0'), {
    content: 't.is(action.t(\'who_you_are\'), \'Who are you? (you can change this later)\')',
    filepath: 'test/action-test.js',
    line: 75
  }), 'Who are you? (you can change this later)');
});

(0, _ava2.default)('global translation helper method should work', function (t) {
  var _rec5 = new _powerAssertRecorder();

  var action = new _action2.default({ i18n: _specSupport.i18n, type: 'foo', user: user });
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(action, 'arguments/0/callee/object').gt('location_button_text'), 'arguments/0'), {
    content: 't.is(action.gt(\'location_button_text\'), \'Send location\')',
    filepath: 'test/action-test.js',
    line: 80
  }), 'Send location');
});
//# sourceMappingURL=../node_modules/.cache/ava/3d82ab99e782accee6dfd38c6fd00b85.js.map