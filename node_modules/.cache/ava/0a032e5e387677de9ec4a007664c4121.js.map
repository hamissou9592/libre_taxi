{"version":3,"sources":["interrupt-prompt-response-handler-test.js"],"names":["h","response","t","is","type","pass","plan","spy","sinon","inquirer","interruptPrompt","call","truthy","calledWith"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;AAEmH;;;AADnH;;;;AACA;;;;AACA;;;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AAAA;;AACtD,MAAMA,IAAI,6CAAmC,EAAEC,UAAU,EAAZ,EAAnC,CAAV;AACAC,IAAEC,EAAF,uBAAK,oCAAEC,IAAP;AAAA;AAAA;AAAA;AAAA,MAAa,uCAAb;AACAF,IAAEG,IAAF;AACD,CAJD;;AAMA,mBAAK,oCAAL,EAA2C,aAAK;AAAA;;AAC9C;AACAH,IAAEI,IAAF,CAAO,CAAP;AACA,MAAMC,MAAM,gBAAGC,KAAH,CAASD,GAAT,EAAZ;AACA,MAAMP,IAAI,6CAAmC;AAC3CC,cAAU,EADiC;AAE3CQ,cAAU;AACRC,uBAAiBH;AADT;AAFiC,GAAnC,CAAV;AAMA;AACAP,IAAEW,IAAF,CAAO,KAAP;AACAT,IAAEU,MAAF,yBAAS,8CAAIC,UAAJ,CAAe,KAAf,CAAT;AAAA;AAAA;AAAA;AAAA;AACD,CAbD","file":"interrupt-prompt-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-console */\nimport test from 'ava';\nimport InterruptPromptResponseHandler from '../../../src/response-handlers/cli/interrupt-prompt-response-handler'; // eslint-disable-line max-len\nimport { ss } from '../../spec-support';\n\ntest('can be constructed with default parameters', t => {\n  const h = new InterruptPromptResponseHandler({ response: {} });\n  t.is(h.type, 'cli-interrupt-prompt-response-handler');\n  t.pass();\n});\n\ntest('calls interrupt prompt api on call', t => {\n  // arrange\n  t.plan(1);\n  const spy = ss.sinon.spy();\n  const h = new InterruptPromptResponseHandler({\n    response: {},\n    inquirer: {\n      interruptPrompt: spy,\n    },\n  });\n  // act\n  h.call(31337);\n  t.truthy(spy.calledWith(31337));\n});\n"]}