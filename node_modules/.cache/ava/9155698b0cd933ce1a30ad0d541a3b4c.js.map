{"version":3,"sources":["send-my-number-test.js"],"names":["args","r","userKey","orderKey","arg","foo","t","is","type","route","deepEqual","kicker","menuLocation","currentOrderKey","response","passengerKey","distance","state","phone","identity","driverPhone","driverIdentity"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,4BAAiB,CAAC,SAAD,EAAY,KAAZ,CAAjB,EAAqC,UAACA,IAAD,EAAU;AAAE,iCAAiBA,IAAjB;AAAyB,CAA1E;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;;AACtD,MAAMC,IAAI,+BAAiB,EAAEC,SAAS,OAAX,EAAoBC,UAAU,UAA9B,EAA0CC,KAAK,EAAEC,KAAK,KAAP,EAA/C,EAAjB,CAAV;AACAC,IAAEC,EAAF,uBAAK,oCAAEC,IAAP;AAAA;AAAA;AAAA;AAAA,MAAa,aAAb;AACAF,IAAEC,EAAF,yBAAK,qCAAEE,KAAP;AAAA;AAAA;AAAA;AAAA,MAAc,8BAAd;AACAH,IAAEI,SAAF,yBAAY,qCAAEC,MAAd;AAAA;AAAA;AAAA;AAAA,8BAAsB,EAAEC,cAAc,iBAAhB,EAAmCC,iBAAiB,UAApD,EAAtB;AAAA;AAAA;AAAA;AAAA;AACAP,IAAEC,EAAF,yBAAK,wDAAEH,GAAF,wBAAMC,GAAX;AAAA;AAAA;AAAA;AAAA,MAAgB,KAAhB;AACD,CAND;;AAQA,mBAAK,wDAAL,EAA+D,aAAK;AAAA;AAAA;;AAClE,MAAMS,WAAW,4BAAa,EAAEC,cAAc,OAAhB,EAAyBC,UAAU,CAAnC,EAAsCb,UAAU,UAAhD,EAAb,EAA2E,EAAEc,OAAO,EAAEC,OAAO,OAAT,EAAkBC,UAAU,KAA5B,EAAT,EAA3E,CAAjB;AACA;AACA;AACAb,IAAEI,SAAF,yBAAYI,QAAZ;AAAA;AAAA;AAAA;AAAA,8BAAsB;AACpBN,UAAM,aADc;AAEpBC,WAAO,8BAFa;AAGpBE,wBAAQ,EAAEC,cAAc,iBAAhB,EAAmCC,iBAAiB,UAApD,EAAR,mCAHoB;AAIpBX,aAAS,OAJW;AAKpBC,cAAU,UALU;AAMpBC,qBAAK;AACHgB,mBAAa,OADV;AAEHJ,gBAAU,CAFP;AAGHK,sBAAgB;AAHb,KAAL;AANoB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAYD,CAhBD","file":"send-my-number-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, max-len */\nimport test from 'ava';\nimport sendMyNumber, { SendMyNumber } from '../../../../../src/actions/menu/driver/order/buttons/send-my-number.js';\nimport checkNotNullTest from '../../../../helpers/check-not-null.js';\n\ncheckNotNullTest(['userKey', 'arg'], (args) => { new SendMyNumber(args); });\n\ntest('can be constructed with default parameters', t => {\n  const r = new SendMyNumber({ userKey: 'cli_1', orderKey: 'd3adb33f', arg: { foo: 'bar' } });\n  t.is(r.type, 'call-action');\n  t.is(r.route, 'passenger-contact-new-number');\n  t.deepEqual(r.kicker, { menuLocation: 'order-submitted', currentOrderKey: 'd3adb33f' });\n  t.is(r.arg.foo, 'bar');\n});\n\ntest('factory method should return stringified json response', t => {\n  const response = sendMyNumber({ passengerKey: 'cli_1', distance: 5, orderKey: 'd3adb33f' }, { state: { phone: '12345', identity: 31337 } });\n  // json example:\n  // {\"type\":\"call-action\",\"route\":\"passenger-contact-new-number\",\"kicker\":\"order-submitted\",\"userKey\":\"cli_1\",\"arg\":{\"driverPhone\":\"12345\",\"distance\":5}}\n  t.deepEqual(response, {\n    type: 'call-action',\n    route: 'passenger-contact-new-number',\n    kicker: { menuLocation: 'order-submitted', currentOrderKey: 'd3adb33f' },\n    userKey: 'cli_1',\n    orderKey: 'd3adb33f',\n    arg: {\n      driverPhone: '12345',\n      distance: 5,\n      driverIdentity: 31337,\n    },\n  });\n});\n"]}