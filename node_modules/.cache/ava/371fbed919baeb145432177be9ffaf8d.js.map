{"version":3,"sources":["inform-passenger-response-handler-test.js"],"names":["args","response","t","pass","cb","plan","passengerKey","spy","sinon","handler","queue","redirect","call","truthy","calledWith","userKey","route","end"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;AAE4H;;;AAD5H;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,4BAAiB,UAAjB,EAA6B,UAACA,IAAD,EAAU;AAAE,+CAAmCA,IAAnC;AAA2C,CAApF;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AACtD,+CAAmC,EAAEC,UAAU,EAAZ,EAAnC;AACAC,IAAEC,IAAF;AACD,CAHD;;AAKA,cAAKC,EAAL,CAAQ,2DAAR,EAAqE,aAAK;AACxE;AACAF,IAAEG,IAAF,CAAO,CAAP;AACA,MAAMJ,WAAW,sCAA4B,EAAEK,cAAc,OAAhB,EAA5B,CAAjB;AACA,MAAMC,MAAM,gBAAGC,KAAH,CAASD,GAAT,EAAZ;AACA,MAAME,UAAU,6CAAmC,EAAER,kBAAF,EAAnC,CAAhB;AACAQ,UAAQC,KAAR,GAAgB,EAAEC,UAAUJ,GAAZ,EAAhB;;AAEA;AACAE,UAAQG,IAAR,CAAa,YAAM;AAAA;;AACjB;AACAV,MAAEW,MAAF,uBAAS,6CAAIC,UAAJ,YAAe,EAAEC,SAAS,OAAX,EAAoBC,OAAO,iBAA3B,EAAf,6BAAT;AAAA;AAAA;AAAA;AAAA;AACAd,MAAEe,GAAF;AACD,GAJD;AAKD,CAdD","file":"inform-passenger-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport InformPassengerResponseHandler from '../../../src/response-handlers/submit-order/inform-passenger-response-handler'; // eslint-disable-line max-len\nimport InformPassengerResponse from '../../../src/responses/submit-order/inform-passenger-response';\nimport checkNotNullTest from '../../helpers/check-not-null.js';\nimport { ss } from '../../spec-support';\n\ncheckNotNullTest('response', (args) => { new InformPassengerResponseHandler(args); });\n\ntest('can be constructed with default parameters', t => {\n  new InformPassengerResponseHandler({ response: {} });\n  t.pass();\n});\n\ntest.cb('should post message to the queue when informing passenger', t => {\n  // arrange\n  t.plan(1);\n  const response = new InformPassengerResponse({ passengerKey: 'cli_1' });\n  const spy = ss.sinon.spy();\n  const handler = new InformPassengerResponseHandler({ response });\n  handler.queue = { redirect: spy };\n\n  // act\n  handler.call(() => {\n    // assert\n    t.truthy(spy.calledWith({ userKey: 'cli_1', route: 'order-submitted' }));\n    t.end();\n  });\n});\n"]}