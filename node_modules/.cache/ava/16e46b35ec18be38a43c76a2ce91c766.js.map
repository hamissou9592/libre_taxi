{"version":3,"sources":["validated-options-response-test.js"],"names":["ValidatedOptionsResponse","with","cb","err","t","throws","rows","end","label","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAmBA;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;EArBA;;;;;;;;;;;;;;;;;;AAkBA;;;IAKMA,wB;;;;;;;;;EAAiC;AAAA;AAAA;AAAA;;AAAA;AAAA,KAAcC,IAAd,oC;;AAEvC,cAAKC,EAAL,CAAQ,gDAAR,EAA0D,aAAK;AAC7D,MAAMC,MAAM,2CAAZ;;AAEAC,IAAEC,MAAF;AAAA,WAAS,YAAM;AACb,UAAIL,wBAAJ,CAA6B;AAC3BM,cAAM;AADqB,OAA7B;AAGD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIGH,GAJH;;AAMAC,IAAEG,GAAF;AACD,CAVD;;AAYA,cAAKL,EAAL,CAAQ,+CAAR,EAAyD,aAAK;AAC5D,MAAMC,MAAM,gCAAZ;;AAEAC,IAAEC,MAAF;AAAA,WAAS,YAAM;AACb,UAAIL,wBAAJ,CAA6B;AAC3BM,cAAM,CACJ,CAAC,EAAEE,OAAO,IAAT,EAAeC,OAAO,IAAtB,EAAD,CADI,EAC4B;AAChC,UAFI;AADqB,OAA7B;AAMD,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGN,GAPH;;AASAC,IAAEG,GAAF;AACD,CAbD;;AAeA,cAAKL,EAAL,CAAQ,qDAAR,EAA+D,aAAK;AAClE,MAAMC,MAAM,sCAAZ;;AAEAC,IAAEC,MAAF;AAAA,WAAS,YAAM;AACb,UAAIL,wBAAJ,CAA6B;AAC3BM,cAAM,CACJ,CACE,EAAEE,OAAO,IAAT,EAAeC,OAAO,IAAtB,EADF,EACgC;AAC9B,wBAFF,CADI;AADqB,OAA7B;AAQD,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASGN,GATH;;AAWAC,IAAEG,GAAF;AACD,CAfD;;AAiBA,cAAKL,EAAL,CAAQ,iEAAR,EAA2E,aAAK;AAC9E,MAAMC,MAAM,iDAAZ;;AAEAC,IAAEC,MAAF;AAAA,WAAS,YAAM;AACb,UAAIL,wBAAJ,CAA6B;AAC3BM,cAAM,CACJ,CACE,EAAEE,OAAO,IAAT,EADF,CADI;AADqB,OAA7B;AAOD,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGL,GARH;;AAUAC,IAAEG,GAAF;AACD,CAdD;;AAgBA,cAAKL,EAAL,CAAQ,iEAAR,EAA2E,aAAK;AAC9E,MAAMC,MAAM,iDAAZ;;AAEAC,IAAEC,MAAF;AAAA,WAAS,YAAM;AACb,UAAIL,wBAAJ,CAA6B;AAC3BM,cAAM,CACJ,CACE,EAAEG,OAAO,IAAT,EADF,CADI;AADqB,OAA7B;AAOD,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGN,GARH;;AAUAC,IAAEG,GAAF;AACD,CAdD","file":"validated-options-response-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport { mix } from 'mixwith';\nimport Mixin from '../../src/validations/validated-options-response';\n\nclass ValidatedOptionsResponse extends mix(class {}).with(Mixin) {}\n\ntest.cb('should throw type error when rows is not array', t => {\n  const err = 'rows parameter is expected to be an array';\n\n  t.throws(() => {\n    new ValidatedOptionsResponse({\n      rows: 'something',\n    });\n  }, err);\n\n  t.end();\n});\n\ntest.cb('should throw type error when row is not array', t => {\n  const err = 'row is expected to be an array';\n\n  t.throws(() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [{ label: 'Ok', value: 'ok' }], // array, OK\n        {}, // not array, ERR\n      ],\n    });\n  }, err);\n\n  t.end();\n});\n\ntest.cb('should throw type error when row item is not object', t => {\n  const err = 'row item is expected to be an object';\n\n  t.throws(() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [\n          { label: 'Ok', value: 'ok' }, // object, OK\n          'something else', // not object, ERR\n        ],\n      ],\n    });\n  }, err);\n\n  t.end();\n});\n\ntest.cb('should throw argument error when row item has no value property', t => {\n  const err = 'row item is expected to have \\'value\\' property';\n\n  t.throws(() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [\n          { label: 'Ok' }, // no `value` property\n        ],\n      ],\n    });\n  }, err);\n\n  t.end();\n});\n\ntest.cb('should throw argument error when row item has no label property', t => {\n  const err = 'row item is expected to have \\'label\\' property';\n\n  t.throws(() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [\n          { value: 'ok' }, // no `label` property\n        ],\n      ],\n    });\n  }, err);\n\n  t.end();\n});\n"]}