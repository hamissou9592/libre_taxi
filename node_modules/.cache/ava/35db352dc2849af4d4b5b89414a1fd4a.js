'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _identity = require('../../src/decorators/identity');

var _identity2 = _interopRequireDefault(_identity);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('should decorate with undefined identity', function (t) {
  var _rec = new _powerAssertRecorder();

  var identity = new _identity2.default('Driver');
  t.is(_rec._expr(_rec._capt(_rec._capt(identity, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity.toString(), \'Driver\')',
    filepath: 'test/decorators/identity-test.js',
    line: 25
  }), 'Driver');
});

(0, _ava2.default)('should decorate with empty identity', function (t) {
  var _rec2 = new _powerAssertRecorder();

  var identity = new _identity2.default('Driver', {});
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(identity, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity.toString(), \'Driver\')',
    filepath: 'test/decorators/identity-test.js',
    line: 30
  }), 'Driver');
});

(0, _ava2.default)('should decorate with empty all props', function (t) {
  var _rec3 = new _powerAssertRecorder();

  var identity = new _identity2.default('Driver', { first: 'Foo', last: 'Bar', username: 'ro31337' });
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(identity, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity.toString(), \'Driver (Foo Bar @ro31337)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 35
  }), 'Driver (Foo Bar @ro31337)');
});

(0, _ava2.default)('should decorate with some missing props', function (t) {
  var _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder();

  var identity1 = new _identity2.default('Driver', { first: 'Foo', username: 'ro31337' });
  var identity2 = new _identity2.default('Driver', { last: 'Bar', username: 'ro31337' });
  var identity3 = new _identity2.default('Driver', { first: 'Foo', last: 'Bar' });
  t.is(_rec4._expr(_rec4._capt(_rec4._capt(identity1, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity1.toString(), \'Driver (Foo @ro31337)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 42
  }), 'Driver (Foo @ro31337)');
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(identity2, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity2.toString(), \'Driver (Bar @ro31337)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 43
  }), 'Driver (Bar @ro31337)');
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(identity3, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity3.toString(), \'Driver (Foo Bar)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 44
  }), 'Driver (Foo Bar)');
});

(0, _ava2.default)('should decorate with some empty props', function (t) {
  var _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder();

  var identity1 = new _identity2.default('Driver', { first: 'Foo', last: '', username: 'ro31337' });
  var identity2 = new _identity2.default('Driver', { first: '', last: 'Bar', username: 'ro31337' });
  var identity3 = new _identity2.default('Driver', { first: 'Foo', last: 'Bar', username: '' });
  var identity4 = new _identity2.default('Driver', { first: '', last: '', username: '' });
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(identity1, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity1.toString(), \'Driver (Foo @ro31337)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 52
  }), 'Driver (Foo @ro31337)');
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(identity2, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity2.toString(), \'Driver (Bar @ro31337)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 53
  }), 'Driver (Bar @ro31337)');
  t.is(_rec9._expr(_rec9._capt(_rec9._capt(identity3, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity3.toString(), \'Driver (Foo Bar)\')',
    filepath: 'test/decorators/identity-test.js',
    line: 54
  }), 'Driver (Foo Bar)');
  t.is(_rec10._expr(_rec10._capt(_rec10._capt(identity4, 'arguments/0/callee/object').toString(), 'arguments/0'), {
    content: 't.is(identity4.toString(), \'Driver\')',
    filepath: 'test/decorators/identity-test.js',
    line: 55
  }), 'Driver');
});
//# sourceMappingURL=../../node_modules/.cache/ava/35db352dc2849af4d4b5b89414a1fd4a.js.map