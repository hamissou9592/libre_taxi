{"version":3,"sources":["call-action-response-handler-test.js"],"names":["h","response","t","is","type","cb","queue","create","obj","userKey","deepEqual","arg","foo","route","then","f","truthy","user","state","menuLocation","call","end","fail","kicker","plan","createDelayed","delay","sinon","spy","called"],"mappings":"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","file":"call-action-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport test from 'ava';\nimport CallActionResponseHandler from '../../src/response-handlers/call-action-response-handler';\nimport { mockLoadUser } from '../../src/factories/user-factory';\nimport CallActionResponse from '../../src/responses/call-action-response';\nimport { ss } from '../spec-support';\n\ntest('can be constructed with default parameters', t => {\n  const h = new CallActionResponseHandler({ response: {} });\n  t.is(h.type, 'call-action-response-handler');\n});\n\ntest.cb('should create message and post to the queue when kicker not specified', t => {\n  const queue = {\n    create: (obj) => {\n      t.is(obj.userKey, 'cli_1');\n      t.deepEqual(obj.arg, { foo: 'bar' });\n      t.is(obj.route, 'default');\n    },\n  };\n\n  const response = new CallActionResponse({\n    userKey: 'cli_1',\n    route: 'default',\n    arg: { foo: 'bar' },\n  });\n\n  const h = new CallActionResponseHandler({ response, queue });\n\n  const then = (f) => {\n    t.truthy(f);\n    const user = { state: { menuLocation: 'foobar' } };\n    f(user);\n  };\n\n  mockLoadUser(() => { return { then }; }); // eslint-disable-line arrow-body-style\n\n  h.call(() => { t.end(); });\n});\n\ntest.cb('should not enqueue when kicker is not satisfied', t => {\n  const queue = { create: () => { t.fail('should not enqueue'); } };\n\n  const response = new CallActionResponse({\n    userKey: 'cli_1',\n    route: 'default',\n    arg: { foo: 'bar' },\n    kicker: { menuLocation: 'something_different' },\n  });\n\n  const h = new CallActionResponseHandler({ response, queue });\n\n  const then = (f) => {\n    t.truthy(f);\n    const user = { state: { menuLocation: 'foobar' } };\n    f(user);\n  };\n\n  mockLoadUser(() => { return { then }; }); // eslint-disable-line arrow-body-style\n\n  h.call(() => { t.end(); });\n});\n\ntest.cb('should enqueue with correct kicker', t => {\n  const queue = { create: () => { t.end(); } };\n\n  const response = new CallActionResponse({\n    userKey: 'cli_1',\n    route: 'default',\n    arg: { foo: 'bar' },\n    kicker: { menuLocation: 'foobar' },\n  });\n\n  const h = new CallActionResponseHandler({ response, queue });\n\n  const then = (f) => {\n    t.truthy(f);\n    const user = { state: { menuLocation: 'foobar' } };\n    f(user);\n  };\n\n  mockLoadUser(() => { return { then }; }); // eslint-disable-line arrow-body-style\n\n  h.call(() => {});\n});\n\ntest.cb('should enqueue with delay', t => {\n  t.plan(6);\n\n  const queue = {\n    createDelayed: (obj, delay) => {\n      t.is(obj.userKey, 'cli_1');\n      t.deepEqual(obj.arg, { foo: 'bar' });\n      t.is(obj.route, 'default');\n      t.is(delay, 3000);\n    },\n    create: ss.sinon.spy(),\n  };\n\n  const response = new CallActionResponse({\n    userKey: 'cli_1',\n    route: 'default',\n    arg: { foo: 'bar' },\n    delay: 3000,\n  });\n\n  const h = new CallActionResponseHandler({ response, queue });\n\n  const then = (f) => {\n    t.truthy(f);\n    const user = { state: { menuLocation: 'foobar' } };\n    f(user);\n  };\n\n  mockLoadUser(() => { return { then }; }); // eslint-disable-line arrow-body-style\n\n  h.call(() => {\n    t.is(queue.create.called, false);\n    t.end();\n  });\n});\n"]}