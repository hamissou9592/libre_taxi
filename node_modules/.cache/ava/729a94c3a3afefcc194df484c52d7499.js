'use strict';

var _classCallCheck2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/classCallCheck.js');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/createClass.js');

var _createClass3 = _interopRequireDefault(_createClass2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _ifResponseHandler = require('../../src/response-handlers/if-response-handler');

var _ifResponseHandler2 = _interopRequireDefault(_ifResponseHandler);

var _ifResponse = require('../../src/responses/if-response');

var _ifResponse2 = _interopRequireDefault(_ifResponse);

var _textResponse = require('../../src/responses/text-response');

var _textResponse2 = _interopRequireDefault(_textResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// sample condition

var Equals = function () {
  function Equals(actual, expected) {
    (0, _classCallCheck3.default)(this, Equals);

    this.actual = actual;
    this.expected = expected;
  }

  (0, _createClass3.default)(Equals, [{
    key: 'call',
    value: function call() {
      return this.actual === this.expected;
    }
  }]);
  return Equals;
}();

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var _rec = new _powerAssertRecorder();

  var h = new _ifResponseHandler2.default({ response: {}, user: {} });
  t.is(_rec._expr(_rec._capt(_rec._capt(h, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(h.type, \'if-response-handler\')',
    filepath: 'test/response-handlers/if-response-handler-test.js',
    line: 40
  }), 'if-response-handler');
  t.pass();
});

_ava2.default.cb('should call ok response when condition truthy', function (t) {
  var result = '';
  var user = { platformType: 'cli' };
  var ok = new _textResponse2.default({ message: 'okay' });
  var err = new _textResponse2.default({ message: 'error' });
  var condition = new Equals(2 + 2, 4);
  var tmp = console.log;
  console.log = function (arg) {
    result += arg;
  };

  var response = new _ifResponse2.default({ condition: condition, ok: ok, err: err });

  var h = new _ifResponseHandler2.default({ response: response, user: user });
  h.call(function () {
    var _rec2 = new _powerAssertRecorder();

    t.is(_rec2._expr(_rec2._capt(result, 'arguments/0'), {
      content: 't.is(result, \'okay\')',
      filepath: 'test/response-handlers/if-response-handler-test.js',
      line: 60
    }), 'okay');
    console.log = tmp;
    t.end();
  });
});

_ava2.default.cb('should call err response when condition falsy', function (t) {
  var result = '';
  var user = { platformType: 'cli' };
  var ok = new _textResponse2.default({ message: 'okay' });
  var err = new _textResponse2.default({ message: 'error' });
  var condition = new Equals(2 + 2, 5);
  var tmp = console.log;
  console.log = function (arg) {
    result += arg;
  };

  var response = new _ifResponse2.default({ condition: condition, ok: ok, err: err });

  var h = new _ifResponseHandler2.default({ response: response, user: user });
  h.call(function () {
    var _rec3 = new _powerAssertRecorder();

    t.is(_rec3._expr(_rec3._capt(result, 'arguments/0'), {
      content: 't.is(result, \'error\')',
      filepath: 'test/response-handlers/if-response-handler-test.js',
      line: 81
    }), 'error');
    console.log = tmp;
    t.end();
  });
});

_ava2.default.cb('should not call anything when err isn\'t defined and condition falsy', function (t) {
  var result = '';
  var user = { platformType: 'cli' };
  var ok = new _textResponse2.default({ message: 'okay' });
  var condition = new Equals(2 + 2, 5);
  var tmp = console.log;
  console.log = function (arg) {
    result += arg;
  };

  var response = new _ifResponse2.default({ condition: condition, ok: ok });

  var h = new _ifResponseHandler2.default({ response: response, user: user });
  h.call(function () {
    var _rec4 = new _powerAssertRecorder();

    t.falsy(_rec4._expr(_rec4._capt(result, 'arguments/0'), {
      content: 't.falsy(result)',
      filepath: 'test/response-handlers/if-response-handler-test.js',
      line: 101
    }));
    console.log = tmp;
    t.end();
  });
});
//# sourceMappingURL=../../node_modules/.cache/ava/729a94c3a3afefcc194df484c52d7499.js.map