'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _updateIdentity = require('../../src/actions/menu/update-identity');

var _updateIdentity2 = _interopRequireDefault(_updateIdentity);

var _specSupport = require('../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var user = {};

(0, _ava2.default)('can be constructed with default parameters and has type', function (t) {
  var _rec = new _powerAssertRecorder();

  var action = new _updateIdentity2.default({ i18n: _specSupport.i18n, user: user });
  t.is(_rec._expr(_rec._capt(_rec._capt(action, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(action.type, \'update-identity\')',
    filepath: 'test/menu/update-identity-test.js',
    line: 29
  }), 'update-identity');
  t.pass();
});

(0, _ava2.default)('should return composite response on call', function (t) {
  var _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder();

  var action = new _updateIdentity2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.call({
    first: 'foo',
    last: 'bar',
    username: 'ro31337'
  });
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/update-identity-test.js',
    line: 40
  }), 'composite');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'user-state\')',
    filepath: 'test/menu/update-identity-test.js',
    line: 41
  }), 'user-state');
  t.deepEqual(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[0], 'arguments/0/object/object').state, 'arguments/0/object').identity, 'arguments/0'), {
    content: 't.deepEqual(response.responses[0].state.identity, { first: \'foo\', last: \'bar\', username: \'ro31337\' })',
    filepath: 'test/menu/update-identity-test.js',
    line: 42
  }), _rec5._expr(_rec5._capt({
    first: 'foo',
    last: 'bar',
    username: 'ro31337'
  }, 'arguments/1'), {
    content: 't.deepEqual(response.responses[0].state.identity, { first: \'foo\', last: \'bar\', username: \'ro31337\' })',
    filepath: 'test/menu/update-identity-test.js',
    line: 42
  }));
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'empty\')',
    filepath: 'test/menu/update-identity-test.js',
    line: 47
  }), 'empty'); // this one is mandatory and required to break the loop
});
//# sourceMappingURL=../../node_modules/.cache/ava/f564b7813c9bd495c16ea4a68cf24c2f.js.map