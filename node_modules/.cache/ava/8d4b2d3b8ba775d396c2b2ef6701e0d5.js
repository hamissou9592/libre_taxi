'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _index = require('../../../src/actions/menu/driver/index');

var _index2 = _interopRequireDefault(_index);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var user = { state: { muted: 'foo' } };

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _index2.default({ i18n: _specSupport.i18n, user: user });
  t.pass();
});

(0, _ava2.default)('should return options response on get', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder(),
      _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder(),
      _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder(),
      _rec19 = new _powerAssertRecorder(),
      _rec20 = new _powerAssertRecorder(),
      _rec21 = new _powerAssertRecorder(),
      _rec22 = new _powerAssertRecorder(),
      _rec23 = new _powerAssertRecorder(),
      _rec24 = new _powerAssertRecorder();

  var action = new _index2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.get();
  t.is(_rec._expr(_rec._capt(_rec._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'if\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 35
  }), 'if');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(response, 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.condition.type, \'equals\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 36
  }), 'equals');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(response, 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.condition.actual, \'foo\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 37
  }), 'foo');
  t.is(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(response, 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.condition.expected, true)',
    filepath: 'test/menu/driver/index-test.js',
    line: 38
  }), true);

  var okResponse = response.ok;
  var errResponse = response.err;

  t.is(_rec5._expr(_rec5._capt(_rec5._capt(okResponse, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(okResponse.type, \'options\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 43
  }), 'options');
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(okResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(okResponse.rows[0][0].value, \'checkin\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 44
  }), 'checkin');
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(okResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(okResponse.rows[1][0].value, \'unmute\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 45
  }), 'unmute');
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(okResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(okResponse.rows[2][0].value, \'settings\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 46
  }), 'settings');
  t.is(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(_rec9._capt(_rec9._capt(okResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(okResponse.rows[0][0].label, i18n.__(\'driver-index.checkin\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 47
  }), _rec10._expr(_rec10._capt(_rec10._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.checkin'), 'arguments/1'), {
    content: 't.is(okResponse.rows[0][0].label, i18n.__(\'driver-index.checkin\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 47
  }));
  t.is(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(_rec11._capt(_rec11._capt(okResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(okResponse.rows[1][0].label, i18n.__(\'driver-index.unmute\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 48
  }), _rec12._expr(_rec12._capt(_rec12._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.unmute'), 'arguments/1'), {
    content: 't.is(okResponse.rows[1][0].label, i18n.__(\'driver-index.unmute\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 48
  }));
  t.is(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(okResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(okResponse.rows[2][0].label, i18n.__(\'driver-index.settings\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 49
  }), _rec14._expr(_rec14._capt(_rec14._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.settings'), 'arguments/1'), {
    content: 't.is(okResponse.rows[2][0].label, i18n.__(\'driver-index.settings\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 49
  }));

  t.is(_rec15._expr(_rec15._capt(_rec15._capt(errResponse, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(errResponse.type, \'options\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 51
  }), 'options');
  t.is(_rec16._expr(_rec16._capt(_rec16._capt(_rec16._capt(_rec16._capt(_rec16._capt(errResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(errResponse.rows[0][0].value, \'checkin\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 52
  }), 'checkin');
  t.is(_rec17._expr(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(_rec17._capt(errResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(errResponse.rows[1][0].value, \'mute\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 53
  }), 'mute');
  t.is(_rec18._expr(_rec18._capt(_rec18._capt(_rec18._capt(_rec18._capt(_rec18._capt(errResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(errResponse.rows[2][0].value, \'settings\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 54
  }), 'settings');
  t.is(_rec19._expr(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(errResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(errResponse.rows[0][0].label, i18n.__(\'driver-index.checkin\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 55
  }), _rec20._expr(_rec20._capt(_rec20._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.checkin'), 'arguments/1'), {
    content: 't.is(errResponse.rows[0][0].label, i18n.__(\'driver-index.checkin\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 55
  }));
  t.is(_rec21._expr(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(errResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(errResponse.rows[1][0].label, i18n.__(\'driver-index.mute\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 56
  }), _rec22._expr(_rec22._capt(_rec22._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.mute'), 'arguments/1'), {
    content: 't.is(errResponse.rows[1][0].label, i18n.__(\'driver-index.mute\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 56
  }));
  t.is(_rec23._expr(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(errResponse, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').label, 'arguments/0'), {
    content: 't.is(errResponse.rows[2][0].label, i18n.__(\'driver-index.settings\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 57
  }), _rec24._expr(_rec24._capt(_rec24._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.settings'), 'arguments/1'), {
    content: 't.is(errResponse.rows[2][0].label, i18n.__(\'driver-index.settings\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 57
  }));
});

(0, _ava2.default)('should return composite response on post', function (t) {
  var _rec25 = new _powerAssertRecorder(),
      _rec26 = new _powerAssertRecorder(),
      _rec27 = new _powerAssertRecorder(),
      _rec28 = new _powerAssertRecorder(),
      _rec29 = new _powerAssertRecorder(),
      _rec30 = new _powerAssertRecorder(),
      _rec31 = new _powerAssertRecorder(),
      _rec32 = new _powerAssertRecorder(),
      _rec33 = new _powerAssertRecorder(),
      _rec34 = new _powerAssertRecorder(),
      _rec35 = new _powerAssertRecorder(),
      _rec36 = new _powerAssertRecorder(),
      _rec37 = new _powerAssertRecorder(),
      _rec38 = new _powerAssertRecorder(),
      _rec39 = new _powerAssertRecorder(),
      _rec40 = new _powerAssertRecorder(),
      _rec41 = new _powerAssertRecorder(),
      _rec42 = new _powerAssertRecorder(),
      _rec43 = new _powerAssertRecorder(),
      _rec44 = new _powerAssertRecorder(),
      _rec45 = new _powerAssertRecorder(),
      _rec46 = new _powerAssertRecorder(),
      _rec47 = new _powerAssertRecorder(),
      _rec48 = new _powerAssertRecorder(),
      _rec49 = new _powerAssertRecorder(),
      _rec50 = new _powerAssertRecorder(),
      _rec51 = new _powerAssertRecorder(),
      _rec52 = new _powerAssertRecorder(),
      _rec53 = new _powerAssertRecorder(),
      _rec54 = new _powerAssertRecorder(),
      _rec55 = new _powerAssertRecorder(),
      _rec56 = new _powerAssertRecorder(),
      _rec57 = new _powerAssertRecorder(),
      _rec58 = new _powerAssertRecorder(),
      _rec59 = new _powerAssertRecorder(),
      _rec60 = new _powerAssertRecorder(),
      _rec61 = new _powerAssertRecorder(),
      _rec62 = new _powerAssertRecorder(),
      _rec63 = new _powerAssertRecorder(),
      _rec64 = new _powerAssertRecorder();

  var action = new _index2.default({ i18n: _specSupport.i18n, user: user });

  var response = action.post('bar');
  t.is(_rec25._expr(_rec25._capt(_rec25._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 64
  }), 'composite');
  t.is(_rec26._expr(_rec26._capt(_rec26._capt(_rec26._capt(_rec26._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'text\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 65
  }), 'text');
  t.is(_rec27._expr(_rec27._capt(_rec27._capt(_rec27._capt(_rec27._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[0].message, \'\uD83D\uDC4C OK!\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 66
  }), '👌 OK!');

  t.is(_rec28._expr(_rec28._capt(_rec28._capt(_rec28._capt(_rec28._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'if\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 68
  }), 'if');
  t.is(_rec29._expr(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].condition.type, \'equals\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 69
  }), 'equals');
  t.is(_rec30._expr(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.responses[1].condition.actual, \'bar\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 70
  }), 'bar');
  t.is(_rec31._expr(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.responses[1].condition.expected, \'checkin\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 71
  }), 'checkin');
  t.is(_rec32._expr(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.type, \'redirect\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 72
  }), 'redirect');
  t.is(_rec33._expr(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[1], 'arguments/0/object/object').ok, 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[1].ok.path, \'driver-checkin\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 73
  }), 'driver-checkin');
  t.falsy(_rec34._expr(_rec34._capt(_rec34._capt(_rec34._capt(_rec34._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[1].err)',
    filepath: 'test/menu/driver/index-test.js',
    line: 74
  }));

  t.is(_rec35._expr(_rec35._capt(_rec35._capt(_rec35._capt(_rec35._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[2].type, \'if\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 76
  }), 'if');
  t.is(_rec36._expr(_rec36._capt(_rec36._capt(_rec36._capt(_rec36._capt(_rec36._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[2].condition.type, \'equals\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 77
  }), 'equals');
  t.is(_rec37._expr(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.responses[2].condition.actual, \'bar\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 78
  }), 'bar');
  t.is(_rec38._expr(_rec38._capt(_rec38._capt(_rec38._capt(_rec38._capt(_rec38._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.responses[2].condition.expected, \'mute\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 79
  }), 'mute');
  t.is(_rec39._expr(_rec39._capt(_rec39._capt(_rec39._capt(_rec39._capt(_rec39._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[2].ok.type, \'redirect\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 80
  }), 'redirect');
  t.is(_rec40._expr(_rec40._capt(_rec40._capt(_rec40._capt(_rec40._capt(_rec40._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[2], 'arguments/0/object/object').ok, 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[2].ok.path, \'driver-mute\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 81
  }), 'driver-mute');
  t.falsy(_rec41._expr(_rec41._capt(_rec41._capt(_rec41._capt(_rec41._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[2], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[2].err)',
    filepath: 'test/menu/driver/index-test.js',
    line: 82
  }));

  t.is(_rec42._expr(_rec42._capt(_rec42._capt(_rec42._capt(_rec42._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[3], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[3].type, \'if\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 84
  }), 'if');
  t.is(_rec43._expr(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(_rec43._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[3], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[3].condition.type, \'equals\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 85
  }), 'equals');
  t.is(_rec44._expr(_rec44._capt(_rec44._capt(_rec44._capt(_rec44._capt(_rec44._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[3], 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.responses[3].condition.actual, \'bar\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 86
  }), 'bar');
  t.is(_rec45._expr(_rec45._capt(_rec45._capt(_rec45._capt(_rec45._capt(_rec45._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[3], 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.responses[3].condition.expected, \'unmute\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 87
  }), 'unmute');
  t.is(_rec46._expr(_rec46._capt(_rec46._capt(_rec46._capt(_rec46._capt(_rec46._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[3], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[3].ok.type, \'redirect\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 88
  }), 'redirect');
  t.is(_rec47._expr(_rec47._capt(_rec47._capt(_rec47._capt(_rec47._capt(_rec47._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[3], 'arguments/0/object/object').ok, 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[3].ok.path, \'driver-unmute\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 89
  }), 'driver-unmute');
  t.falsy(_rec48._expr(_rec48._capt(_rec48._capt(_rec48._capt(_rec48._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[3], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[3].err)',
    filepath: 'test/menu/driver/index-test.js',
    line: 90
  }));

  t.is(_rec49._expr(_rec49._capt(_rec49._capt(_rec49._capt(_rec49._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[4], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[4].type, \'if\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 92
  }), 'if');
  t.is(_rec50._expr(_rec50._capt(_rec50._capt(_rec50._capt(_rec50._capt(_rec50._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[4], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[4].condition.type, \'equals\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 93
  }), 'equals');
  t.is(_rec51._expr(_rec51._capt(_rec51._capt(_rec51._capt(_rec51._capt(_rec51._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[4], 'arguments/0/object/object').condition, 'arguments/0/object').actual, 'arguments/0'), {
    content: 't.is(response.responses[4].condition.actual, \'bar\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 94
  }), 'bar');
  t.is(_rec52._expr(_rec52._capt(_rec52._capt(_rec52._capt(_rec52._capt(_rec52._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[4], 'arguments/0/object/object').condition, 'arguments/0/object').expected, 'arguments/0'), {
    content: 't.is(response.responses[4].condition.expected, \'settings\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 95
  }), 'settings');
  t.is(_rec53._expr(_rec53._capt(_rec53._capt(_rec53._capt(_rec53._capt(_rec53._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[4], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[4].ok.type, \'redirect\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 96
  }), 'redirect');
  t.is(_rec54._expr(_rec54._capt(_rec54._capt(_rec54._capt(_rec54._capt(_rec54._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[4], 'arguments/0/object/object').ok, 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[4].ok.path, \'settings\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 97
  }), 'settings');
  t.falsy(_rec55._expr(_rec55._capt(_rec55._capt(_rec55._capt(_rec55._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[4], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[4].err)',
    filepath: 'test/menu/driver/index-test.js',
    line: 98
  }));

  t.is(_rec56._expr(_rec56._capt(_rec56._capt(_rec56._capt(_rec56._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[5], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[5].type, \'if\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 100
  }), 'if');
  t.is(_rec57._expr(_rec57._capt(_rec57._capt(_rec57._capt(_rec57._capt(_rec57._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[5], 'arguments/0/object/object').condition, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[5].condition.type, \'not-in\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 101
  }), 'not-in');
  t.is(_rec58._expr(_rec58._capt(_rec58._capt(_rec58._capt(_rec58._capt(_rec58._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[5], 'arguments/0/object/object').condition, 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[5].condition.value, \'bar\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 102
  }), 'bar');
  t.deepEqual(_rec59._expr(_rec59._capt(_rec59._capt(_rec59._capt(_rec59._capt(_rec59._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[5], 'arguments/0/object/object').condition, 'arguments/0/object').arr, 'arguments/0'), {
    content: 't.deepEqual(response.responses[5].condition.arr, [\'checkin\', \'mute\', \'unmute\', \'settings\'])',
    filepath: 'test/menu/driver/index-test.js',
    line: 103
  }), _rec60._expr(_rec60._capt(['checkin', 'mute', 'unmute', 'settings'], 'arguments/1'), {
    content: 't.deepEqual(response.responses[5].condition.arr, [\'checkin\', \'mute\', \'unmute\', \'settings\'])',
    filepath: 'test/menu/driver/index-test.js',
    line: 103
  }));
  t.is(_rec61._expr(_rec61._capt(_rec61._capt(_rec61._capt(_rec61._capt(_rec61._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[5], 'arguments/0/object/object').ok, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[5].ok.type, \'error\')',
    filepath: 'test/menu/driver/index-test.js',
    line: 104
  }), 'error');
  t.is(_rec62._expr(_rec62._capt(_rec62._capt(_rec62._capt(_rec62._capt(_rec62._capt(response, 'arguments/0/object/object/object/object').responses, 'arguments/0/object/object/object')[5], 'arguments/0/object/object').ok, 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[5].ok.message, i18n.__(\'driver-index.unknown_choice\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 105
  }), _rec63._expr(_rec63._capt(_rec63._capt(_specSupport.i18n, 'arguments/1/callee/object').__('driver-index.unknown_choice'), 'arguments/1'), {
    content: 't.is(response.responses[5].ok.message, i18n.__(\'driver-index.unknown_choice\'))',
    filepath: 'test/menu/driver/index-test.js',
    line: 105
  }));
  t.falsy(_rec64._expr(_rec64._capt(_rec64._capt(_rec64._capt(_rec64._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[5], 'arguments/0/object').err, 'arguments/0'), {
    content: 't.falsy(response.responses[5].err)',
    filepath: 'test/menu/driver/index-test.js',
    line: 106
  }));
});
//# sourceMappingURL=../../../node_modules/.cache/ava/8d4b2d3b8ba775d396c2b2ef6701e0d5.js.map