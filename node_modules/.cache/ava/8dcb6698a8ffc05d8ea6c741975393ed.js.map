{"version":3,"sources":["load-user-test.js"],"names":["myUserFactory","fromUserKey","sinon","stub","returns","load","u","t","is","truthy","calledWith"],"mappings":";;;;;;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AACA;;;;AACA;;;;AAEA,mBAAK,sCAAL,EAA6C,aAAK;AAAA;AAAA;AAAA;;AAChD;AACA;AACA,MAAMA,gBAAgB,EAAtB;AACA,MAAMC,cAAc,gBAAGC,KAAH,CAASC,IAAT,GAAgBC,OAAhB,CAAwBJ,aAAxB,CAApB;AACA,MAAMK,OAAO,gBAAGH,KAAH,CAASC,IAAT,GAAgBC,OAAhB,CAAwB,KAAxB,CAAb;AACA,wBAAcJ,aAAd,EAA6B,EAAEC,wBAAF,EAAeI,UAAf,EAA7B;AACA,wBAAYJ,WAAZ,GAA0BA,WAA1B;;AAEA;AACA,MAAMK,IAAI,2BAAS,OAAT,CAAV;;AAEA;AACAC,IAAEC,EAAF,uBAAKF,CAAL;AAAA;AAAA;AAAA;AAAA,MAAQ,KAAR;AACAC,IAAEE,MAAF,yBAAS,sDAAYC,UAAZ,CAAuB,OAAvB,CAAT;AAAA;AAAA;AAAA;AAAA;AACAH,IAAEE,MAAF,yBAAS,+CAAKC,UAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AACD,CAhBD;;AAkBA","file":"load-user-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport test from 'ava';\nimport UserFactory, { loadUser } from '../../src/factories/user-factory';\nimport { ss } from '../spec-support';\n\ntest('should call user factory on loadUser', t => {\n  // arrange\n  // stub UserFactory and return pre-defined user object\n  const myUserFactory = {};\n  const fromUserKey = ss.sinon.stub().returns(myUserFactory);\n  const load = ss.sinon.stub().returns(31337);\n  Object.assign(myUserFactory, { fromUserKey, load });\n  UserFactory.fromUserKey = fromUserKey;\n\n  // act\n  const u = loadUser('cli_1');\n\n  // assert\n  t.is(u, 31337);\n  t.truthy(fromUserKey.calledWith('cli_1'));\n  t.truthy(load.calledWith());\n});\n\n// do not move `mockLoadUser` test here, because tests run in parallel.\n"]}