{"version":3,"sources":["if-response-handler-test.js"],"names":["Equals","actual","expected","h","response","user","t","is","type","pass","cb","result","platformType","ok","message","err","condition","tmp","console","log","arg","call","end","falsy"],"mappings":"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","file":"if-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-console */\nimport test from 'ava';\nimport IfResponseHandler from '../../src/response-handlers/if-response-handler';\nimport IfResponse from '../../src/responses/if-response';\nimport TextResponse from '../../src/responses/text-response';\n\n// sample condition\n\nclass Equals {\n  constructor(actual, expected) {\n    this.actual = actual;\n    this.expected = expected;\n  }\n\n  call() {\n    return this.actual === this.expected;\n  }\n}\n\ntest('can be constructed with default parameters', t => {\n  const h = new IfResponseHandler({ response: {}, user: {} });\n  t.is(h.type, 'if-response-handler');\n  t.pass();\n});\n\n\ntest.cb('should call ok response when condition truthy', t => {\n  let result = '';\n  const user = { platformType: 'cli' };\n  const ok = new TextResponse({ message: 'okay' });\n  const err = new TextResponse({ message: 'error' });\n  const condition = new Equals(2 + 2, 4);\n  const tmp = console.log;\n  console.log = (arg) => {\n    result += arg;\n  };\n\n  const response = new IfResponse({ condition, ok, err });\n\n  const h = new IfResponseHandler({ response, user });\n  h.call(() => {\n    t.is(result, 'okay');\n    console.log = tmp;\n    t.end();\n  });\n});\n\ntest.cb('should call err response when condition falsy', t => {\n  let result = '';\n  const user = { platformType: 'cli' };\n  const ok = new TextResponse({ message: 'okay' });\n  const err = new TextResponse({ message: 'error' });\n  const condition = new Equals(2 + 2, 5);\n  const tmp = console.log;\n  console.log = (arg) => {\n    result += arg;\n  };\n\n  const response = new IfResponse({ condition, ok, err });\n\n  const h = new IfResponseHandler({ response, user });\n  h.call(() => {\n    t.is(result, 'error');\n    console.log = tmp;\n    t.end();\n  });\n});\n\ntest.cb('should not call anything when err isn\\'t defined and condition falsy', t => {\n  let result = '';\n  const user = { platformType: 'cli' };\n  const ok = new TextResponse({ message: 'okay' });\n  const condition = new Equals(2 + 2, 5);\n  const tmp = console.log;\n  console.log = (arg) => {\n    result += arg;\n  };\n\n  const response = new IfResponse({ condition, ok });\n\n  const h = new IfResponseHandler({ response, user });\n  h.call(() => {\n    t.falsy(result);\n    console.log = tmp;\n    t.end();\n  });\n});\n"]}