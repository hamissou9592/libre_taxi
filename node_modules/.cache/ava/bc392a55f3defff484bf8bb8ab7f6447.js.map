{"version":3,"sources":["index-test.js"],"names":["user","i18n","t","pass","action","response","get","is","type","responses","message","__","rows","value","label","reactions","reaction","post","state","requestedVehicleType","path"],"mappings":"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","file":"index-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-unused-vars */\nimport test from 'ava';\nimport routes from '../../../src/routes'; // to aviod circular dependencies\nimport PassengerIndex from '../../../src/actions/menu/passenger/index';\nimport { i18n } from '../../spec-support';\n\nconst user = {};\n\ntest('can be constructed with default parameters', t => {\n  new PassengerIndex({ i18n, user });\n  t.pass();\n});\n\ntest('should return composite response on get', t => {\n  const action = new PassengerIndex({ i18n, user });\n  const response = action.get();\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'text');\n  t.is(response.responses[0].message, i18n.__('passenger-index.choose_taxi_type'));\n  t.is(response.responses[1].type, 'options');\n  t.is(response.responses[1].rows[0][0].value, 'car');\n  t.is(response.responses[1].rows[1][0].value, 'motorbike');\n  t.is(response.responses[1].rows[2][0].value, 'settings');\n  t.is(response.responses[1].rows[0][0].label, i18n.__('passenger-index.car'));\n  t.is(response.responses[1].rows[1][0].label, i18n.__('passenger-index.motorbike'));\n  t.is(response.responses[1].rows[2][0].label, i18n.__('passenger-index.s'));\n});\n\ntest('should return composite response on post for bike and car', t => {\n  const reactions = ['motorbike', 'car'];\n  const action = new PassengerIndex({ i18n, user });\n\n  for (const reaction of reactions) {\n    const response = action.post(reaction);\n    t.is(response.type, 'composite');\n    t.is(response.responses[0].type, 'text');\n    t.is(response.responses[0].message, 'ðŸ‘Œ OK!');\n    t.is(response.responses[1].type, 'user-state');\n    t.is(response.responses[1].state.requestedVehicleType, reaction);\n    t.is(response.responses[2].type, 'redirect');\n    t.is(response.responses[2].path, 'passenger-verify-cash');\n  }\n});\n\ntest('should return different composite response on post for settings', t => {\n  const action = new PassengerIndex({ i18n, user });\n  const response = action.post('settings');\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'redirect');\n  t.is(response.responses[0].path, 'settings');\n});\n\ntest('should return error on post for unknown reaction', t => {\n  const action = new PassengerIndex({ i18n, user });\n  const response = action.post('whatever');\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'error');\n  t.is(response.responses[0].message, i18n.__('passenger-index.error_only_known_type'));\n});\n"]}