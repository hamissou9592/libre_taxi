{"version":3,"sources":["options-map-test.js"],"names":["args","response","t","pass","rows","label","value","om","map","parse","is","keys","length","one","two","three","response1","response2","message","response3","cr1","add","cr2","four","condition","ok","err"],"mappings":"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","file":"options-map-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport OptionsMap from '../../src/support/options-map';\nimport OptionsResponse from '../../src/responses/options-response';\nimport CompositeResponse from '../../src/responses/composite-response';\nimport TextResponse from '../../src/responses/text-response';\nimport If from '../../src/responses/if-response';\nimport checkNotNullTest from '../helpers/check-not-null';\n\ncheckNotNullTest('response', (args) => { new OptionsMap(args); });\n\ntest('can be constructed with default parameters', t => {\n  new OptionsMap({ response: {} });\n  t.pass();\n});\n\ntest('should parse simple options response', t => {\n  const response = new OptionsResponse({ rows:\n  [\n    [\n      { label: 'one', value: '1' },\n      { label: 'two', value: '2' },\n      { label: 'three', value: '3' },\n    ],\n  ] });\n  const om = new OptionsMap({ response });\n  const map = om.parse();\n  t.is(Object.keys(map).length, 3);\n  t.is(map.one, '1');\n  t.is(map.two, '2');\n  t.is(map.three, '3');\n});\n\ntest('should parse options response with multiple rows and columns', t => {\n  const response = new OptionsResponse({ rows:\n  [\n    [\n      { label: 'one', value: '1' },\n    ],\n    [\n      { label: 'two', value: '2' },\n      { label: 'three', value: '3' },\n    ],\n  ] });\n  const om = new OptionsMap({ response });\n  const map = om.parse();\n  t.is(Object.keys(map).length, 3);\n  t.is(map.one, '1');\n  t.is(map.two, '2');\n  t.is(map.three, '3');\n});\n\ntest('should parse nested composite response with mixed responses', t => {\n  const response1 = new OptionsResponse({ rows:\n  [\n    [\n      { label: 'one', value: '1' },\n      { label: 'two', value: '2' },\n    ],\n  ] });\n  const response2 = new TextResponse({ message: 'foo' });\n  const response3 = new OptionsResponse({ rows:\n  [\n    [\n      { label: 'three', value: '3' },\n      { label: 'four', value: '4' },\n    ],\n  ] });\n\n  const cr1 = new CompositeResponse()\n    .add(response1)\n    .add(response2);\n  const cr2 = new CompositeResponse()\n    .add(response3);\n  const response = new CompositeResponse()\n    .add(cr1)\n    .add(cr2);\n\n  const om = new OptionsMap({ response });\n  const map = om.parse();\n  t.is(Object.keys(map).length, 4);\n  t.is(map.one, '1');\n  t.is(map.two, '2');\n  t.is(map.three, '3');\n  t.is(map.four, '4');\n});\n\ntest('should support if response', t => {\n  const response1 = new OptionsResponse({ rows:\n  [\n    [\n      { label: 'one', value: '1' },\n      { label: 'two', value: '2' },\n    ],\n  ] });\n  const response2 = new OptionsResponse({ rows:\n  [\n    [\n      { label: 'three', value: '3' },\n      { label: 'four', value: '4' },\n    ],\n  ] });\n  const response = new If({\n    condition: {},\n    ok: response1,\n    err: response2,\n  });\n\n  const om = new OptionsMap({ response });\n  const map = om.parse();\n  t.is(Object.keys(map).length, 4);\n  t.is(map.one, '1');\n  t.is(map.two, '2');\n  t.is(map.three, '3');\n  t.is(map.four, '4');\n});\n"]}