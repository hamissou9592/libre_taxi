'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-unused-vars */
// to aviod circular dependencies


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _routes = require('../../../src/routes');

var _routes2 = _interopRequireDefault(_routes);

var _orderSubmitted = require('../../../src/actions/menu/passenger/order-submitted');

var _orderSubmitted2 = _interopRequireDefault(_orderSubmitted);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var user = {};

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _orderSubmitted2.default({ i18n: _specSupport.i18n, user: user });
  t.pass();
});

(0, _ava2.default)('should return composite response on get', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder();

  var action = new _orderSubmitted2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.get();
  t.is(_rec._expr(_rec._capt(_rec._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 35
  }), 'composite');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'text\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 36
  }), 'text');
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.responses[0].message, i18n.__(\'order-submitted.order_submitted\'))',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 37
  }), _rec4._expr(_rec4._capt(_rec4._capt(_specSupport.i18n, 'arguments/1/callee/object').__('order-submitted.order_submitted'), 'arguments/1'), {
    content: 't.is(response.responses[0].message, i18n.__(\'order-submitted.order_submitted\'))',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 37
  }));
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_rec5._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'options\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 38
  }), 'options');
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(response, 'arguments/0/object/object/object/object/object/object').responses, 'arguments/0/object/object/object/object/object')[1], 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(response.responses[1].rows[0][0].value, \'cancel\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 39
  }), 'cancel');
});

(0, _ava2.default)('should return composite response on post', function (t) {
  var _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder(),
      _rec10 = new _powerAssertRecorder();

  var action = new _orderSubmitted2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.post('cancel');
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'composite\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 45
  }), 'composite');
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[0], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[0].type, \'cancel-current-order\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 46
  }), 'cancel-current-order');
  t.is(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(_rec9._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.responses[1].type, \'redirect\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 47
  }), 'redirect');
  t.is(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(_rec10._capt(response, 'arguments/0/object/object/object').responses, 'arguments/0/object/object')[1], 'arguments/0/object').path, 'arguments/0'), {
    content: 't.is(response.responses[1].path, \'blank-screen\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 48
  }), 'blank-screen');
});

(0, _ava2.default)('should return error response on posting unexpected input', function (t) {
  var _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder();

  var action = new _orderSubmitted2.default({ i18n: _specSupport.i18n, user: user });
  var response = action.post('whatever');
  t.is(_rec11._expr(_rec11._capt(_rec11._capt(response, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(response.type, \'error\')',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 54
  }), 'error');
  t.is(_rec12._expr(_rec12._capt(_rec12._capt(response, 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(response.message, i18n.__(\'order-submitted.error_incorrect_input\'))',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 55
  }), _rec13._expr(_rec13._capt(_rec13._capt(_specSupport.i18n, 'arguments/1/callee/object').__('order-submitted.error_incorrect_input'), 'arguments/1'), {
    content: 't.is(response.message, i18n.__(\'order-submitted.error_incorrect_input\'))',
    filepath: 'test/menu/passenger/order-submitted-test.js',
    line: 55
  }));
});
//# sourceMappingURL=../../../node_modules/.cache/ava/b13df624597600dcba993e8b2d43b19a.js.map