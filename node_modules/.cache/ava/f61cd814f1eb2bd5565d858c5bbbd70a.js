'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new */
// eslint-disable-line max-len


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _userStateResponseHandler = require('../../src/response-handlers/user-state-response-handler');

var _userStateResponseHandler2 = _interopRequireDefault(_userStateResponseHandler);

var _userStateResponse = require('../../src/responses/user-state-response');

var _userStateResponse2 = _interopRequireDefault(_userStateResponse);

var _checkNotNull = require('../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _user = require('../../src/user');

var _user2 = _interopRequireDefault(_user);

var _firebaseServer = require('firebase-server');

var _firebaseServer2 = _interopRequireDefault(_firebaseServer);

var _firebaseDb = require('../../src/firebase-db');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _firebaseDb.overrideSettings)({
  STATEFUL_CONNSTR: 'ws://localhost.firebaseio.test:5502',
  STATEFUL_CREDENTIALS_FILE: undefined
});

var server = null;

_ava2.default.before(function () {
  server = new _firebaseServer2.default(5502, 'localhost.firebaseio.test', {
    users: {
      cli_1: { foo: 1, bar: 2 }
    }
  });
});

_ava2.default.after.always('guaranteed cleanup', function () {
  server.close();
});

(0, _checkNotNull2.default)(['response', 'user'], function (args) {
  new _userStateResponseHandler2.default(args);
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _userStateResponseHandler2.default({ response: {}, user: {} });
  t.pass();
});

_ava2.default.cb('updates user object', function (t) {
  t.plan(4);

  new _user2.default({ platformType: 'cli', platformId: 1 }).load().then(function (user) {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    t.is(_rec._expr(_rec._capt(_rec._capt(_rec._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').foo, 'arguments/0'), {
      content: 't.is(user.state.foo, 1)',
      filepath: 'test/response-handlers/user-state-response-handler-test.js',
      line: 58
    }), 1);
    t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').bar, 'arguments/0'), {
      content: 't.is(user.state.bar, 2)',
      filepath: 'test/response-handlers/user-state-response-handler-test.js',
      line: 59
    }), 2);

    var response = new _userStateResponse2.default({ foo: 123 });
    var handler = new _userStateResponseHandler2.default({ response: response, user: user });

    handler.call(function () {
      var _rec3 = new _powerAssertRecorder(),
          _rec4 = new _powerAssertRecorder();

      t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').foo, 'arguments/0'), {
        content: 't.is(user.state.foo, 123)',
        filepath: 'test/response-handlers/user-state-response-handler-test.js',
        line: 65
      }), 123);
      t.is(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').bar, 'arguments/0'), {
        content: 't.is(user.state.bar, 2)',
        filepath: 'test/response-handlers/user-state-response-handler-test.js',
        line: 66
      }), 2);
      t.end();
    });
  });
});
//# sourceMappingURL=../../node_modules/.cache/ava/f61cd814f1eb2bd5565d858c5bbbd70a.js.map