'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, max-len */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _pagedOptions = require('../../../src/responses/decorators/paged-options');

var _pagedOptions2 = _interopRequireDefault(_pagedOptions);

var _optionsResponse = require('../../../src/responses/options-response');

var _optionsResponse2 = _interopRequireDefault(_optionsResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// generate buttons, 1 button per row
var generateButtons = function generateButtons(n) {
  var rows = [];
  for (var m = 1; m <= n; m++) {
    rows.push([{ label: 'Label ' + m, value: m }]);
  }
  return rows;
};

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder();

  var r = new _pagedOptions2.default(1, new _optionsResponse2.default({
    rows: [[{ label: 'Ok', value: 'ok' }]]
  }));
  t.is(_rec._expr(_rec._capt(_rec._capt(r, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(r.type, \'options\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 39
  }), 'options');
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(r, 'arguments/0/object/object').origin, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(r.origin.type, \'options\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 40
  }), 'options');
});

(0, _ava2.default)('should have six buttons for the first page', function (t) {
  var _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder(),
      _rec6 = new _powerAssertRecorder(),
      _rec7 = new _powerAssertRecorder(),
      _rec8 = new _powerAssertRecorder(),
      _rec9 = new _powerAssertRecorder();

  var r = new _pagedOptions2.default(1, new _optionsResponse2.default({
    rows: generateButtons(6)
  }));
  t.is(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(r, 'arguments/0/object/object').rows, 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(r.rows.length, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 49
  }), 3);
  t.is(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[0][0].value, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 50
  }), 1);
  t.is(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_rec5._capt(_rec5._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[0][1].value, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 51
  }), 2);
  t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[1][0].value, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 52
  }), 3);
  t.is(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(_rec7._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[1][1].value, 4)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 53
  }), 4);
  t.is(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(_rec8._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[2][0].value, 5)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 54
  }), 5);
  t.is(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(_rec9._capt(_rec9._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[2][1].value, 6)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 55
  }), 6);
});

(0, _ava2.default)('should have two pages for 7 buttons', function (t) {
  var _rec10 = new _powerAssertRecorder(),
      _rec11 = new _powerAssertRecorder(),
      _rec12 = new _powerAssertRecorder(),
      _rec13 = new _powerAssertRecorder(),
      _rec14 = new _powerAssertRecorder(),
      _rec15 = new _powerAssertRecorder();

  var r = new _pagedOptions2.default(2, new _optionsResponse2.default({
    rows: generateButtons(7)
  }));
  t.is(_rec10._expr(_rec10._capt(_rec10._capt(r, 'arguments/0/object').totalPages, 'arguments/0'), {
    content: 't.is(r.totalPages, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 64
  }), 2);
  t.is(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(r, 'arguments/0/object/object').rows, 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(r.rows.length, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 65
  }), 2);
  t.is(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(_rec12._capt(_rec12._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[0][0].value, 6)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 66
  }), 6);
  t.is(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(_rec13._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[0][1].value, 7)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 67
  }), 7);
  t.is(_rec14._expr(_rec14._capt(_rec14._capt(_rec14._capt(_rec14._capt(_rec14._capt(r, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(r.rows[1][0].value, \'previous\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 68
  }), 'previous');
  t.falsy(_rec15._expr(_rec15._capt(_rec15._capt(_rec15._capt(_rec15._capt(r, 'arguments/0/object/object/object').rows, 'arguments/0/object/object')[1], 'arguments/0/object')[1], 'arguments/0'), {
    content: 't.falsy(r.rows[1][1])',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 69
  }));
});

(0, _ava2.default)('should have three pages for 12 buttons', function (t) {
  var _rec16 = new _powerAssertRecorder(),
      _rec17 = new _powerAssertRecorder(),
      _rec18 = new _powerAssertRecorder(),
      _rec19 = new _powerAssertRecorder(),
      _rec20 = new _powerAssertRecorder(),
      _rec21 = new _powerAssertRecorder(),
      _rec22 = new _powerAssertRecorder(),
      _rec23 = new _powerAssertRecorder(),
      _rec24 = new _powerAssertRecorder(),
      _rec25 = new _powerAssertRecorder(),
      _rec26 = new _powerAssertRecorder(),
      _rec27 = new _powerAssertRecorder(),
      _rec28 = new _powerAssertRecorder(),
      _rec29 = new _powerAssertRecorder(),
      _rec30 = new _powerAssertRecorder(),
      _rec31 = new _powerAssertRecorder(),
      _rec32 = new _powerAssertRecorder(),
      _rec33 = new _powerAssertRecorder(),
      _rec34 = new _powerAssertRecorder(),
      _rec35 = new _powerAssertRecorder(),
      _rec36 = new _powerAssertRecorder(),
      _rec37 = new _powerAssertRecorder(),
      _rec38 = new _powerAssertRecorder(),
      _rec39 = new _powerAssertRecorder(),
      _rec40 = new _powerAssertRecorder();

  var rsOptions = new _optionsResponse2.default({
    rows: generateButtons(12)
  });
  var page1 = new _pagedOptions2.default(1, rsOptions);
  t.is(_rec16._expr(_rec16._capt(_rec16._capt(page1, 'arguments/0/object').totalPages, 'arguments/0'), {
    content: 't.is(page1.totalPages, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 77
  }), 3);
  t.is(_rec17._expr(_rec17._capt(_rec17._capt(page1, 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(page1.currentPage, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 78
  }), 1);
  t.is(_rec18._expr(_rec18._capt(_rec18._capt(_rec18._capt(page1, 'arguments/0/object/object').rows, 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(page1.rows.length, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 79
  }), 3);
  t.is(_rec19._expr(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(_rec19._capt(page1, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page1.rows[0][0].value, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 80
  }), 1);
  t.is(_rec20._expr(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(_rec20._capt(page1, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page1.rows[0][1].value, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 81
  }), 2);
  t.is(_rec21._expr(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(_rec21._capt(page1, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page1.rows[1][0].value, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 82
  }), 3);
  t.is(_rec22._expr(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(_rec22._capt(page1, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page1.rows[1][1].value, 4)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 83
  }), 4);
  t.is(_rec23._expr(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(_rec23._capt(page1, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page1.rows[2][0].value, 5)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 84
  }), 5);
  t.is(_rec24._expr(_rec24._capt(_rec24._capt(_rec24._capt(_rec24._capt(_rec24._capt(page1, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page1.rows[2][1].value, \'next\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 85
  }), 'next');

  var page2 = new _pagedOptions2.default(2, rsOptions);
  t.is(_rec25._expr(_rec25._capt(_rec25._capt(page2, 'arguments/0/object').totalPages, 'arguments/0'), {
    content: 't.is(page2.totalPages, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 88
  }), 3);
  t.is(_rec26._expr(_rec26._capt(_rec26._capt(page2, 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(page2.currentPage, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 89
  }), 2);
  t.is(_rec27._expr(_rec27._capt(_rec27._capt(_rec27._capt(page2, 'arguments/0/object/object').rows, 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(page2.rows.length, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 90
  }), 3);
  t.is(_rec28._expr(_rec28._capt(_rec28._capt(_rec28._capt(_rec28._capt(_rec28._capt(page2, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page2.rows[0][0].value, 6)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 91
  }), 6);
  t.is(_rec29._expr(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(_rec29._capt(page2, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page2.rows[0][1].value, 7)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 92
  }), 7);
  t.is(_rec30._expr(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(_rec30._capt(page2, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page2.rows[1][0].value, 8)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 93
  }), 8);
  t.is(_rec31._expr(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(_rec31._capt(page2, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page2.rows[1][1].value, 9)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 94
  }), 9);
  t.is(_rec32._expr(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(_rec32._capt(page2, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page2.rows[2][0].value, \'previous\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 95
  }), 'previous');
  t.is(_rec33._expr(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(_rec33._capt(page2, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[2], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page2.rows[2][1].value, \'next\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 96
  }), 'next');

  var page3 = new _pagedOptions2.default(3, rsOptions);
  t.is(_rec34._expr(_rec34._capt(_rec34._capt(page3, 'arguments/0/object').totalPages, 'arguments/0'), {
    content: 't.is(page3.totalPages, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 99
  }), 3);
  t.is(_rec35._expr(_rec35._capt(_rec35._capt(page3, 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(page3.currentPage, 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 100
  }), 3);
  t.is(_rec36._expr(_rec36._capt(_rec36._capt(_rec36._capt(page3, 'arguments/0/object/object').rows, 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(page3.rows.length, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 101
  }), 2);
  t.is(_rec37._expr(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(_rec37._capt(page3, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page3.rows[0][0].value, 10)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 102
  }), 10);
  t.is(_rec38._expr(_rec38._capt(_rec38._capt(_rec38._capt(_rec38._capt(_rec38._capt(page3, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[0], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page3.rows[0][1].value, 11)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 103
  }), 11);
  t.is(_rec39._expr(_rec39._capt(_rec39._capt(_rec39._capt(_rec39._capt(_rec39._capt(page3, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[0], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page3.rows[1][0].value, \'previous\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 104
  }), 'previous');
  t.is(_rec40._expr(_rec40._capt(_rec40._capt(_rec40._capt(_rec40._capt(_rec40._capt(page3, 'arguments/0/object/object/object/object').rows, 'arguments/0/object/object/object')[1], 'arguments/0/object/object')[1], 'arguments/0/object').value, 'arguments/0'), {
    content: 't.is(page3.rows[1][1].value, 12)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 105
  }), 12);
});

(0, _ava2.default)('shoduld return correct number of pages', function (t) {
  var _rec41 = new _powerAssertRecorder(),
      _rec42 = new _powerAssertRecorder(),
      _rec43 = new _powerAssertRecorder(),
      _rec44 = new _powerAssertRecorder(),
      _rec45 = new _powerAssertRecorder(),
      _rec46 = new _powerAssertRecorder(),
      _rec47 = new _powerAssertRecorder(),
      _rec48 = new _powerAssertRecorder(),
      _rec49 = new _powerAssertRecorder(),
      _rec50 = new _powerAssertRecorder(),
      _rec51 = new _powerAssertRecorder(),
      _rec52 = new _powerAssertRecorder(),
      _rec53 = new _powerAssertRecorder(),
      _rec54 = new _powerAssertRecorder(),
      _rec55 = new _powerAssertRecorder();

  var x = function x(n) {
    var r = new _pagedOptions2.default(1, new _optionsResponse2.default({ rows: generateButtons(n) }));
    return r.totalPages;
  };
  t.is(_rec41._expr(_rec41._capt(x(1), 'arguments/0'), {
    content: 't.is(x(1), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 116
  }), 1);
  t.is(_rec42._expr(_rec42._capt(x(2), 'arguments/0'), {
    content: 't.is(x(2), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 117
  }), 1);
  t.is(_rec43._expr(_rec43._capt(x(3), 'arguments/0'), {
    content: 't.is(x(3), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 118
  }), 1);
  t.is(_rec44._expr(_rec44._capt(x(4), 'arguments/0'), {
    content: 't.is(x(4), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 119
  }), 1);
  t.is(_rec45._expr(_rec45._capt(x(5), 'arguments/0'), {
    content: 't.is(x(5), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 120
  }), 1);
  t.is(_rec46._expr(_rec46._capt(x(6), 'arguments/0'), {
    content: 't.is(x(6), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 121
  }), 1);
  t.is(_rec47._expr(_rec47._capt(x(7), 'arguments/0'), {
    content: 't.is(x(7), 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 122
  }), 2);
  t.is(_rec48._expr(_rec48._capt(x(8), 'arguments/0'), {
    content: 't.is(x(8), 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 123
  }), 2);
  t.is(_rec49._expr(_rec49._capt(x(9), 'arguments/0'), {
    content: 't.is(x(9), 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 124
  }), 2);
  t.is(_rec50._expr(_rec50._capt(x(10), 'arguments/0'), {
    content: 't.is(x(10), 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 125
  }), 2);
  t.is(_rec51._expr(_rec51._capt(x(11), 'arguments/0'), {
    content: 't.is(x(11), 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 126
  }), 3);
  t.is(_rec52._expr(_rec52._capt(x(12), 'arguments/0'), {
    content: 't.is(x(12), 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 127
  }), 3);
  t.is(_rec53._expr(_rec53._capt(x(13), 'arguments/0'), {
    content: 't.is(x(13), 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 128
  }), 3);
  t.is(_rec54._expr(_rec54._capt(x(14), 'arguments/0'), {
    content: 't.is(x(14), 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 129
  }), 3);
  t.is(_rec55._expr(_rec55._capt(x(15), 'arguments/0'), {
    content: 't.is(x(15), 4)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 130
  }), 4);
});

(0, _ava2.default)('should accept weird number of pages', function (t) {
  var _rec56 = new _powerAssertRecorder(),
      _rec57 = new _powerAssertRecorder(),
      _rec58 = new _powerAssertRecorder(),
      _rec59 = new _powerAssertRecorder(),
      _rec60 = new _powerAssertRecorder(),
      _rec61 = new _powerAssertRecorder(),
      _rec62 = new _powerAssertRecorder();

  var o = new _optionsResponse2.default({ rows: generateButtons(10) });
  t.is(_rec56._expr(_rec56._capt(_rec56._capt(new _pagedOptions2.default(_rec56._capt(undefined, 'arguments/0/object/arguments/0'), _rec56._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(undefined, o).currentPage, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 135
  }), 1);
  t.is(_rec57._expr(_rec57._capt(_rec57._capt(new _pagedOptions2.default(100, _rec57._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(100, o).currentPage, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 136
  }), 2);
  t.is(_rec58._expr(_rec58._capt(_rec58._capt(new _pagedOptions2.default(0, _rec58._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(0, o).currentPage, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 137
  }), 1);
  t.is(_rec59._expr(_rec59._capt(_rec59._capt(new _pagedOptions2.default(_rec59._capt(-1, 'arguments/0/object/arguments/0'), _rec59._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(-1, o).currentPage, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 138
  }), 1);
  t.is(_rec60._expr(_rec60._capt(_rec60._capt(new _pagedOptions2.default(1.123, _rec60._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(1.123, o).currentPage, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 139
  }), 2);
  t.is(_rec61._expr(_rec61._capt(_rec61._capt(new _pagedOptions2.default('0', _rec61._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(\'0\', o).currentPage, 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 140
  }), 1);
  t.is(_rec62._expr(_rec62._capt(_rec62._capt(new _pagedOptions2.default(' 2 ', _rec62._capt(o, 'arguments/0/object/arguments/1')), 'arguments/0/object').currentPage, 'arguments/0'), {
    content: 't.is(new PagedOptions(\' 2 \', o).currentPage, 2)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 141
  }), 2);
});

(0, _ava2.default)('when decorated should keep other origin props', function (t) {
  var _rec63 = new _powerAssertRecorder(),
      _rec64 = new _powerAssertRecorder();

  var o = new _optionsResponse2.default({
    rows: generateButtons(10),
    message: 'foo',
    defaultMessage: 'bar'
  });
  var r = new _pagedOptions2.default(1, o);
  t.is(_rec63._expr(_rec63._capt(_rec63._capt(r, 'arguments/0/object').message, 'arguments/0'), {
    content: 't.is(r.message, \'foo\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 151
  }), 'foo');
  t.is(_rec64._expr(_rec64._capt(_rec64._capt(r, 'arguments/0/object').defaultMessage, 'arguments/0'), {
    content: 't.is(r.defaultMessage, \'bar\')',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 152
  }), 'bar');
});

(0, _ava2.default)('should return next or previous page', function (t) {
  var _rec65 = new _powerAssertRecorder(),
      _rec66 = new _powerAssertRecorder();

  var r = new _pagedOptions2.default(2, new _optionsResponse2.default({ rows: generateButtons(20) }));
  t.is(_rec65._expr(_rec65._capt(_rec65._capt(r, 'arguments/0/callee/object').nextPageNumber('next'), 'arguments/0'), {
    content: 't.is(r.nextPageNumber(\'next\'), 3)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 160
  }), 3);
  t.is(_rec66._expr(_rec66._capt(_rec66._capt(r, 'arguments/0/callee/object').nextPageNumber('previous'), 'arguments/0'), {
    content: 't.is(r.nextPageNumber(\'previous\'), 1)',
    filepath: 'test/responses/decorators/paged-options-test.js',
    line: 161
  }), 1);
});
//# sourceMappingURL=../../../node_modules/.cache/ava/d394bf64c1e844cb37e935ba8c8ca97f.js.map