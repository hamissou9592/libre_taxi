{"version":3,"sources":["before-all.js"],"names":["cb","t","plan","lookup","err","result","is","end","key","Number","Math","random","toFixed","client","createClient","host","port","db","on","fail","set","get","value","del"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AACA;;;;AACA;;;;;;AAEA,cAAKA,EAAL,CAAQ,6DAAR,EAAuE,aAAK;AAC1EC,IAAEC,IAAF,CAAO,CAAP;AACA,gBAAIC,MAAJ,CAAW,2BAAX,EAAwC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACvD,QAAI,CAACD,GAAL,EAAU;AAAA;;AACRH,QAAEK,EAAF,uBAAKD,MAAL;AAAA;AAAA;AAAA;AAAA,UAAa,WAAb;AACD;AACDJ,MAAEM,GAAF;AACD,GALD;AAMD,CARD;;AAUA,cAAKP,EAAL,CAAQ,gCAAR,EAA0C,aAAK;AAC7C,MAAMQ,2BAAyBC,OAAQC,KAAKC,MAAL,KAAgB,MAAxB,EAAiCC,OAAjC,EAA/B,CAD6C,CACgC;AAC7E,MAAMC,SAAS,gBAAMC,YAAN,CAAmB,EAAEC,MAAM,WAAR,EAAqBC,MAAM,IAA3B,EAAiCC,IAAI,CAArC,EAAnB,CAAf;AACAhB,IAAEC,IAAF,CAAO,CAAP;AACAW,SAAOK,EAAP,CAAU,OAAV,EAAmB,UAACd,GAAD;AAAA,WAASH,EAAEkB,IAAF,CAAOf,GAAP,CAAT;AAAA,GAAnB;AACAS,SAAOO,GAAP,CAAWZ,GAAX,EAAgB,OAAhB,EAAyB,YAAM;AAC7BK,WAAOQ,GAAP,CAAWb,GAAX,EAAgB,UAACJ,GAAD,EAAMkB,KAAN,EAAgB;AAAA;;AAC9BrB,QAAEK,EAAF,yBAAKgB,KAAL;AAAA;AAAA;AAAA;AAAA,UAAY,OAAZ;AACAT,aAAOU,GAAP,CAAWf,GAAX,EAAgB,YAAM;AAAEP,UAAEM,GAAF;AAAU,OAAlC;AACD,KAHD;AAID,GALD;AAMD,CAXD","file":"before-all.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport test from 'ava';\nimport dns from 'dns';\nimport redis from 'redis';\n\ntest.cb('localhost.firebaseio.test should be specified in /etc/hosts', t => {\n  t.plan(1);\n  dns.lookup('localhost.firebaseio.test', (err, result) => {\n    if (!err) {\n      t.is(result, '127.0.0.1');\n    }\n    t.end();\n  });\n});\n\ntest.cb('redis should be up and running', t => {\n  const key = `before_all_test_${Number((Math.random() * 100000)).toFixed()}`; // make it random\n  const client = redis.createClient({ host: '127.0.0.1', port: 6379, db: 1 });\n  t.plan(1);\n  client.on('error', (err) => t.fail(err));\n  client.set(key, '31337', () => {\n    client.get(key, (err, value) => {\n      t.is(value, '31337');\n      client.del(key, () => { t.end(); });\n    });\n  });\n});\n"]}