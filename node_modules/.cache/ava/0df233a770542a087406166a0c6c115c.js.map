{"version":3,"sources":["check-not-null-test.js"],"names":["Foo1","options","with","Foo2","Foo3","Foo4","bar","buz","qux","t","pass","cb","err","plan","throws","end","notRequired","err1","err2","err3"],"mappings":"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","file":"check-not-null-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-useless-constructor */\nimport test from 'ava';\nimport checkNotNull from '../../src/validations/check-not-null.js';\nimport { mix } from 'mixwith';\n\n// one parameter\nclass Foo1 extends mix(class {}).with(checkNotNull('bar')) {\n  constructor(options) { super(options); }\n}\n\n// array of parameters\nclass Foo2 extends mix(class {}).with(checkNotNull(['bar', 'buz'])) {\n  constructor(options) { super(options); }\n}\n\n// combinations\nclass Foo3 extends mix(class {}).with(checkNotNull(['bar', 'buz']), checkNotNull('qux')) {\n  constructor(options) { super(options); }\n}\n\n// no parameters provided to `checkNotNull`\nclass Foo4 extends mix(class {}).with(checkNotNull()) {\n  constructor(options) { super(options); }\n}\n\ntest('should allow to construct objects when prop(s) are specified', t => {\n  new Foo1({ bar: 1 });\n  new Foo2({ bar: 1, buz: 2 });\n  new Foo3({ bar: 1, buz: 2, qux: 3 });\n  t.pass();\n});\n\ntest.cb('should throw exception when parameters not specified at all', t => {\n  const err = 'parameters not specified';\n  t.plan(3);\n\n  t.throws(() => { new Foo1(); }, err);\n  t.throws(() => { new Foo2(); }, err);\n  t.throws(() => { new Foo3(); }, err);\n\n  t.end();\n});\n\ntest.cb('should throw exception when required parameter(s) not specified', t => {\n  const err = '\\'bar\\' parameter not specified';\n  t.plan(3);\n\n  t.throws(() => { new Foo1({ notRequired: 1 }); }, err);\n  t.throws(() => { new Foo2({ notRequired: 1 }); }, err);\n  t.throws(() => { new Foo3({ notRequired: 1 }); }, err);\n\n  t.end();\n});\n\ntest.cb('should check array of parameters', t => {\n  const err1 = '\\'bar\\' parameter not specified';\n  const err2 = '\\'buz\\' parameter not specified';\n  t.plan(2);\n\n  t.throws(() => { new Foo2({ buz: 1 }); }, err1);\n  t.throws(() => { new Foo2({ bar: 1 }); }, err2);\n\n  t.end();\n});\n\ntest.cb('should check combinations', t => {\n  const err1 = '\\'bar\\' parameter not specified';\n  const err2 = '\\'buz\\' parameter not specified';\n  const err3 = '\\'qux\\' parameter not specified';\n  t.plan(3);\n\n  t.throws(() => { new Foo3({ buz: 2, qux: 3 }); }, err1);\n  t.throws(() => { new Foo3({ bar: 1, qux: 3 }); }, err2);\n  t.throws(() => { new Foo3({ bar: 1, buz: 2 }); }, err3);\n\n  t.end();\n});\n\ntest('should check if consturctor options present when no params provided for mixin', t => {\n  new Foo4('bar');\n  t.pass();\n});\n"]}