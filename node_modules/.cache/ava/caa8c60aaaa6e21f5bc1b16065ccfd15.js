'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _compositeResponseHandler = require('../../src/response-handlers/composite-response-handler');

var _compositeResponseHandler2 = _interopRequireDefault(_compositeResponseHandler);

var _compositeResponse = require('../../src/responses/composite-response');

var _compositeResponse2 = _interopRequireDefault(_compositeResponse);

var _textResponse = require('../../src/responses/text-response');

var _textResponse2 = _interopRequireDefault(_textResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  var _rec = new _powerAssertRecorder();

  var h = new _compositeResponseHandler2.default({ response: {}, user: {} });
  t.is(_rec._expr(_rec._capt(_rec._capt(h, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(h.type, \'composite-response-handler\')',
    filepath: 'test/response-handlers/composite-response-handler-test.js',
    line: 27
  }), 'composite-response-handler');
  t.pass();
});

(0, _ava2.default)('can be constructed with default parameters and api', function (t) {
  var _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder();

  var h = new _compositeResponseHandler2.default({ response: {}, user: {}, api: { foo: 'bar' } });
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(h, 'arguments/0/object').type, 'arguments/0'), {
    content: 't.is(h.type, \'composite-response-handler\')',
    filepath: 'test/response-handlers/composite-response-handler-test.js',
    line: 33
  }), 'composite-response-handler');
  t.deepEqual(_rec3._expr(_rec3._capt(_rec3._capt(h, 'arguments/0/object').api, 'arguments/0'), {
    content: 't.deepEqual(h.api, { foo: \'bar\' })',
    filepath: 'test/response-handlers/composite-response-handler-test.js',
    line: 34
  }), _rec4._expr(_rec4._capt({ foo: 'bar' }, 'arguments/1'), {
    content: 't.deepEqual(h.api, { foo: \'bar\' })',
    filepath: 'test/response-handlers/composite-response-handler-test.js',
    line: 34
  }));
});

_ava2.default.cb('executes all response handlers', function (t) {
  var result = '';
  var user = { platformType: 'cli' };
  var r1 = new _textResponse2.default({ message: 'one' });
  var r2 = new _textResponse2.default({ message: 'two' });
  var r3 = new _textResponse2.default({ message: 'three' });
  var tmp = console.log;
  console.log = function (arg) {
    result += arg;
  };

  var response = new _compositeResponse2.default().add(r1).add(r2).add(r3);

  var h = new _compositeResponseHandler2.default({ response: response, user: user });
  h.call(function () {
    var _rec5 = new _powerAssertRecorder();

    t.is(_rec5._expr(_rec5._capt(result, 'arguments/0'), {
      content: 't.is(result, \'onetwothree\')',
      filepath: 'test/response-handlers/composite-response-handler-test.js',
      line: 55
    }), 'onetwothree');
    console.log = tmp;
    t.end();
  });
});
//# sourceMappingURL=../../node_modules/.cache/ava/caa8c60aaaa6e21f5bc1b16065ccfd15.js.map