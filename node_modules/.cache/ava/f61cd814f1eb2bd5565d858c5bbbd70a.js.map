{"version":3,"sources":["user-state-response-handler-test.js"],"names":["STATEFUL_CONNSTR","STATEFUL_CREDENTIALS_FILE","undefined","server","before","users","cli_1","foo","bar","after","always","close","args","response","user","t","pass","cb","plan","platformType","platformId","load","then","is","state","handler","call","end"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;AAEgG;;;AADhG;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,kCAAiB;AACfA,oBAAkB,qCADH;AAEfC,6BAA2BC;AAFZ,CAAjB;;AAKA,IAAIC,SAAS,IAAb;;AAEA,cAAKC,MAAL,CAAY,YAAM;AAChBD,WAAS,6BAAmB,IAAnB,EAAyB,2BAAzB,EAAsD;AAC7DE,WAAO;AACLC,aAAO,EAAEC,KAAK,CAAP,EAAUC,KAAK,CAAf;AADF;AADsD,GAAtD,CAAT;AAKD,CAND;;AAQA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,oBAAlB,EAAwC,YAAM;AAC5CP,SAAOQ,KAAP;AACD,CAFD;;AAIA,4BAAiB,CAAC,UAAD,EAAa,MAAb,CAAjB,EAAuC,UAACC,IAAD,EAAU;AAAE,yCAA6BA,IAA7B;AAAqC,CAAxF;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AACtD,yCAA6B,EAAEC,UAAU,EAAZ,EAAgBC,MAAM,EAAtB,EAA7B;AACAC,IAAEC,IAAF;AACD,CAHD;;AAKA,cAAKC,EAAL,CAAQ,qBAAR,EAA+B,aAAK;AAClCF,IAAEG,IAAF,CAAO,CAAP;;AAEA,qBAAS,EAAEC,cAAc,KAAhB,EAAuBC,YAAY,CAAnC,EAAT,EAAiDC,IAAjD,GAAwDC,IAAxD,CAA6D,UAACR,IAAD,EAAU;AAAA;AAAA;;AACrEC,MAAEQ,EAAF,uBAAK,yDAAKC,KAAL,wBAAWjB,GAAhB;AAAA;AAAA;AAAA;AAAA,QAAqB,CAArB;AACAQ,MAAEQ,EAAF,yBAAK,2DAAKC,KAAL,wBAAWhB,GAAhB;AAAA;AAAA;AAAA;AAAA,QAAqB,CAArB;;AAEA,QAAMK,WAAW,gCAAsB,EAAEN,KAAK,GAAP,EAAtB,CAAjB;AACA,QAAMkB,UAAU,uCAA6B,EAAEZ,kBAAF,EAAYC,UAAZ,EAA7B,CAAhB;;AAEAW,YAAQC,IAAR,CAAa,YAAM;AAAA;AAAA;;AACjBX,QAAEQ,EAAF,yBAAK,2DAAKC,KAAL,wBAAWjB,GAAhB;AAAA;AAAA;AAAA;AAAA,UAAqB,GAArB;AACAQ,QAAEQ,EAAF,yBAAK,2DAAKC,KAAL,wBAAWhB,GAAhB;AAAA;AAAA;AAAA;AAAA,UAAqB,CAArB;AACAO,QAAEY,GAAF;AACD,KAJD;AAKD,GAZD;AAaD,CAhBD","file":"user-state-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport UserStateResponseHandler from '../../src/response-handlers/user-state-response-handler'; // eslint-disable-line max-len\nimport UserStateResponse from '../../src/responses/user-state-response';\nimport checkNotNullTest from '../helpers/check-not-null.js';\nimport User from '../../src/user';\nimport FirebaseServer from 'firebase-server';\nimport { overrideSettings } from '../../src/firebase-db';\n\noverrideSettings({\n  STATEFUL_CONNSTR: 'ws://localhost.firebaseio.test:5502',\n  STATEFUL_CREDENTIALS_FILE: undefined,\n});\n\nlet server = null;\n\ntest.before(() => {\n  server = new FirebaseServer(5502, 'localhost.firebaseio.test', {\n    users: {\n      cli_1: { foo: 1, bar: 2 },\n    },\n  });\n});\n\ntest.after.always('guaranteed cleanup', () => {\n  server.close();\n});\n\ncheckNotNullTest(['response', 'user'], (args) => { new UserStateResponseHandler(args); });\n\ntest('can be constructed with default parameters', t => {\n  new UserStateResponseHandler({ response: {}, user: {} });\n  t.pass();\n});\n\ntest.cb('updates user object', t => {\n  t.plan(4);\n\n  new User({ platformType: 'cli', platformId: 1 }).load().then((user) => {\n    t.is(user.state.foo, 1);\n    t.is(user.state.bar, 2);\n\n    const response = new UserStateResponse({ foo: 123 });\n    const handler = new UserStateResponseHandler({ response, user });\n\n    handler.call(() => {\n      t.is(user.state.foo, 123);\n      t.is(user.state.bar, 2);\n      t.end();\n    });\n  });\n});\n"]}