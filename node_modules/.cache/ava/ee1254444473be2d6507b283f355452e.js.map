{"version":3,"sources":["promise-response-handler-test.js"],"names":["h","response","user","t","is","type","truthy","pass","cb","promise","resolve","setTimeout","platformType","call","end"],"mappings":";;;;;;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AAAA;AAAA;;AACtD,MAAMA,IAAI,qCAA2B,EAAEC,UAAU,EAAZ,EAAgBC,MAAM,EAAtB,EAA3B,CAAV;AACAC,IAAEC,EAAF,uBAAK,oCAAEC,IAAP;AAAA;AAAA;AAAA;AAAA,MAAa,0BAAb;AACAF,IAAEG,MAAF,yBAAS,qCAAEJ,IAAX;AAAA;AAAA;AAAA;AAAA;AACAC,IAAEI,IAAF;AACD,CALD;;AAOA,cAAKC,EAAL,CAAQ,qCAAR,EAA+C,aAAK;AAClD,MAAMA,KAAK,SAALA,EAAK;AAAA,WAAM,iCAAN;AAAA,GAAX,CADkD,CACR;AAC1C,MAAMC,UAAU,sBAAY,UAACC,OAAD,EAAa;AACvC;AACAC,eAAWD,OAAX,EAAoB,CAApB;AACD,GAHe,CAAhB;AAIA,MAAMT,WAAW,8BAAoB,EAAEQ,gBAAF,EAAWD,MAAX,EAApB,CAAjB;AACA,MAAMR,IAAI,qCAA2B,EAAEC,kBAAF,EAAYC,MAAM,EAAEU,cAAc,KAAhB,EAAlB,EAA3B,CAAV;AACAZ,IAAEa,IAAF,CAAO,YAAM;AACXV,MAAEW,GAAF;AACD,GAFD;AAGD,CAXD","file":"promise-response-handler-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-console */\nimport test from 'ava';\nimport PromiseResponseHandler from '../../src/response-handlers/promise-response-handler';\nimport PromiseResponse from '../../src/responses/promise-response';\nimport CompositeResponse from '../../src/responses/composite-response';\n\ntest('can be constructed with default parameters', t => {\n  const h = new PromiseResponseHandler({ response: {}, user: {} });\n  t.is(h.type, 'promise-response-handler');\n  t.truthy(h.user);\n  t.pass();\n});\n\ntest.cb('should execute promise and callback', t => {\n  const cb = () => new CompositeResponse(); // just empty response\n  const promise = new Promise((resolve) => {\n    // let's do some custom asynchronous operation here, this is why this handler was introduced.\n    setTimeout(resolve, 1);\n  });\n  const response = new PromiseResponse({ promise, cb });\n  const h = new PromiseResponseHandler({ response, user: { platformType: 'cli' } });\n  h.call(() => {\n    t.end();\n  });\n});\n"]}