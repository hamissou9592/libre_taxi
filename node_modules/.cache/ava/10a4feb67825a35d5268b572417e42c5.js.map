{"version":3,"sources":["error-response-test.js"],"names":["message","t","pass","r","is","type","cb","err","throws","end"],"mappings":";;;;;;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AACtD,8BAAkB,EAAEA,SAAS,OAAX,EAAlB;AACAC,IAAEC,IAAF;AACD,CAHD;;AAKA,mBAAK,+CAAL,EAAsD,aAAK;AAAA;AAAA;;AACzD,MAAMC,IAAI,4BAAkB,EAAEH,SAAS,kBAAX,EAAlB,CAAV;AACAC,IAAEG,EAAF,uBAAK,oCAAEJ,OAAP;AAAA;AAAA;AAAA;AAAA,MAAgB,kBAAhB;AACAC,IAAEG,EAAF,yBAAK,qCAAEC,IAAP;AAAA;AAAA;AAAA;AAAA,MAAa,OAAb;AACD,CAJD;;AAMA,cAAKC,EAAL,CAAQ,wDAAR,EAAkE,aAAK;AACrE,MAAMC,MAAM,iCAAZ;;AAEAN,IAAEO,MAAF;AAAA,WAAS,YAAM;AACb;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEGD,GAFH;;AAIAN,IAAEQ,GAAF;AACD,CARD","file":"error-response-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport ErrorResponse from '../../src/responses/error-response';\n\ntest('can be constructed with default parameters', t => {\n  new ErrorResponse({ message: 'error' });\n  t.pass();\n});\n\ntest('should save message as property and have type', t => {\n  const r = new ErrorResponse({ message: 'this is an error' });\n  t.is(r.message, 'this is an error');\n  t.is(r.type, 'error');\n});\n\ntest.cb('should throw argument error when message not specified', t => {\n  const err = 'message parameter not specified';\n\n  t.throws(() => {\n    new ErrorResponse();\n  }, err);\n\n  t.end();\n});\n"]}