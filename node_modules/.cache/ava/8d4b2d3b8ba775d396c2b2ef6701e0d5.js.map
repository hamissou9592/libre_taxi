{"version":3,"sources":["index-test.js"],"names":["user","state","muted","i18n","t","pass","action","response","get","is","type","condition","actual","expected","okResponse","ok","errResponse","err","rows","value","label","__","post","responses","message","path","falsy","deepEqual","arr"],"mappings":"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","file":"index-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new, no-unused-vars */\nimport test from 'ava';\nimport routes from '../../../src/routes'; // to aviod circular dependencies\nimport DriverIndex from '../../../src/actions/menu/driver/index';\nimport { i18n } from '../../spec-support';\n\nconst user = { state: { muted: 'foo' } };\n\ntest('can be constructed with default parameters', t => {\n  new DriverIndex({ i18n, user });\n  t.pass();\n});\n\ntest('should return options response on get', t => {\n  const action = new DriverIndex({ i18n, user });\n  const response = action.get();\n  t.is(response.type, 'if');\n  t.is(response.condition.type, 'equals');\n  t.is(response.condition.actual, 'foo');\n  t.is(response.condition.expected, true);\n\n  const okResponse = response.ok;\n  const errResponse = response.err;\n\n  t.is(okResponse.type, 'options');\n  t.is(okResponse.rows[0][0].value, 'checkin');\n  t.is(okResponse.rows[1][0].value, 'unmute');\n  t.is(okResponse.rows[2][0].value, 'settings');\n  t.is(okResponse.rows[0][0].label, i18n.__('driver-index.checkin'));\n  t.is(okResponse.rows[1][0].label, i18n.__('driver-index.unmute'));\n  t.is(okResponse.rows[2][0].label, i18n.__('driver-index.settings'));\n\n  t.is(errResponse.type, 'options');\n  t.is(errResponse.rows[0][0].value, 'checkin');\n  t.is(errResponse.rows[1][0].value, 'mute');\n  t.is(errResponse.rows[2][0].value, 'settings');\n  t.is(errResponse.rows[0][0].label, i18n.__('driver-index.checkin'));\n  t.is(errResponse.rows[1][0].label, i18n.__('driver-index.mute'));\n  t.is(errResponse.rows[2][0].label, i18n.__('driver-index.settings'));\n});\n\ntest('should return composite response on post', t => {\n  const action = new DriverIndex({ i18n, user });\n\n  const response = action.post('bar');\n  t.is(response.type, 'composite');\n  t.is(response.responses[0].type, 'text');\n  t.is(response.responses[0].message, 'ðŸ‘Œ OK!');\n\n  t.is(response.responses[1].type, 'if');\n  t.is(response.responses[1].condition.type, 'equals');\n  t.is(response.responses[1].condition.actual, 'bar');\n  t.is(response.responses[1].condition.expected, 'checkin');\n  t.is(response.responses[1].ok.type, 'redirect');\n  t.is(response.responses[1].ok.path, 'driver-checkin');\n  t.falsy(response.responses[1].err);\n\n  t.is(response.responses[2].type, 'if');\n  t.is(response.responses[2].condition.type, 'equals');\n  t.is(response.responses[2].condition.actual, 'bar');\n  t.is(response.responses[2].condition.expected, 'mute');\n  t.is(response.responses[2].ok.type, 'redirect');\n  t.is(response.responses[2].ok.path, 'driver-mute');\n  t.falsy(response.responses[2].err);\n\n  t.is(response.responses[3].type, 'if');\n  t.is(response.responses[3].condition.type, 'equals');\n  t.is(response.responses[3].condition.actual, 'bar');\n  t.is(response.responses[3].condition.expected, 'unmute');\n  t.is(response.responses[3].ok.type, 'redirect');\n  t.is(response.responses[3].ok.path, 'driver-unmute');\n  t.falsy(response.responses[3].err);\n\n  t.is(response.responses[4].type, 'if');\n  t.is(response.responses[4].condition.type, 'equals');\n  t.is(response.responses[4].condition.actual, 'bar');\n  t.is(response.responses[4].condition.expected, 'settings');\n  t.is(response.responses[4].ok.type, 'redirect');\n  t.is(response.responses[4].ok.path, 'settings');\n  t.falsy(response.responses[4].err);\n\n  t.is(response.responses[5].type, 'if');\n  t.is(response.responses[5].condition.type, 'not-in');\n  t.is(response.responses[5].condition.value, 'bar');\n  t.deepEqual(response.responses[5].condition.arr, ['checkin', 'mute', 'unmute', 'settings']);\n  t.is(response.responses[5].ok.type, 'error');\n  t.is(response.responses[5].ok.message, i18n.__('driver-index.unknown_choice'));\n  t.falsy(response.responses[5].err);\n});\n"]}