'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */
// eslint-disable-line max-len


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _inlineOptionsResponseHandler = require('../../../src/response-handlers/cli/inline-options-response-handler');

var _inlineOptionsResponseHandler2 = _interopRequireDefault(_inlineOptionsResponseHandler);

var _inlineOptionsResponse = require('../../../src/responses/inline-options-response');

var _inlineOptionsResponse2 = _interopRequireDefault(_inlineOptionsResponse);

var _checkNotNull = require('../../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _cliHotkeys = require('../../../src/cli-hotkeys');

var _cliHotkeys2 = _interopRequireDefault(_cliHotkeys);

var _specSupport = require('../../spec-support');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)('response', function (args) {
  new _inlineOptionsResponseHandler2.default(args);
});

var response = new _inlineOptionsResponse2.default({
  rows: [[{ label: 'One', value: '1' }, { label: 'Two', value: '2' }, { label: 'Three', value: '3' }]]
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _inlineOptionsResponseHandler2.default({ response: {} });
  t.pass();
});

_ava2.default.cb('should print the message to console', function (t) {
  var h = new _inlineOptionsResponseHandler2.default({ response: response, user: {} });
  var tmp = console.log;
  console.log = _specSupport.ss.sinon.spy();

  h.call(function () {
    var _rec = new _powerAssertRecorder();

    t.truthy(_rec._expr(_rec._capt(_rec._capt(_rec._capt(console, 'arguments/0/callee/object/object').log, 'arguments/0/callee/object').calledWith('[One] (^Q), [Two] (^W), [Three] (^E)'), 'arguments/0'), {
      content: 't.truthy(console.log.calledWith(\'[One] (^Q), [Two] (^W), [Three] (^E)\'))',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 51
    }));
    console.log = tmp;
    t.end();
  });
});

_ava2.default.cb('should clear all hotkeys and set hotkeys', function (t) {
  var h = new _inlineOptionsResponseHandler2.default({ response: response, user: {} });
  var tmp = console.log;
  console.log = _specSupport.ss.sinon.spy();
  _cliHotkeys2.default.clearAll = _specSupport.ss.sinon.spy();
  _cliHotkeys2.default.set = _specSupport.ss.sinon.spy();

  h.call(function () {
    var _rec2 = new _powerAssertRecorder(),
        _rec3 = new _powerAssertRecorder(),
        _rec4 = new _powerAssertRecorder(),
        _rec5 = new _powerAssertRecorder();

    t.truthy(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_cliHotkeys2.default, 'arguments/0/callee/object/object').clearAll, 'arguments/0/callee/object').calledWith(), 'arguments/0'), {
      content: 't.truthy(hotkeys.clearAll.calledWith())',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 65
    }));
    t.truthy(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(_cliHotkeys2.default, 'arguments/0/callee/object/object').set, 'arguments/0/callee/object').calledWith('Q'), 'arguments/0'), {
      content: 't.truthy(hotkeys.set.calledWith(\'Q\'))',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 66
    }));
    t.truthy(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_cliHotkeys2.default, 'arguments/0/callee/object/object').set, 'arguments/0/callee/object').calledWith('W'), 'arguments/0'), {
      content: 't.truthy(hotkeys.set.calledWith(\'W\'))',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 67
    }));
    t.truthy(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_cliHotkeys2.default, 'arguments/0/callee/object/object').set, 'arguments/0/callee/object').calledWith('E'), 'arguments/0'), {
      content: 't.truthy(hotkeys.set.calledWith(\'E\'))',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 68
    }));
    _sinon2.default.assert.callOrder(_cliHotkeys2.default.clearAll, _cliHotkeys2.default.set);
    console.log = tmp;
    t.end();
  });
});

_ava2.default.cb('should set correct callbacks for hotkeys', function (t) {
  var h = new _inlineOptionsResponseHandler2.default({ response: response, user: {} });
  var tmp = console.log;
  var hh = {};
  console.log = _specSupport.ss.sinon.spy();
  _cliHotkeys2.default.clearAll = _specSupport.ss.sinon.spy();
  _cliHotkeys2.default.set = function (k, v) {
    hh[k] = v;
  };

  h.call(function () {
    var _rec6 = new _powerAssertRecorder(),
        _rec7 = new _powerAssertRecorder(),
        _rec8 = new _powerAssertRecorder(),
        _rec9 = new _powerAssertRecorder(),
        _rec10 = new _powerAssertRecorder(),
        _rec11 = new _powerAssertRecorder();

    t.truthy(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(hh, 'arguments/0/object/object').Q, 'arguments/0/object').type, 'arguments/0'), {
      content: 't.truthy(hh.Q.type, \'inline-button-callback\')',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 84
    }), 'inline-button-callback');
    t.truthy(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(hh, 'arguments/0/object/object').W, 'arguments/0/object').type, 'arguments/0'), {
      content: 't.truthy(hh.W.type, \'inline-button-callback\')',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 85
    }), 'inline-button-callback');
    t.truthy(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(hh, 'arguments/0/object/object').E, 'arguments/0/object').type, 'arguments/0'), {
      content: 't.truthy(hh.E.type, \'inline-button-callback\')',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 86
    }), 'inline-button-callback');
    t.is(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(hh, 'arguments/0/object/object').Q, 'arguments/0/object').value, 'arguments/0'), {
      content: 't.is(hh.Q.value, \'1\')',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 87
    }), '1');
    t.is(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(hh, 'arguments/0/object/object').W, 'arguments/0/object').value, 'arguments/0'), {
      content: 't.is(hh.W.value, \'2\')',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 88
    }), '2');
    t.is(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(hh, 'arguments/0/object/object').E, 'arguments/0/object').value, 'arguments/0'), {
      content: 't.is(hh.E.value, \'3\')',
      filepath: 'test/response-handlers/cli/inline-options-response-handler-test.js',
      line: 89
    }), '3');
    console.log = tmp;
    t.end();
  });
});
//# sourceMappingURL=../../../node_modules/.cache/ava/fdc7773da5e94eb59681923e8cbe2ed7.js.map