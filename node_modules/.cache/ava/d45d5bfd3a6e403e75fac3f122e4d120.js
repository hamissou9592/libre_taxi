'use strict';

var _assign = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/object/assign.js');

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/object/get-prototype-of.js');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/classCallCheck.js');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/createClass.js');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/possibleConstructorReturn.js');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/inherits.js');

var _inherits3 = _interopRequireDefault(_inherits2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new */


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _textToValue = require('../../src/support/text-to-value');

var _textToValue2 = _interopRequireDefault(_textToValue);

var _actionFactory = require('../../src/factories/action-factory');

var _actionFactory2 = _interopRequireDefault(_actionFactory);

var _action = require('../../src/action');

var _action2 = _interopRequireDefault(_action);

var _optionsResponse = require('../../src/responses/options-response');

var _optionsResponse2 = _interopRequireDefault(_optionsResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function (_Action) {
  (0, _inherits3.default)(Foo, _Action);

  function Foo(options) {
    (0, _classCallCheck3.default)(this, Foo);
    return (0, _possibleConstructorReturn3.default)(this, (Foo.__proto__ || (0, _getPrototypeOf2.default)(Foo)).call(this, (0, _assign2.default)({ type: 'foo' }, options)));
  }

  (0, _createClass3.default)(Foo, [{
    key: 'get',
    value: function get() {
      return new _optionsResponse2.default({ rows: [[{ label: 'OK', value: '_ok_' }, { label: 'Cancel', value: '_cancel_' }]] });
    }
  }, {
    key: 'post',
    value: function post() {
      return new _optionsResponse2.default({ rows: [[{ label: 'OK2', value: '_ok2_' }, { label: 'Cancel2', value: '_cancel2_' }]] });
    }
  }]);
  return Foo;
}(_action2.default);

var user = { state: {} };

(0, _ava2.default)('should convert text to value for the action', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder(),
      _rec5 = new _powerAssertRecorder();

  _actionFactory2.default.fromRoute = function () {
    return new Foo({ i18n: {}, user: user });
  };
  t.is(_rec._expr(_rec._capt((0, _textToValue2.default)(_rec._capt(user, 'arguments/0/arguments/0'), 'OK'), 'arguments/0'), {
    content: 't.is(textToValue(user, \'OK\'), \'_ok_\')',
    filepath: 'test/support/text-to-value-test.js',
    line: 48
  }), '_ok_');
  t.is(_rec2._expr(_rec2._capt((0, _textToValue2.default)(_rec2._capt(user, 'arguments/0/arguments/0'), 'Cancel'), 'arguments/0'), {
    content: 't.is(textToValue(user, \'Cancel\'), \'_cancel_\')',
    filepath: 'test/support/text-to-value-test.js',
    line: 49
  }), '_cancel_');
  t.is(_rec3._expr(_rec3._capt((0, _textToValue2.default)(_rec3._capt(user, 'arguments/0/arguments/0'), 'OK2'), 'arguments/0'), {
    content: 't.is(textToValue(user, \'OK2\'), \'OK2\')',
    filepath: 'test/support/text-to-value-test.js',
    line: 50
  }), 'OK2'); // should ignore post method
  t.is(_rec4._expr(_rec4._capt((0, _textToValue2.default)(_rec4._capt(user, 'arguments/0/arguments/0'), 'Cancel2'), 'arguments/0'), {
    content: 't.is(textToValue(user, \'Cancel2\'), \'Cancel2\')',
    filepath: 'test/support/text-to-value-test.js',
    line: 51
  }), 'Cancel2'); // should ignore post method
  t.is(_rec5._expr(_rec5._capt((0, _textToValue2.default)(_rec5._capt(user, 'arguments/0/arguments/0'), 'foo'), 'arguments/0'), {
    content: 't.is(textToValue(user, \'foo\'), \'foo\')',
    filepath: 'test/support/text-to-value-test.js',
    line: 52
  }), 'foo');
});
//# sourceMappingURL=../../node_modules/.cache/ava/d45d5bfd3a6e403e75fac3f122e4d120.js.map