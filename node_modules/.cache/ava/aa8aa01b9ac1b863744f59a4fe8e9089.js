'use strict';

var _promise = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/promise.js');

var _promise2 = _interopRequireDefault(_promise);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */
// eslint-disable-line max-len


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _requestUserInputResponseHandler = require('../../../src/response-handlers/cli/request-user-input-response-handler');

var _requestUserInputResponseHandler2 = _interopRequireDefault(_requestUserInputResponseHandler);

var _requestUserInputResponse = require('../../../src/responses/request-user-input-response');

var _requestUserInputResponse2 = _interopRequireDefault(_requestUserInputResponse);

var _checkNotNull = require('../../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _specSupport = require('../../spec-support');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _checkNotNull2.default)('response', function (args) {
  new _requestUserInputResponseHandler2.default(args);
});

var responseObject = new _requestUserInputResponse2.default();

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _requestUserInputResponseHandler2.default({ response: {} });
  t.pass();
});

_ava2.default.cb('calls inquirer library with correct parameters', function (t) {
  // arrange
  var lib = {
    prompt: _specSupport.ss.sinon.stub().returns(new _promise2.default(function (resolve) {
      resolve({ message: 'bla bla' });
    }))
  };
  var h = new _requestUserInputResponseHandler2.default({
    response: responseObject,
    lib: lib // <= inject our library
  });

  // assert
  var assert = function assert(resultValue) {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    t.is(_rec._expr(_rec._capt(resultValue, 'arguments/0'), {
      content: 't.is(resultValue, \'bla bla\')',
      filepath: 'test/response-handlers/cli/request-user-input-response-handler-test.js',
      line: 51
    }), 'bla bla');
    t.truthy(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(lib, 'arguments/0/callee/object/object').prompt, 'arguments/0/callee/object').calledWith(_rec2._capt([_rec2._capt({
      type: 'input',
      name: 'message',
      message: 'Your input:'
    }, 'arguments/0/arguments/0/elements/0')], 'arguments/0/arguments/0')), 'arguments/0'), {
      content: 't.truthy(lib.prompt.calledWith([{ type: \'input\', name: \'message\', message: \'Your input:\' }]))',
      filepath: 'test/response-handlers/cli/request-user-input-response-handler-test.js',
      line: 52
    }));
    t.end();
  };

  // act
  h.call(assert);
});

_ava2.default.cb('handles error while using inquirer library', function (t) {
  // arrange
  var err = 'Sample error';
  var lib = {
    prompt: function prompt() {
      return new _promise2.default(function (resolve, reject) {
        reject(err);
      });
    }
  };
  var h = new _requestUserInputResponseHandler2.default({
    response: responseObject,
    lib: lib // <= inject our library
  });

  // assert
  var assert = function assert(actualMessage) {
    var _rec3 = new _powerAssertRecorder(),
        _rec4 = new _powerAssertRecorder();

    var expectedMessage = 'Error in RequestUserInputResponseHandler: ' + err;
    t.is(_rec3._expr(_rec3._capt(actualMessage, 'arguments/0'), {
      content: 't.is(actualMessage, expectedMessage)',
      filepath: 'test/response-handlers/cli/request-user-input-response-handler-test.js',
      line: 80
    }), _rec4._expr(_rec4._capt(expectedMessage, 'arguments/1'), {
      content: 't.is(actualMessage, expectedMessage)',
      filepath: 'test/response-handlers/cli/request-user-input-response-handler-test.js',
      line: 80
    }));
    t.end();

    // cleanup
    console.log = tmp; // eslint-disable-line no-use-before-define
  };

  var tmp = console.log;
  console.log = assert;

  // act
  h.call(function () {});
});
//# sourceMappingURL=../../../node_modules/.cache/ava/aa8aa01b9ac1b863744f59a4fe8e9089.js.map