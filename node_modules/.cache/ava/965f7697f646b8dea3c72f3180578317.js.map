{"version":3,"sources":["composite-response-test.js"],"names":["r","t","is","type","truthy","responses","add","message","length"],"mappings":";;weAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AAAA;;AACtD,MAAMA,IAAI,iCAAV;AACAC,IAAEC,EAAF,uBAAK,oCAAEC,IAAP;AAAA;AAAA;AAAA;AAAA,MAAa,WAAb;AACD,CAHD;;AAKA,mBAAK,8CAAL,EAAqD,aAAK;AAAA;;AACxD,MAAMH,IAAI,iCAAV;AACAC,IAAEG,MAAF,yBAAS,qCAAEC,SAAX;AAAA;AAAA;AAAA;AAAA;AACD,CAHD;;AAKA,mBAAK,sBAAL,EAA6B,aAAK;AAAA;;AAChC,MAAML,IAAI,kCACPM,GADO,CACH,2BAAiB,EAAEC,SAAS,KAAX,EAAjB,CADG,EAEPD,GAFO,CAEH,2BAAiB,EAAEC,SAAS,KAAX,EAAjB,CAFG,EAGPD,GAHO,CAGH,2BAAiB,EAAEC,SAAS,OAAX,EAAjB,CAHG,CAAV;;AAKAN,IAAEC,EAAF,yBAAK,wDAAEG,SAAF,wBAAYG,MAAjB;AAAA;AAAA;AAAA;AAAA,MAAyB,CAAzB;AACD,CAPD","file":"composite-response-test.js","sourcesContent":["/*\n    LibreTaxi, free and open source ride sharing platform.\n    Copyright (C) 2016-2017  Roman Pushkin\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable no-new */\nimport test from 'ava';\nimport TextResponse from '../../src/responses/text-response';\nimport CompositeResponse from '../../src/responses/composite-response';\n\ntest('can be constructed with default parameters', t => {\n  const r = new CompositeResponse();\n  t.is(r.type, 'composite');\n});\n\ntest('should have \"responses\" property initialized', t => {\n  const r = new CompositeResponse();\n  t.truthy(r.responses);\n});\n\ntest('should add responses', t => {\n  const r = new CompositeResponse()\n    .add(new TextResponse({ message: 'one' }))\n    .add(new TextResponse({ message: 'two' }))\n    .add(new TextResponse({ message: 'three' }));\n\n  t.is(r.responses.length, 3);\n});\n"]}