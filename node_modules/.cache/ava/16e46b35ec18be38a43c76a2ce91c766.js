'use strict';

var _getPrototypeOf = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/object/get-prototype-of.js');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/classCallCheck.js');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/possibleConstructorReturn.js');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/inherits.js');

var _inherits3 = _interopRequireDefault(_inherits2);

var _typeof2 = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/helpers/typeof.js');

var _typeof3 = _interopRequireDefault(_typeof2);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _mixwith = require('mixwith');

var _validatedOptionsResponse = require('../../src/validations/validated-options-response');

var _validatedOptionsResponse2 = _interopRequireDefault(_validatedOptionsResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _avaThrowsHelper(fn, data) {
  try {
    return fn();
  } catch (e) {
    var type = typeof e === 'undefined' ? 'undefined' : (0, _typeof3.default)(e);

    if (e !== null && (type === "object" || type === "function")) {
      try {
        Object.defineProperty(e, "_avaThrowsHelperData", {
          value: data
        });
      } catch (e) {}
    }

    throw e;
  }
} /*
      LibreTaxi, free and open source ride sharing platform.
      Copyright (C) 2016-2017  Roman Pushkin
  
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU Affero General Public License as
      published by the Free Software Foundation, either version 3 of the
      License, or (at your option) any later version.
  
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Affero General Public License for more details.
  
      You should have received a copy of the GNU Affero General Public License
      along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */

/* eslint-disable no-new */


var ValidatedOptionsResponse = function (_mix$with) {
  (0, _inherits3.default)(ValidatedOptionsResponse, _mix$with);

  function ValidatedOptionsResponse() {
    (0, _classCallCheck3.default)(this, ValidatedOptionsResponse);
    return (0, _possibleConstructorReturn3.default)(this, (ValidatedOptionsResponse.__proto__ || (0, _getPrototypeOf2.default)(ValidatedOptionsResponse)).apply(this, arguments));
  }

  return ValidatedOptionsResponse;
}((0, _mixwith.mix)(function () {
  function _class() {
    (0, _classCallCheck3.default)(this, _class);
  }

  return _class;
}()).with(_validatedOptionsResponse2.default));

_ava2.default.cb('should throw type error when rows is not array', function (t) {
  var err = 'rows parameter is expected to be an array';

  t.throws(_avaThrowsHelper(function () {
    return function () {
      new ValidatedOptionsResponse({
        rows: 'something'
      });
    };
  }, {
    line: 29,
    column: 11,
    source: '() => {\n    new ValidatedOptionsResponse({\n      rows: \'something\',\n    });\n  }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/validations/validated-options-response-test.js'
  }), err);

  t.end();
});

_ava2.default.cb('should throw type error when row is not array', function (t) {
  var err = 'row is expected to be an array';

  t.throws(_avaThrowsHelper(function () {
    return function () {
      new ValidatedOptionsResponse({
        rows: [[{ label: 'Ok', value: 'ok' }], // array, OK
        {}]
      });
    };
  }, {
    line: 41,
    column: 11,
    source: '() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [{ label: \'Ok\', value: \'ok\' }], // array, OK\n        {}, // not array, ERR\n      ],\n    });\n  }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/validations/validated-options-response-test.js'
  }), err);

  t.end();
});

_ava2.default.cb('should throw type error when row item is not object', function (t) {
  var err = 'row item is expected to be an object';

  t.throws(_avaThrowsHelper(function () {
    return function () {
      new ValidatedOptionsResponse({
        rows: [[{ label: 'Ok', value: 'ok' }, // object, OK
        'something else']]
      });
    };
  }, {
    line: 56,
    column: 11,
    source: '() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [\n          { label: \'Ok\', value: \'ok\' }, // object, OK\n          \'something else\', // not object, ERR\n        ],\n      ],\n    });\n  }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/validations/validated-options-response-test.js'
  }), err);

  t.end();
});

_ava2.default.cb('should throw argument error when row item has no value property', function (t) {
  var err = 'row item is expected to have \'value\' property';

  t.throws(_avaThrowsHelper(function () {
    return function () {
      new ValidatedOptionsResponse({
        rows: [[{ label: 'Ok' }]]
      });
    };
  }, {
    line: 73,
    column: 11,
    source: '() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [\n          { label: \'Ok\' }, // no `value` property\n        ],\n      ],\n    });\n  }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/validations/validated-options-response-test.js'
  }), err);

  t.end();
});

_ava2.default.cb('should throw argument error when row item has no label property', function (t) {
  var err = 'row item is expected to have \'label\' property';

  t.throws(_avaThrowsHelper(function () {
    return function () {
      new ValidatedOptionsResponse({
        rows: [[{ value: 'ok' }]]
      });
    };
  }, {
    line: 89,
    column: 11,
    source: '() => {\n    new ValidatedOptionsResponse({\n      rows: [\n        [\n          { value: \'ok\' }, // no `label` property\n        ],\n      ],\n    });\n  }',
    filename: '/home/hamissou/Bureau/libretaxi-master/test/validations/validated-options-response-test.js'
  }), err);

  t.end();
});
//# sourceMappingURL=../../node_modules/.cache/ava/16e46b35ec18be38a43c76a2ce91c766.js.map