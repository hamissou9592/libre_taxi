'use strict';

var _promise = require('/home/hamissou/Bureau/libretaxi-master/node_modules/babel-runtime/core-js/promise.js');

var _promise2 = _interopRequireDefault(_promise);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LibreTaxi, free and open source ride sharing platform.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copyright (C) 2016-2017  Roman Pushkin
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            it under the terms of the GNU Affero General Public License as
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            published by the Free Software Foundation, either version 3 of the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            License, or (at your option) any later version.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            but WITHOUT ANY WARRANTY; without even the implied warranty of
or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GNU Affero General Public License for more details.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            You should have received a copy of the GNU Affero General Public License
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */

/* eslint-disable no-new, no-console */
// eslint-disable-line max-len


var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _updateLocationResponseHandler = require('../../src/response-handlers/update-location-response-handler');

var _updateLocationResponseHandler2 = _interopRequireDefault(_updateLocationResponseHandler);

var _updateLocationResponse = require('../../src/responses/update-location-response');

var _updateLocationResponse2 = _interopRequireDefault(_updateLocationResponse);

var _checkNotNull = require('../helpers/check-not-null.js');

var _checkNotNull2 = _interopRequireDefault(_checkNotNull);

var _user = require('../../src/user');

var _user2 = _interopRequireDefault(_user);

var _firebaseServer = require('firebase-server');

var _firebaseServer2 = _interopRequireDefault(_firebaseServer);

var _firebaseDb = require('../../src/firebase-db');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _firebaseDb.overrideSettings)({
  STATEFUL_CONNSTR: 'ws://localhost.firebaseio.test:5503',
  STATEFUL_CREDENTIALS_FILE: undefined
});

var server = null;

_ava2.default.before(function () {
  server = new _firebaseServer2.default(5503, 'localhost.firebaseio.test', {
    users: {
      cli_1: { foo: 1, bar: 2 }
    }
  });
});

_ava2.default.after.always('guaranteed cleanup', function () {
  server.close();
});

(0, _checkNotNull2.default)(['response', 'user'], function (args) {
  new _updateLocationResponseHandler2.default(args);
});

(0, _ava2.default)('can be constructed with default parameters', function (t) {
  new _updateLocationResponseHandler2.default({ response: {}, user: {} });
  t.pass();
});

_ava2.default.cb('updates user object', function (t) {
  t.plan(6);

  new _user2.default({ platformType: 'cli', platformId: 1 }).load().then(function (user) {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    t.falsy(_rec._expr(_rec._capt(_rec._capt(_rec._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').l, 'arguments/0'), {
      content: 't.falsy(user.state.l)',
      filepath: 'test/response-handlers/update-location-response-handler-test.js',
      line: 58
    }));
    t.falsy(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').locationUpdatedAt, 'arguments/0'), {
      content: 't.falsy(user.state.locationUpdatedAt)',
      filepath: 'test/response-handlers/update-location-response-handler-test.js',
      line: 59
    }));

    var response = new _updateLocationResponse2.default({ location: [37.421955, -122.084058] });
    var handler = new _updateLocationResponseHandler2.default({ response: response, user: user });

    handler.call(function () {
      var _rec3 = new _powerAssertRecorder(),
          _rec4 = new _powerAssertRecorder(),
          _rec5 = new _powerAssertRecorder(),
          _rec6 = new _powerAssertRecorder(),
          _rec7 = new _powerAssertRecorder();

      t.truthy(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(user, 'arguments/0/object/object').state, 'arguments/0/object').l, 'arguments/0'), {
        content: 't.truthy(user.state.l)',
        filepath: 'test/response-handlers/update-location-response-handler-test.js',
        line: 65
      }));
      t.is(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(user, 'arguments/0/left/object/object').state, 'arguments/0/left/object').locationUpdatedAt, 'arguments/0/left') > 1473218180745, 'arguments/0'), {
        content: 't.is(user.state.locationUpdatedAt > 1473218180745, true)',
        filepath: 'test/response-handlers/update-location-response-handler-test.js',
        line: 66
      }), true); // 07 Sep 2016 03:16:20.745 GMT
      t.is(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(_rec5._capt(user, 'arguments/0/object/object/object').state, 'arguments/0/object/object').l, 'arguments/0/object')[0], 'arguments/0'), {
        content: 't.is(user.state.l[0], 37.421955)',
        filepath: 'test/response-handlers/update-location-response-handler-test.js',
        line: 67
      }), 37.421955);
      t.is(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(_rec6._capt(user, 'arguments/0/object/object/object').state, 'arguments/0/object/object').l, 'arguments/0/object')[1], 'arguments/0'), {
        content: 't.is(user.state.l[1], -122.084058)',
        filepath: 'test/response-handlers/update-location-response-handler-test.js',
        line: 68
      }), _rec7._expr(_rec7._capt(-122.084058, 'arguments/1'), {
        content: 't.is(user.state.l[1], -122.084058)',
        filepath: 'test/response-handlers/update-location-response-handler-test.js',
        line: 68
      }));
      t.end();
    });
  });
});
//
_ava2.default.cb('handles error while saving location', function (t) {
  var err = 'Sample error';

  // assert function, to be executed on `act`
  var assert = function assert(actualMessage) {
    var _rec8 = new _powerAssertRecorder(),
        _rec9 = new _powerAssertRecorder();

    var expectedMessage = 'Error in UpdateLocationResponseHandler: ' + err;
    t.is(_rec8._expr(_rec8._capt(actualMessage, 'arguments/0'), {
      content: 't.is(actualMessage, expectedMessage)',
      filepath: 'test/response-handlers/update-location-response-handler-test.js',
      line: 80
    }), _rec9._expr(_rec9._capt(expectedMessage, 'arguments/1'), {
      content: 't.is(actualMessage, expectedMessage)',
      filepath: 'test/response-handlers/update-location-response-handler-test.js',
      line: 80
    }));
    t.end();

    // cleanup
    console.log = tmp; // eslint-disable-line no-use-before-define
  };

  // arrange: replace `console.log` with `assert` function created above
  var tmp = console.log;
  console.log = assert;

  // arrange: create fake geoFire, it will replace `handler.geoFire`
  var fakeGeoFire = { set: function set() {
      return new _promise2.default(function (resolve, reject) {
        reject(err);
      });
    } };

  // act: load user and execute handler with replaced `geoFire`
  new _user2.default({ platformType: 'cli', platformId: 1 }).load().then(function (user) {
    var response = new _updateLocationResponse2.default({ location: [37.421955, -122.084058] });
    var handler = new _updateLocationResponseHandler2.default({ response: response, user: user });
    handler.geoFire = fakeGeoFire;
    handler.call(function () {});
  });
});
//# sourceMappingURL=../../node_modules/.cache/ava/723c0047d9b47752b7a9049ff49ea80b.js.map